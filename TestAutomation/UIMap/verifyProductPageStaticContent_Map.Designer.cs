// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace ProductPageAutomation.UIMap.verifyProductPageStaticContent_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class verifyProductPageStaticContent_Map
    {
        
        /// <summary>
        /// verifyProductPageContent_Method - Use 'verifyProductPageContent_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyProductPageContent_Method()
        {
            #region Variable Declarations
            HtmlHyperlink uIOverviewHyperlink = this.UIVillaPoppyPolisCypruWindow.UIVillaPoppyPolisCypruDocument.UIVITabsPane.UIOverviewHyperlink;
            HtmlHyperlink uIPhotosHyperlink = this.UIVillaPoppyPolisCypruWindow.UIVillaPoppyPolisCypruDocument.UIVITabsPane.UIPhotosHyperlink;
            HtmlHyperlink uIVirtualtourHyperlink = this.UIVillaPoppyPolisCypruWindow.UIVillaPoppyPolisCypruDocument.UIVITabsPane.UIVirtualtourHyperlink;
            HtmlHyperlink uIReviewsHyperlink = this.UIVillaPoppyPolisCypruWindow.UIVillaPoppyPolisCypruDocument.UIVITabsPane.UIReviewsHyperlink;
            HtmlHyperlink uIAvailabilityHyperlink = this.UIVillaPoppyPolisCypruWindow.UIVillaPoppyPolisCypruDocument.UIAvailabilityCustom.UIAvailabilityHyperlink;
            HtmlDiv uIBookthisvillaPane = this.UIVillaPoppyPolisCypruWindow.UIVillaPoppyPolisCypruDocument.UIContentPane.UIBookthisvillaPane;
            HtmlInputButton uICheckAvailabilityPriButton = this.UIVillaPoppyPolisCypruWindow.UIVillaPoppyPolisCypruDocument.UICheckAvailabilityPriButton;
            #endregion

            // Verify that the 'InnerText' property of 'Overview' link equals 'Overview'
            Assert.AreEqual(this.verifyProductPageContent_MethodExpectedValues.UIOverviewHyperlinkInnerText, uIOverviewHyperlink.InnerText);

            // Verify that the 'InnerText' property of 'Photos' link equals 'Photos'
            Assert.AreEqual(this.verifyProductPageContent_MethodExpectedValues.UIPhotosHyperlinkInnerText, uIPhotosHyperlink.InnerText);

            // Verify that the 'InnerText' property of 'Virtual tour' link equals 'Virtual tour'
            Assert.AreEqual(this.verifyProductPageContent_MethodExpectedValues.UIVirtualtourHyperlinkInnerText, uIVirtualtourHyperlink.InnerText);

            // Verify that the 'InnerText' property of 'Reviews' link equals 'Reviews'
            Assert.AreEqual(this.verifyProductPageContent_MethodExpectedValues.UIReviewsHyperlinkInnerText, uIReviewsHyperlink.InnerText);

            // Verify that the 'InnerText' property of 'Availability' link equals 'Availability'
            Assert.AreEqual(this.verifyProductPageContent_MethodExpectedValues.UIAvailabilityHyperlinkInnerText, uIAvailabilityHyperlink.InnerText);

            // Verify that the 'InnerText' property of 'Book this villa' pane equals 'Book this villa
            //
            // '
            Assert.AreEqual(this.verifyProductPageContent_MethodExpectedValues.UIBookthisvillaPaneInnerText, uIBookthisvillaPane.InnerText);

            // Verify that the 'DisplayText' property of 'Check Availability & Prices' button equals 'Check Availability & Prices'
            Assert.AreEqual(this.verifyProductPageContent_MethodExpectedValues.UICheckAvailabilityPriButtonDisplayText, uICheckAvailabilityPriButton.DisplayText);
        }
        
        #region Properties
        public virtual verifyProductPageContent_MethodExpectedValues verifyProductPageContent_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyProductPageContent_MethodExpectedValues == null))
                {
                    this.mverifyProductPageContent_MethodExpectedValues = new verifyProductPageContent_MethodExpectedValues();
                }
                return this.mverifyProductPageContent_MethodExpectedValues;
            }
        }
        
        public UIVillaPoppyPolisCypruWindow UIVillaPoppyPolisCypruWindow
        {
            get
            {
                if ((this.mUIVillaPoppyPolisCypruWindow == null))
                {
                    this.mUIVillaPoppyPolisCypruWindow = new UIVillaPoppyPolisCypruWindow();
                }
                return this.mUIVillaPoppyPolisCypruWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyProductPageContent_MethodExpectedValues mverifyProductPageContent_MethodExpectedValues;
        
        private UIVillaPoppyPolisCypruWindow mUIVillaPoppyPolisCypruWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyProductPageContent_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class verifyProductPageContent_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Overview' link equals 'Overview'
        /// </summary>
        public string UIOverviewHyperlinkInnerText = "Overview";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Photos' link equals 'Photos'
        /// </summary>
        public string UIPhotosHyperlinkInnerText = "Photos";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Virtual tour' link equals 'Virtual tour'
        /// </summary>
        public string UIVirtualtourHyperlinkInnerText = "Virtual tour";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Reviews' link equals 'Reviews'
        /// </summary>
        public string UIReviewsHyperlinkInnerText = "Reviews";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Availability' link equals 'Availability'
        /// </summary>
        public string UIAvailabilityHyperlinkInnerText = "Availability";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Book this villa' pane equals 'Book this villa
        ///
        /// '
        /// </summary>
        public string UIBookthisvillaPaneInnerText = "Book this villa\r\n\r\n ";
        
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Check Availability & Prices' button equals 'Check Availability & Prices'
        /// </summary>
        public string UICheckAvailabilityPriButtonDisplayText = "Check Availability & Prices";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIVillaPoppyPolisCypruWindow : BrowserWindow
    {
        
        public UIVillaPoppyPolisCypruWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPoppyPolisCypruDocument UIVillaPoppyPolisCypruDocument
        {
            get
            {
                if ((this.mUIVillaPoppyPolisCypruDocument == null))
                {
                    this.mUIVillaPoppyPolisCypruDocument = new UIVillaPoppyPolisCypruDocument(this);
                }
                return this.mUIVillaPoppyPolisCypruDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPoppyPolisCypruDocument mUIVillaPoppyPolisCypruDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIVillaPoppyPolisCypruDocument : HtmlDocument
    {
        
        public UIVillaPoppyPolisCypruDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Villa Poppy, Polis, Cyprus, Villa Plus";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/product.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://nimbus/product.aspx?villaid=914";
            this.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
            #endregion
        }
        
        #region Properties
        public UIVITabsPane UIVITabsPane
        {
            get
            {
                if ((this.mUIVITabsPane == null))
                {
                    this.mUIVITabsPane = new UIVITabsPane(this);
                }
                return this.mUIVITabsPane;
            }
        }
        
        public UIAvailabilityCustom UIAvailabilityCustom
        {
            get
            {
                if ((this.mUIAvailabilityCustom == null))
                {
                    this.mUIAvailabilityCustom = new UIAvailabilityCustom(this);
                }
                return this.mUIAvailabilityCustom;
            }
        }
        
        public UIContentPane UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane(this);
                }
                return this.mUIContentPane;
            }
        }
        
        public HtmlInputButton UICheckAvailabilityPriButton
        {
            get
            {
                if ((this.mUICheckAvailabilityPriButton == null))
                {
                    this.mUICheckAvailabilityPriButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICheckAvailabilityPriButton.SearchProperties[HtmlButton.PropertyNames.Id] = "MainContent_btnAvailPrice";
                    this.mUICheckAvailabilityPriButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$MainContent$btnAvailPrice";
                    this.mUICheckAvailabilityPriButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Check Availability & Prices";
                    this.mUICheckAvailabilityPriButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICheckAvailabilityPriButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICheckAvailabilityPriButton.FilterProperties[HtmlButton.PropertyNames.Class] = "button";
                    this.mUICheckAvailabilityPriButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=\"MainContent_btnAvailPrice\" class=\"bu";
                    this.mUICheckAvailabilityPriButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "25";
                    this.mUICheckAvailabilityPriButton.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
                    #endregion
                }
                return this.mUICheckAvailabilityPriButton;
            }
        }
        #endregion
        
        #region Fields
        private UIVITabsPane mUIVITabsPane;
        
        private UIAvailabilityCustom mUIAvailabilityCustom;
        
        private UIContentPane mUIContentPane;
        
        private HtmlInputButton mUICheckAvailabilityPriButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIVITabsPane : HtmlDiv
    {
        
        public UIVITabsPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "VITabs";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Overview\r\nPhotos\r\nVirtual tour\r\nLocation";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "overflow-hidden font11 Border0 width100pc ui-tabs ui-widget ui-widget-content ui-" +
                "corner-all";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"VITabs\" class=\"overflow-hidden font1";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "54";
            this.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIOverviewHyperlink
        {
            get
            {
                if ((this.mUIOverviewHyperlink == null))
                {
                    this.mUIOverviewHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOverviewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIOverviewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOverviewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIOverviewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Overview";
                    this.mUIOverviewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/product.aspx";
                    this.mUIOverviewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOverviewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://nimbus/product.aspx?villaid=914#OverviewTab";
                    this.mUIOverviewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIOverviewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#OverviewTab\"";
                    this.mUIOverviewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIOverviewHyperlink.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
                    #endregion
                }
                return this.mUIOverviewHyperlink;
            }
        }
        
        public HtmlHyperlink UIPhotosHyperlink
        {
            get
            {
                if ((this.mUIPhotosHyperlink == null))
                {
                    this.mUIPhotosHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIPhotosHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIPhotosHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIPhotosHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIPhotosHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Photos";
                    this.mUIPhotosHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/product.aspx";
                    this.mUIPhotosHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIPhotosHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://nimbus/product.aspx?villaid=914#PhotosTab";
                    this.mUIPhotosHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIPhotosHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#PhotosTab\"";
                    this.mUIPhotosHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIPhotosHyperlink.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
                    #endregion
                }
                return this.mUIPhotosHyperlink;
            }
        }
        
        public HtmlHyperlink UIVirtualtourHyperlink
        {
            get
            {
                if ((this.mUIVirtualtourHyperlink == null))
                {
                    this.mUIVirtualtourHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIVirtualtourHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIVirtualtourHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIVirtualtourHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIVirtualtourHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Virtual tour";
                    this.mUIVirtualtourHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/product.aspx";
                    this.mUIVirtualtourHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIVirtualtourHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://nimbus/product.aspx?villaid=914#TourTab";
                    this.mUIVirtualtourHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIVirtualtourHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#TourTab\"";
                    this.mUIVirtualtourHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIVirtualtourHyperlink.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
                    #endregion
                }
                return this.mUIVirtualtourHyperlink;
            }
        }
        
        public HtmlHyperlink UIReviewsHyperlink
        {
            get
            {
                if ((this.mUIReviewsHyperlink == null))
                {
                    this.mUIReviewsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIReviewsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIReviewsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIReviewsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIReviewsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Reviews";
                    this.mUIReviewsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/product.aspx";
                    this.mUIReviewsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIReviewsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://nimbus/product.aspx?villaid=914#ReviewsTab";
                    this.mUIReviewsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIReviewsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#ReviewsTab\"";
                    this.mUIReviewsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "7";
                    this.mUIReviewsHyperlink.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
                    #endregion
                }
                return this.mUIReviewsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIOverviewHyperlink;
        
        private HtmlHyperlink mUIPhotosHyperlink;
        
        private HtmlHyperlink mUIVirtualtourHyperlink;
        
        private HtmlHyperlink mUIReviewsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIAvailabilityCustom : HtmlCustom
    {
        
        public UIAvailabilityCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "tbAvail";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "ui-state-default ui-corner-top";
            this.FilterProperties["ControlDefinition"] = "id=\"tbAvail\" class=\"ui-state-default ui-";
            this.FilterProperties["InnerText"] = "Availability";
            this.FilterProperties["TagInstance"] = "122";
            this.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAvailabilityHyperlink
        {
            get
            {
                if ((this.mUIAvailabilityHyperlink == null))
                {
                    this.mUIAvailabilityHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAvailabilityHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAvailabilityHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAvailabilityHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAvailabilityHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Availability";
                    this.mUIAvailabilityHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/product.aspx";
                    this.mUIAvailabilityHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAvailabilityHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://nimbus/product.aspx?villaid=914#AvailabilityTab";
                    this.mUIAvailabilityHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIAvailabilityHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#AvailabilityTab\"";
                    this.mUIAvailabilityHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAvailabilityHyperlink.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
                    #endregion
                }
                return this.mUIAvailabilityHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAvailabilityHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIContentPane : HtmlDiv
    {
        
        public UIContentPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\n\r\nVilla Poppy, Polis, Cyprus    \r\n\r\n\r\n";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\">\n        <!-- Left Hand sec";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "6";
            this.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIBookthisvillaPane
        {
            get
            {
                if ((this.mUIBookthisvillaPane == null))
                {
                    this.mUIBookthisvillaPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBookthisvillaPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIBookthisvillaPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBookthisvillaPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Book this villa\r\n\r\n ";
                    this.mUIBookthisvillaPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBookthisvillaPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "LayerBkgColor padding-bottom10 Padding-Top10";
                    this.mUIBookthisvillaPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"LayerBkgColor padding-bottom10 Pa";
                    this.mUIBookthisvillaPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "338";
                    this.mUIBookthisvillaPane.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
                    #endregion
                }
                return this.mUIBookthisvillaPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIBookthisvillaPane;
        #endregion
    }
}
