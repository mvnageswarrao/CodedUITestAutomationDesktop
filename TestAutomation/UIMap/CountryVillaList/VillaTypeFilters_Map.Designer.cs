// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.CountryVillaList.VillaTypeFilters_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class VillaTypeFilters_Map
    {
        
        /// <summary>
        /// VillaTypeFilters_Method - Use 'VillaTypeFilters_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VillaTypeFilters_Method()
        {
            #region Variable Declarations
            HtmlDiv uIVillaTypeClearFamiliPane = this.UIHttpnimbusalgarvevilWindow.UIHttpnimbusalgarvevilDocument.UIDvRightPane.UIVillaTypeClearFamiliPane;
            #endregion

            // Verify that the 'InnerText' property of 'Villa TypeClear Families and' pane contains 'Villa TypeClear   
            //
            //
            //
            //
            //Families and large groups (149)
            //
            //
            //
            //Centrally located villas (123)
            //
            //
            //
            //Beach villas (97)
            //
            //
            //
            //Couples and small groups (20)
            //
            //
            //
            //Country side villas (31)
            //
            //
            //
            //Very Villa Plus (3)
            //
            // '
            StringAssert.Contains(uIVillaTypeClearFamiliPane.InnerText, this.VillaTypeFilters_MethodExpectedValues.UIVillaTypeClearFamiliPaneInnerText);
        }
        
        #region Properties
        public virtual VillaTypeFilters_MethodExpectedValues VillaTypeFilters_MethodExpectedValues
        {
            get
            {
                if ((this.mVillaTypeFilters_MethodExpectedValues == null))
                {
                    this.mVillaTypeFilters_MethodExpectedValues = new VillaTypeFilters_MethodExpectedValues();
                }
                return this.mVillaTypeFilters_MethodExpectedValues;
            }
        }
        
        public UIHttpnimbusalgarvevilWindow UIHttpnimbusalgarvevilWindow
        {
            get
            {
                if ((this.mUIHttpnimbusalgarvevilWindow == null))
                {
                    this.mUIHttpnimbusalgarvevilWindow = new UIHttpnimbusalgarvevilWindow();
                }
                return this.mUIHttpnimbusalgarvevilWindow;
            }
        }
        #endregion
        
        #region Fields
        private VillaTypeFilters_MethodExpectedValues mVillaTypeFilters_MethodExpectedValues;
        
        private UIHttpnimbusalgarvevilWindow mUIHttpnimbusalgarvevilWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VillaTypeFilters_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class VillaTypeFilters_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Villa TypeClear Families and' pane contains 'Villa TypeClear   
        ///
        ///
        ///
        ///
        ///Families and large groups (149)
        ///
        ///
        ///
        ///Centrally located villas (123)
        ///
        ///
        ///
        ///Beach villas (97)
        ///
        ///
        ///
        ///Couples and small groups (20)
        ///
        ///
        ///
        ///Country side villas (31)
        ///
        ///
        ///
        ///Very Villa Plus (3)
        ///
        /// '
        /// </summary>
        public string UIVillaTypeClearFamiliPaneInnerText = "Villa TypeClear   \r\n\r\n\r\n\r\n\r\nFamilies and large groups (149)\r\n\r\n\r\n\r\nCentrally loca" +
            "ted villas (123)\r\n\r\n\r\n\r\nBeach villas (97)\r\n\r\n\r\n\r\nCouples and small groups (20)\r\n" +
            "\r\n\r\n\r\nCountry side villas (31)\r\n\r\n\r\n\r\nVery Villa Plus (3)\r\n\r\n ";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHttpnimbusalgarvevilWindow : BrowserWindow
    {
        
        public UIHttpnimbusalgarvevilWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "/villas", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHttpnimbusalgarvevilDocument UIHttpnimbusalgarvevilDocument
        {
            get
            {
                if ((this.mUIHttpnimbusalgarvevilDocument == null))
                {
                    this.mUIHttpnimbusalgarvevilDocument = new UIHttpnimbusalgarvevilDocument(this);
                }
                return this.mUIHttpnimbusalgarvevilDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHttpnimbusalgarvevilDocument mUIHttpnimbusalgarvevilDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHttpnimbusalgarvevilDocument : HtmlDocument
    {
        
        public UIHttpnimbusalgarvevilDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/villas", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/villas", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDvRightPane UIDvRightPane
        {
            get
            {
                if ((this.mUIDvRightPane == null))
                {
                    this.mUIDvRightPane = new UIDvRightPane(this);
                }
                return this.mUIDvRightPane;
            }
        }
        #endregion
        
        #region Fields
        private UIDvRightPane mUIDvRightPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDvRightPane : HtmlDiv
    {
        
        public UIDvRightPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "dvRight";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = "";
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.Class, "floatright bglightblue Padding", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"dvRight\" class=\"floatright bglightbl";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIVillaTypeClearFamiliPane
        {
            get
            {
                if ((this.mUIVillaTypeClearFamiliPane == null))
                {
                    this.mUIVillaTypeClearFamiliPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIVillaTypeClearFamiliPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIVillaTypeClearFamiliPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIVillaTypeClearFamiliPane.FilterProperties[HtmlDiv.PropertyNames.Title] = "";
                    this.mUIVillaTypeClearFamiliPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.Class, "content ui-helper-clearfix ui-corner-all", PropertyExpressionOperator.Contains));
                    this.mUIVillaTypeClearFamiliPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"portlet BorderZero font11 ui-widg";
                    this.mUIVillaTypeClearFamiliPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "10";
                    #endregion
                }
                return this.mUIVillaTypeClearFamiliPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIVillaTypeClearFamiliPane;
        #endregion
    }
}
