// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.CountryVillaList.OpenDestPage_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class OpenDestPage_Map:logWriter
    {
        
        /// <summary>
        /// OpenDestPage_Method
        /// </summary>
        public void OpenDestPage_Method()
        {
            #region Variable Declarations
            HtmlHyperlink uIDestinationsHyperlink = this.UIHomePageWindowsInterWindow.UIHomePageDocument.UIMenuCustom.UIDestinationsHyperlink;
            HtmlHyperlink uIAlgarveHyperlink = this.UIHomePageWindowsInterWindow.UIHomePageDocument.UIMenuCustom.UIAlgarveHyperlink;
            #endregion

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Destinations »' link at (35, 19)
            Mouse.Hover(uIDestinationsHyperlink, new Point(35, 19));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;
            try
            {
                // Click 'Algarve' link
                Mouse.Click(uIAlgarveHyperlink, new Point(34, 15));
                WriteLogs("PASS : Verify Algarve Link");
            }
            catch( AssertFailedException ex)
            {
                takeImage("OpenDestPage");
                WriteLogs("FAIL : Verify Algarve Link");
                WriteLogs("-------" + ex.Message.ToString());

            }

        }
               

        #region Properties
        public UIHomePageWindowsInterWindow UIHomePageWindowsInterWindow
        {
            get
            {
                if ((this.mUIHomePageWindowsInterWindow == null))
                {
                    this.mUIHomePageWindowsInterWindow = new UIHomePageWindowsInterWindow();
                }
                return this.mUIHomePageWindowsInterWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIHomePageWindowsInterWindow mUIHomePageWindowsInterWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHomePageWindowsInterWindow : BrowserWindow
    {
        
        public UIHomePageWindowsInterWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHomePageDocument UIHomePageDocument
        {
            get
            {
                if ((this.mUIHomePageDocument == null))
                {
                    this.mUIHomePageDocument = new UIHomePageDocument(this);
                }
                return this.mUIHomePageDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHomePageDocument mUIHomePageDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHomePageDocument : HtmlDocument
    {
        
        public UIHomePageDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://nimbus/#";
            this.WindowTitles.Add("Home Page");
            #endregion
        }
        
        #region Properties
        public UIMenuCustom UIMenuCustom
        {
            get
            {
                if ((this.mUIMenuCustom == null))
                {
                    this.mUIMenuCustom = new UIMenuCustom(this);
                }
                return this.mUIMenuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIMenuCustom mUIMenuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMenuCustom : HtmlCustom
    {
        
        public UIMenuCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "Menu";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "UL";
            this.FilterProperties["Class"] = "sf-menu sf-js-enabled";
            this.FilterProperties["ControlDefinition"] = "id=\"Menu\" class=\"sf-menu sf-js-enabled\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Home Page");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIDestinationsHyperlink
        {
            get
            {
                if ((this.mUIDestinationsHyperlink == null))
                {
                    this.mUIDestinationsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDestinationsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDestinationsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDestinationsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDestinationsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Destinations »";
                    this.mUIDestinationsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/destinations.aspx";
                    this.mUIDestinationsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDestinationsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://nimbus/destinations.aspx";
                    this.mUIDestinationsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "sf-with-ul";
                    this.mUIDestinationsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"sf-with-ul\" href=\"/destinations.a";
                    this.mUIDestinationsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIDestinationsHyperlink.WindowTitles.Add("Home Page");
                    #endregion
                }
                return this.mUIDestinationsHyperlink;
            }
        }
        
        public HtmlHyperlink UIAlgarveHyperlink
        {
            get
            {
                if ((this.mUIAlgarveHyperlink == null))
                {
                    this.mUIAlgarveHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAlgarveHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "";
                    this.mUIAlgarveHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = "";
                    this.mUIAlgarveHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = "";
                    this.mUIAlgarveHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Algarve", PropertyExpressionOperator.Contains));
                    this.mUIAlgarveHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.AbsolutePath, "/home", PropertyExpressionOperator.Contains));
                    this.mUIAlgarveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIAlgarveHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "/home", PropertyExpressionOperator.Contains));
                    this.mUIAlgarveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "";
                    this.mUIAlgarveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"width: auto; float: none;\" href=\"";
                    this.mUIAlgarveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIAlgarveHyperlink.WindowTitles.Add("Home Page");
                    #endregion
                }
                return this.mUIAlgarveHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIDestinationsHyperlink;
        
        private HtmlHyperlink mUIAlgarveHyperlink;
        #endregion
    }
}
