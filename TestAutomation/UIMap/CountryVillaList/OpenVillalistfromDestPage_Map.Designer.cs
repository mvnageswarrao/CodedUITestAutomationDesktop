// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.CountryVillaList.OpenVillalistfromDestPage_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class OpenVillalistfromDestPage_Map:logWriter
    {
        
        /// <summary>
        /// OpenVillalistfromDestPage_Method
        /// </summary>
        public void OpenVillalistfromDestPage_Method()
        {
            #region Variable Declarations
            HtmlInputButton uIViewallvillasButton = this.UIHttpnimbusalgarvehomWindow.UIHttpnimbusalgarvehomDocument.UIViewallvillasButton;
            #endregion

            // Click 'View all villas' button
            Mouse.Click(uIViewallvillasButton, new Point(47, 10));
        }
        
        /// <summary>
        /// VerifyNumofVillas_Assert - Use 'VerifyNumofVillas_AssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VerifyNumofVillas_Assert(string Centrename, string villaCount)
        {
            villaCount = villaCount.Trim();
            Centrename = Centrename.Trim();

            String VillacountforeachCenter = villaCount + " Villas found";

            #region Variable Declarations
            HtmlSpan uIItem169VillasfoundPane = this.UIHttpnimbusAlgarvevilWindow.UIHttpnimbusAlgarvevilDocument.UIItem169VillasfoundPane;
            #endregion

            try
            {
                // Verify that the 'InnerText' property of '169 Villas found' pane matches '  169 Villas found'
                //StringAssert.Matches(uIItem169VillasfoundPane.InnerText, new Regex(this.VerifyNumofVillas_AssertExpectedValues.UIItem169VillasfoundPaneInnerText));
                //StringAssert.Equals(uIItem169VillasfoundPane.InnerText, VillacountforeachCenter);
                string pageData = uIItem169VillasfoundPane.InnerText;
                pageData = pageData.Trim();
                Assert.AreEqual(pageData, VillacountforeachCenter);

                WriteLogs("PASS : "+VillacountforeachCenter + " For " + Centrename  );
            }
            catch (AssertFailedException ex)
            {
                takeImage("VerifyNumofVillas");
                WriteLogs("FAIL : " + VillacountforeachCenter + " For " + Centrename + " Does Not Matches With DataBase ");
                WriteLogs("------------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual VerifyNumofVillas_AssertExpectedValues VerifyNumofVillas_AssertExpectedValues
        {
            get
            {
                if ((this.mVerifyNumofVillas_AssertExpectedValues == null))
                {
                    this.mVerifyNumofVillas_AssertExpectedValues = new VerifyNumofVillas_AssertExpectedValues();
                }
                return this.mVerifyNumofVillas_AssertExpectedValues;
            }
        }
        
        public UIHttpnimbusalgarvehomWindow UIHttpnimbusalgarvehomWindow
        {
            get
            {
                if ((this.mUIHttpnimbusalgarvehomWindow == null))
                {
                    this.mUIHttpnimbusalgarvehomWindow = new UIHttpnimbusalgarvehomWindow();
                }
                return this.mUIHttpnimbusalgarvehomWindow;
            }
        }
        
        public UIHttpnimbusAlgarvevilWindow UIHttpnimbusAlgarvevilWindow
        {
            get
            {
                if ((this.mUIHttpnimbusAlgarvevilWindow == null))
                {
                    this.mUIHttpnimbusAlgarvevilWindow = new UIHttpnimbusAlgarvevilWindow();
                }
                return this.mUIHttpnimbusAlgarvevilWindow;
            }
        }
        #endregion
        
        #region Fields
        private VerifyNumofVillas_AssertExpectedValues mVerifyNumofVillas_AssertExpectedValues;
        
        private UIHttpnimbusalgarvehomWindow mUIHttpnimbusalgarvehomWindow;
        
        private UIHttpnimbusAlgarvevilWindow mUIHttpnimbusAlgarvevilWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyNumofVillas_Assert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class VerifyNumofVillas_AssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '169 Villas found' pane matches '  169 Villas found'
        /// </summary>
        public string UIItem169VillasfoundPaneInnerText = "  169 Villas found";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIHttpnimbusalgarvehomWindow : BrowserWindow
    {
        
        public UIHttpnimbusalgarvehomWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "/home", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("http://nimbus/algarve/home");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHttpnimbusalgarvehomDocument UIHttpnimbusalgarvehomDocument
        {
            get
            {
                if ((this.mUIHttpnimbusalgarvehomDocument == null))
                {
                    this.mUIHttpnimbusalgarvehomDocument = new UIHttpnimbusalgarvehomDocument(this);
                }
                return this.mUIHttpnimbusalgarvehomDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHttpnimbusalgarvehomDocument mUIHttpnimbusalgarvehomDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIHttpnimbusalgarvehomDocument : HtmlDocument
    {
        
        public UIHttpnimbusalgarvehomDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/home", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/home", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("http://nimbus/algarve/home");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIViewallvillasButton
        {
            get
            {
                if ((this.mUIViewallvillasButton == null))
                {
                    this.mUIViewallvillasButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIViewallvillasButton.SearchProperties[HtmlButton.PropertyNames.Id] = "MainContent_btnViewVillas";
                    this.mUIViewallvillasButton.SearchProperties.Add(new PropertyExpression(HtmlButton.PropertyNames.Name, "btnViewVillas", PropertyExpressionOperator.Contains));
                    this.mUIViewallvillasButton.FilterProperties.Add(new PropertyExpression(HtmlButton.PropertyNames.DisplayText, "View all villas", PropertyExpressionOperator.Contains));
                    this.mUIViewallvillasButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIViewallvillasButton.FilterProperties[HtmlButton.PropertyNames.Class] = "button";
                    this.mUIViewallvillasButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=\"MainContent_btnViewVillas\" class=\"bu";
                    #endregion
                }
                return this.mUIViewallvillasButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIViewallvillasButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIHttpnimbusAlgarvevilWindow : BrowserWindow
    {
        
        public UIHttpnimbusAlgarvevilWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "/villas", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHttpnimbusAlgarvevilDocument UIHttpnimbusAlgarvevilDocument
        {
            get
            {
                if ((this.mUIHttpnimbusAlgarvevilDocument == null))
                {
                    this.mUIHttpnimbusAlgarvevilDocument = new UIHttpnimbusAlgarvevilDocument(this);
                }
                return this.mUIHttpnimbusAlgarvevilDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHttpnimbusAlgarvevilDocument mUIHttpnimbusAlgarvevilDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIHttpnimbusAlgarvevilDocument : HtmlDocument
    {
        
        public UIHttpnimbusAlgarvevilDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/villas", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/villas", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIItem169VillasfoundPane
        {
            get
            {
                if ((this.mUIItem169VillasfoundPane == null))
                {
                    this.mUIItem169VillasfoundPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItem169VillasfoundPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "topContent_lblvillaCount";
                    this.mUIItem169VillasfoundPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem169VillasfoundPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Villas found", PropertyExpressionOperator.Contains));
                    this.mUIItem169VillasfoundPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem169VillasfoundPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.Class, "floatleft Heading3 margin-top7", PropertyExpressionOperator.Contains));
                    this.mUIItem169VillasfoundPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"topContent_lblvillaCount\" class=\"flo";
                    #endregion
                }
                return this.mUIItem169VillasfoundPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIItem169VillasfoundPane;
        #endregion
    }
}
