// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ProvConfPage.ClickcontinuefromTLSpopupClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class ClickcontinuefromTLSpopup_Map
    {
        
        /// <summary>
        /// ClickcontinueonTLSpopup_Method - Use 'ClickcontinueonTLSpopup_MethodParams' to pass parameters into this method.
        /// </summary>
        public void ClickcontinueonTLSpopup_Method()
        {
            #region Variable Declarations
            HtmlImage uIContinueImage = this.UIVillaPlusHolidayBookWindow.UIVillaPlusHolidayBookDocument.UITLSFormFrame.UITLSPopUpDocument.UIContinueImage;
            WinMenuItem uIToolsMenuItem = this.UIVillaPlusHolidayBookWindow.UIApplicationMenuBar.UIToolsMenuItem;
            WinMenuItem uIInternetoptionsMenuItem = this.UIItemWindow.UIContextMenu.UIInternetoptionsMenuItem;
            WinTabPage uIAdvancedTabPage = this.UIInternetOptionsWindow.UIItemWindow.UIAdvancedTabPage;
            WinTreeItem uIAcceleratedgraphicsTreeItem = this.UIInternetOptionsWindow.UISettingsWindow.UIAcceleratedgraphicsTreeItem;
            WinCheckBoxTreeItem uIUseTLS12CheckBoxTreeItem = this.UIInternetOptionsWindow.UISettingsWindow.UISecurityTreeItem.UIUseTLS12CheckBoxTreeItem;
            WinButton uIApplyButton = this.UIInternetOptionsWindow.UIApplyWindow.UIApplyButton;
            WinButton uIOKButton = this.UIInternetOptionsWindow.UIOKWindow.UIOKButton;
            HtmlImage uIPayOnlineImage = this.UIVillaPlusHolidayBookWindow.UIVillaPlusHolidayBookDocument.UITLSFormFrame.UITLSPopUpDocument.UIPayOnlineImage;
            #endregion

            // Click 'Continue' image
            Mouse.Click(uIContinueImage, new Point(84, 26));

            // Click 'Tools' menu item
           // Mouse.Click(uIToolsMenuItem, new Point(22, 13));

            // Click 'Internet options' menu item
          //  Mouse.Click(uIInternetoptionsMenuItem, new Point(78, 8));

            // Click 'Advanced' tab
           // Mouse.Click(uIAdvancedTabPage, new Point(31, 9));

            // Type 'Control + i' in 'Accelerated graphics' tree item
          //  Keyboard.SendKeys(uIAcceleratedgraphicsTreeItem, this.ClickcontinueonTLSpopup_MethodParams.UIAcceleratedgraphicsTreeItemSendKeys, ModifierKeys.Control);

            // Click 'Security' -> 'Use TLS 1.2' check box
           // Mouse.Click(uIUseTLS12CheckBoxTreeItem, new Point(111, 3));

            // Type 'Control + i' in 'Accelerated graphics' tree item
         //   Keyboard.SendKeys(uIAcceleratedgraphicsTreeItem, this.ClickcontinueonTLSpopup_MethodParams.UIAcceleratedgraphicsTreeItemSendKeys1, ModifierKeys.Control);

            // Click '&Apply' button
        //    Mouse.Click(uIApplyButton, new Point(31, 7));

            // Click 'OK' button
        //    Mouse.Click(uIOKButton, new Point(44, 10));

            // Click 'Pay Online' image
            Mouse.Click(uIPayOnlineImage, new Point(73, 17));
        }
        
        #region Properties
        public virtual ClickcontinueonTLSpopup_MethodParams ClickcontinueonTLSpopup_MethodParams
        {
            get
            {
                if ((this.mClickcontinueonTLSpopup_MethodParams == null))
                {
                    this.mClickcontinueonTLSpopup_MethodParams = new ClickcontinueonTLSpopup_MethodParams();
                }
                return this.mClickcontinueonTLSpopup_MethodParams;
            }
        }
        
        public UIVillaPlusHolidayBookWindow UIVillaPlusHolidayBookWindow
        {
            get
            {
                if ((this.mUIVillaPlusHolidayBookWindow == null))
                {
                    this.mUIVillaPlusHolidayBookWindow = new UIVillaPlusHolidayBookWindow();
                }
                return this.mUIVillaPlusHolidayBookWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIInternetOptionsWindow UIInternetOptionsWindow
        {
            get
            {
                if ((this.mUIInternetOptionsWindow == null))
                {
                    this.mUIInternetOptionsWindow = new UIInternetOptionsWindow();
                }
                return this.mUIInternetOptionsWindow;
            }
        }
        #endregion
        
        #region Fields
        private ClickcontinueonTLSpopup_MethodParams mClickcontinueonTLSpopup_MethodParams;
        
        private UIVillaPlusHolidayBookWindow mUIVillaPlusHolidayBookWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIInternetOptionsWindow mUIInternetOptionsWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClickcontinueonTLSpopup_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ClickcontinueonTLSpopup_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Control + i' in 'Accelerated graphics' tree item
        /// </summary>
        public string UIAcceleratedgraphicsTreeItemSendKeys = "i";
        
        /// <summary>
        /// Type 'Control + i' in 'Accelerated graphics' tree item
        /// </summary>
        public string UIAcceleratedgraphicsTreeItemSendKeys1 = "i";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaPlusHolidayBookWindow : BrowserWindow
    {
        
        public UIVillaPlusHolidayBookWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Villa Plus - Holiday Booking Details";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusHolidayBookDocument UIVillaPlusHolidayBookDocument
        {
            get
            {
                if ((this.mUIVillaPlusHolidayBookDocument == null))
                {
                    this.mUIVillaPlusHolidayBookDocument = new UIVillaPlusHolidayBookDocument(this);
                }
                return this.mUIVillaPlusHolidayBookDocument;
            }
        }
        
        public UIApplicationMenuBar UIApplicationMenuBar
        {
            get
            {
                if ((this.mUIApplicationMenuBar == null))
                {
                    this.mUIApplicationMenuBar = new UIApplicationMenuBar(this);
                }
                return this.mUIApplicationMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusHolidayBookDocument mUIVillaPlusHolidayBookDocument;
        
        private UIApplicationMenuBar mUIApplicationMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaPlusHolidayBookDocument : HtmlDocument
    {
        
        public UIVillaPlusHolidayBookDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Villa Plus - Holiday Booking Details";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/code_net/booking/bookingstatus.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://staging1.villaplus.com/code_net/booking/bookingstatus.aspx";
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        #region Properties
        public UITLSFormFrame UITLSFormFrame
        {
            get
            {
                if ((this.mUITLSFormFrame == null))
                {
                    this.mUITLSFormFrame = new UITLSFormFrame(this);
                }
                return this.mUITLSFormFrame;
            }
        }
        #endregion
        
        #region Fields
        private UITLSFormFrame mUITLSFormFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITLSFormFrame : HtmlIFrame
    {
        
        public UITLSFormFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "TLSForm";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "TLSForm";
            this.FilterProperties[HtmlFrame.PropertyNames.AbsolutePath] = "/code_net/info/TLSForm.aspx";
            this.FilterProperties[HtmlFrame.PropertyNames.PageUrl] = "/code_net/info/TLSForm.aspx?name=ie&version=10&os=win8";
            this.FilterProperties[HtmlFrame.PropertyNames.Title] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.Class] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "name=\"TLSForm\" id=\"TLSForm\" src=\"/code_n";
            this.FilterProperties[HtmlFrame.PropertyNames.TagInstance] = "5";
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        #region Properties
        public UITLSPopUpDocument UITLSPopUpDocument
        {
            get
            {
                if ((this.mUITLSPopUpDocument == null))
                {
                    this.mUITLSPopUpDocument = new UITLSPopUpDocument(this);
                }
                return this.mUITLSPopUpDocument;
            }
        }
        #endregion
        
        #region Fields
        private UITLSPopUpDocument mUITLSPopUpDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITLSPopUpDocument : HtmlDocument
    {
        
        public UITLSPopUpDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "TLS PopUp";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/code_net/info/TLSForm.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://staging1.villaplus.com/code_net/info/TLSForm.aspx?name=ie&version=10&os=wi" +
                "n8";
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIContinueImage
        {
            get
            {
                if ((this.mUIContinueImage == null))
                {
                    this.mUIContinueImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIContinueImage.SearchProperties[HtmlImage.PropertyNames.Id] = "imgContinue";
                    this.mUIContinueImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIContinueImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Continue";
                    this.mUIContinueImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/images/al/buttons/tlsimages/continue.gif";
                    this.mUIContinueImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://staging1.villaplus.com/images/al/buttons/tlsimages/continue.gif";
                    this.mUIContinueImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "ShowProcedure()";
                    this.mUIContinueImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:ShowProcedure()";
                    this.mUIContinueImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIContinueImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=\"Continue\" id=\"imgContinue\" alt=\"C";
                    this.mUIContinueImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIContinueImage.WindowTitles.Add("Villa Plus - Holiday Booking Details");
                    #endregion
                }
                return this.mUIContinueImage;
            }
        }
        
        public HtmlImage UIPayOnlineImage
        {
            get
            {
                if ((this.mUIPayOnlineImage == null))
                {
                    this.mUIPayOnlineImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIPayOnlineImage.SearchProperties[HtmlImage.PropertyNames.Id] = "BtnTLSPayOnline";
                    this.mUIPayOnlineImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIPayOnlineImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Pay Online";
                    this.mUIPayOnlineImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/imgs/vp/buttons/payOnlineON.gif";
                    this.mUIPayOnlineImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://staging1.villaplus.com/imgs/vp/buttons/payOnlineON.gif";
                    this.mUIPayOnlineImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIPayOnlineImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=\"Pay Online\" id=\"BtnTLSPayOnline\" ";
                    this.mUIPayOnlineImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "8";
                    this.mUIPayOnlineImage.WindowTitles.Add("Villa Plus - Holiday Booking Details");
                    #endregion
                }
                return this.mUIPayOnlineImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIContinueImage;
        
        private HtmlImage mUIPayOnlineImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIApplicationMenuBar : WinMenuBar
    {
        
        public UIApplicationMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Application";
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIToolsMenuItem
        {
            get
            {
                if ((this.mUIToolsMenuItem == null))
                {
                    this.mUIToolsMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIToolsMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Tools";
                    this.mUIToolsMenuItem.WindowTitles.Add("Villa Plus - Holiday Booking Details");
                    #endregion
                }
                return this.mUIToolsMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIToolsMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIInternetoptionsMenuItem
        {
            get
            {
                if ((this.mUIInternetoptionsMenuItem == null))
                {
                    this.mUIInternetoptionsMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIInternetoptionsMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Internet options";
                    #endregion
                }
                return this.mUIInternetoptionsMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIInternetoptionsMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIInternetOptionsWindow : WinWindow
    {
        
        public UIInternetOptionsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Internet Options";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Internet Options");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UISettingsWindow UISettingsWindow
        {
            get
            {
                if ((this.mUISettingsWindow == null))
                {
                    this.mUISettingsWindow = new UISettingsWindow(this);
                }
                return this.mUISettingsWindow;
            }
        }
        
        public UIApplyWindow UIApplyWindow
        {
            get
            {
                if ((this.mUIApplyWindow == null))
                {
                    this.mUIApplyWindow = new UIApplyWindow(this);
                }
                return this.mUIApplyWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        
        private UISettingsWindow mUISettingsWindow;
        
        private UIApplyWindow mUIApplyWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "12320";
            this.WindowTitles.Add("Internet Options");
            #endregion
        }
        
        #region Properties
        public WinTabPage UIAdvancedTabPage
        {
            get
            {
                if ((this.mUIAdvancedTabPage == null))
                {
                    this.mUIAdvancedTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIAdvancedTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Advanced";
                    this.mUIAdvancedTabPage.WindowTitles.Add("Internet Options");
                    #endregion
                }
                return this.mUIAdvancedTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUIAdvancedTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISettingsWindow : WinWindow
    {
        
        public UISettingsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1439";
            this.WindowTitles.Add("Internet Options");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIAcceleratedgraphicsTreeItem
        {
            get
            {
                if ((this.mUIAcceleratedgraphicsTreeItem == null))
                {
                    this.mUIAcceleratedgraphicsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIAcceleratedgraphicsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Accelerated graphics";
                    this.mUIAcceleratedgraphicsTreeItem.SearchProperties["Value"] = "0";
                    this.mUIAcceleratedgraphicsTreeItem.WindowTitles.Add("Internet Options");
                    #endregion
                }
                return this.mUIAcceleratedgraphicsTreeItem;
            }
        }
        
        public UISecurityTreeItem UISecurityTreeItem
        {
            get
            {
                if ((this.mUISecurityTreeItem == null))
                {
                    this.mUISecurityTreeItem = new UISecurityTreeItem(this);
                }
                return this.mUISecurityTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIAcceleratedgraphicsTreeItem;
        
        private UISecurityTreeItem mUISecurityTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISecurityTreeItem : WinTreeItem
    {
        
        public UISecurityTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Security";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Options");
            #endregion
        }
        
        #region Properties
        public WinCheckBoxTreeItem UIUseTLS12CheckBoxTreeItem
        {
            get
            {
                if ((this.mUIUseTLS12CheckBoxTreeItem == null))
                {
                    this.mUIUseTLS12CheckBoxTreeItem = new WinCheckBoxTreeItem(this);
                    #region Search Criteria
                    this.mUIUseTLS12CheckBoxTreeItem.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "Use TLS 1.2";
                    this.mUIUseTLS12CheckBoxTreeItem.SearchProperties["Value"] = "1";
                    this.mUIUseTLS12CheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIUseTLS12CheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIUseTLS12CheckBoxTreeItem.WindowTitles.Add("Internet Options");
                    #endregion
                }
                return this.mUIUseTLS12CheckBoxTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBoxTreeItem mUIUseTLS12CheckBoxTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIApplyWindow : WinWindow
    {
        
        public UIApplyWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "12321";
            this.WindowTitles.Add("Internet Options");
            #endregion
        }
        
        #region Properties
        public WinButton UIApplyButton
        {
            get
            {
                if ((this.mUIApplyButton == null))
                {
                    this.mUIApplyButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIApplyButton.SearchProperties[WinButton.PropertyNames.Name] = "Apply";
                    this.mUIApplyButton.WindowTitles.Add("Internet Options");
                    #endregion
                }
                return this.mUIApplyButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIApplyButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Internet Options");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Internet Options");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
