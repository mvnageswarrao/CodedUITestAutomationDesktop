// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ProvConfPage.verifyWheelChairSelected_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyWheelChairSelected_Map:logWriter
    {
        
        /// <summary>
        /// verifyWheelChairSelected_Method - Use 'verifyWheelChairSelected_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public Boolean verifyWheelChairSelected_Method()
        {
            #region Variable Declarations
            HtmlCheckBox uIChkWheelchairCheckBox = this.UIVillaPlusHolidayBookWindow.UIVillaPlusHolidayBookDocument.UIChkWheelchairCheckBox;
            #endregion
            Boolean IsWheelChairSelected = false;                       
            try
            {
                // Verify that the 'Checked' property of 'chkWheelchair' check box equals 'True'
                Assert.AreEqual(this.verifyWheelChairSelected_MethodExpectedValues.UIChkWheelchairCheckBoxChecked, uIChkWheelchairCheckBox.Checked);
                IsWheelChairSelected = true;
                WriteLogs("PASS : \"Wheel Chair\" Checked Box is Selected.");
            }
            catch (AssertFailedException ex)
            {
                takeImage("verifyWheelChairSelected");
                WriteLogs("FAIL : \"Wheel Chair\" Checked Box is Not Selected.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }

            return IsWheelChairSelected;
        }
        
        #region Properties
        public virtual verifyWheelChairSelected_MethodExpectedValues verifyWheelChairSelected_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyWheelChairSelected_MethodExpectedValues == null))
                {
                    this.mverifyWheelChairSelected_MethodExpectedValues = new verifyWheelChairSelected_MethodExpectedValues();
                }
                return this.mverifyWheelChairSelected_MethodExpectedValues;
            }
        }
        
        public UIVillaPlusHolidayBookWindow UIVillaPlusHolidayBookWindow
        {
            get
            {
                if ((this.mUIVillaPlusHolidayBookWindow == null))
                {
                    this.mUIVillaPlusHolidayBookWindow = new UIVillaPlusHolidayBookWindow();
                }
                return this.mUIVillaPlusHolidayBookWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyWheelChairSelected_MethodExpectedValues mverifyWheelChairSelected_MethodExpectedValues;
        
        private UIVillaPlusHolidayBookWindow mUIVillaPlusHolidayBookWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyWheelChairSelected_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyWheelChairSelected_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Checked' property of 'chkWheelchair' check box equals 'True'
        /// </summary>
        public bool UIChkWheelchairCheckBoxChecked = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaPlusHolidayBookWindow : BrowserWindow
    {
        
        public UIVillaPlusHolidayBookWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus - Holiday Booking Details", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusHolidayBookDocument UIVillaPlusHolidayBookDocument
        {
            get
            {
                if ((this.mUIVillaPlusHolidayBookDocument == null))
                {
                    this.mUIVillaPlusHolidayBookDocument = new UIVillaPlusHolidayBookDocument(this);
                }
                return this.mUIVillaPlusHolidayBookDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusHolidayBookDocument mUIVillaPlusHolidayBookDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaPlusHolidayBookDocument : HtmlDocument
    {
        
        public UIVillaPlusHolidayBookDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus - Holiday Booking Details", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/bookingstatus.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/bookingstatus.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIChkWheelchairCheckBox
        {
            get
            {
                if ((this.mUIChkWheelchairCheckBox == null))
                {
                    this.mUIChkWheelchairCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIChkWheelchairCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "chkWheelchair";
                    this.mUIChkWheelchairCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "chkWheelchair";
                    this.mUIChkWheelchairCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"chkWheelchair\" id=\"chkWheelchair\" ";
                    this.mUIChkWheelchairCheckBox.WindowTitles.Add("Villa Plus - Holiday Booking Details");
                    #endregion
                }
                return this.mUIChkWheelchairCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIChkWheelchairCheckBox;
        #endregion
    }
}
