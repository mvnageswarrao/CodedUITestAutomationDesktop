// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ProvConfPage.selectWheelChairForPax_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class selectWheelChairForPax_Map:logWriter
    {
        
        /// <summary>
        /// selectWheelChairForPax_Method - Use 'selectWheelChairForPax_MethodParams' to pass parameters into this method.
        /// </summary>
        public Boolean selectWheelChairForPax_Method()
        {
            #region Variable Declarations
            HtmlCheckBox uIGhgfCheckBox = this.UIVillaPlusHolidayBookWindow.UIVillaPlusHolidayBookDocument.UIIfrmWheelChairFrame.UIWheelchairAssistanceDocument.UIGhgfCheckBox;
            HtmlCheckBox uIHgjhgCheckBox = this.UIVillaPlusHolidayBookWindow.UIVillaPlusHolidayBookDocument.UIIfrmWheelChairFrame.UIWheelchairAssistanceDocument.UIHgjhgCheckBox;
            #endregion
            Boolean IsWheelChairSelected = false;                       
            UITestControlCollection ui = uIGhgfCheckBox.FindMatchingControls();
            int count = ui.Count;
            int i = 0;
            Random rnd = new Random();
            int SelectableNumofPax = rnd.Next(1, count);
            try
            {
                foreach (HtmlCheckBox eachPax in ui)
                {
                    eachPax.Checked = this.selectWheelChairForPax_MethodParams.UIGhgfCheckBoxChecked;
                    i++;
                    if (i == SelectableNumofPax)
                    {
                        IsWheelChairSelected = true;
                        break;
                    }
                }
                WriteLogs("PASS : Selected Villa Suitability for " + SelectableNumofPax + " Passengers. : VERIFICATION");
            }
            catch (AssertFailedException ex)
            {
                takeImage("selectWheelChairForPax");
                WriteLogs("PASS : Could NOT Select Villa Suitability for Passengers. : VERIFICATION");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
            return IsWheelChairSelected;


            
            //try
            //{
            //    uIGhgfCheckBox.Checked = this.selectWheelChairForPax_MethodParams.UIGhgfCheckBoxChecked;
            //    uIHgjhgCheckBox.Checked = this.selectWheelChairForPax_MethodParams.UIHgjhgCheckBoxChecked;
            //    WriteLogs("PASS : \"Wheel Chair\" is Selected For Selected Passengers.");
            //}
            //catch (AssertFailedException ex)
            //{
            //    WriteLogs("FAIL : Could not Select \"Wheel Chair\" for Passengers.");
            //    WriteLogs("-----------------" + ex.Message.ToString());
            //}
        }
        
        #region Properties
        public virtual selectWheelChairForPax_MethodParams selectWheelChairForPax_MethodParams
        {
            get
            {
                if ((this.mselectWheelChairForPax_MethodParams == null))
                {
                    this.mselectWheelChairForPax_MethodParams = new selectWheelChairForPax_MethodParams();
                }
                return this.mselectWheelChairForPax_MethodParams;
            }
        }
        
        public UIVillaPlusHolidayBookWindow UIVillaPlusHolidayBookWindow
        {
            get
            {
                if ((this.mUIVillaPlusHolidayBookWindow == null))
                {
                    this.mUIVillaPlusHolidayBookWindow = new UIVillaPlusHolidayBookWindow();
                }
                return this.mUIVillaPlusHolidayBookWindow;
            }
        }
        #endregion
        
        #region Fields
        private selectWheelChairForPax_MethodParams mselectWheelChairForPax_MethodParams;
        
        private UIVillaPlusHolidayBookWindow mUIVillaPlusHolidayBookWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'selectWheelChairForPax_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class selectWheelChairForPax_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Ghgf' check box
        /// </summary>
        public bool UIGhgfCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Hgjhg' check box
        /// </summary>
        public bool UIHgjhgCheckBoxChecked = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaPlusHolidayBookWindow : BrowserWindow
    {
        
        public UIVillaPlusHolidayBookWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus - Holiday Booking Details", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusHolidayBookDocument UIVillaPlusHolidayBookDocument
        {
            get
            {
                if ((this.mUIVillaPlusHolidayBookDocument == null))
                {
                    this.mUIVillaPlusHolidayBookDocument = new UIVillaPlusHolidayBookDocument(this);
                }
                return this.mUIVillaPlusHolidayBookDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusHolidayBookDocument mUIVillaPlusHolidayBookDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaPlusHolidayBookDocument : HtmlDocument
    {
        
        public UIVillaPlusHolidayBookDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus - Holiday Booking Details", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/bookingstatus.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/bookingstatus.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        #region Properties
        public UIIfrmWheelChairFrame UIIfrmWheelChairFrame
        {
            get
            {
                if ((this.mUIIfrmWheelChairFrame == null))
                {
                    this.mUIIfrmWheelChairFrame = new UIIfrmWheelChairFrame(this);
                }
                return this.mUIIfrmWheelChairFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIIfrmWheelChairFrame mUIIfrmWheelChairFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIIfrmWheelChairFrame : HtmlIFrame
    {
        
        public UIIfrmWheelChairFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "ifrmWheelChair";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.AbsolutePath, "/code_net/booking/wheelchair.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "/code_net/booking/wheelchair.aspx?", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "id=\"ifrmWheelChair\" src=\"/code_net/booki";
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        #region Properties
        public UIWheelchairAssistanceDocument UIWheelchairAssistanceDocument
        {
            get
            {
                if ((this.mUIWheelchairAssistanceDocument == null))
                {
                    this.mUIWheelchairAssistanceDocument = new UIWheelchairAssistanceDocument(this);
                }
                return this.mUIWheelchairAssistanceDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIWheelchairAssistanceDocument mUIWheelchairAssistanceDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIWheelchairAssistanceDocument : HtmlDocument
    {
        
        public UIWheelchairAssistanceDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Wheelchair Assistance", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/wheelchair.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/wheelchair.aspx?", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIGhgfCheckBox
        {
            get
            {
                if ((this.mUIGhgfCheckBox == null))
                {
                    this.mUIGhgfCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIGhgfCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_ContentPlaceHolder1_chkWheelchair_0";
                    this.mUIGhgfCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$chkWheelchair$0";
                    this.mUIGhgfCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"ctl00$ContentPlaceHolder1$chkWheel";
                    this.mUIGhgfCheckBox.WindowTitles.Add("Villa Plus - Holiday Booking Details");
                    #endregion
                }
                return this.mUIGhgfCheckBox;
            }
        }
        
        public HtmlCheckBox UIHgjhgCheckBox
        {
            get
            {
                if ((this.mUIHgjhgCheckBox == null))
                {
                    this.mUIHgjhgCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIHgjhgCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_ContentPlaceHolder1_chkWheelchair_1";
                    this.mUIHgjhgCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$chkWheelchair$1";
                    this.mUIHgjhgCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"ctl00$ContentPlaceHolder1$chkWheel";
                    this.mUIHgjhgCheckBox.WindowTitles.Add("Villa Plus - Holiday Booking Details");
                    #endregion
                }
                return this.mUIHgjhgCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIGhgfCheckBox;
        
        private HtmlCheckBox mUIHgjhgCheckBox;
        #endregion
    }
}
