// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ProvConfPage.verifyWheelChairPopupOpened_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyWheelChairPopupOpened_Map:logWriter
    {
        
        /// <summary>
        /// verifyWheelChairPopupOpened_Method - Use 'verifyWheelChairPopupOpened_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyWheelChairPopupOpened_Method()
        {
            #region Variable Declarations
            HtmlCustom uIAspnetFormCustom = this.UIVillaPlusHolidayBookWindow.UIVillaPlusHolidayBookDocument.UIIfrmWheelChairFrame.UIWheelchairAssistanceDocument.UIAspnetFormCustom;
            #endregion

            try
            {
                // Verify that the 'Id' property of 'aspnetForm' custom control equals 'aspnetForm'
                Assert.AreEqual(this.verifyWheelChairPopupOpened_MethodExpectedValues.UIAspnetFormCustomId, uIAspnetFormCustom.Id);
                WriteLogs("PASS : \"Reduced mobility or wheelchair assistance\" Popup Opened.");
            }
            catch (AssertFailedException ex)
            {
                takeImage("verifyWheelChairPopupOpened");
                WriteLogs("FAIL : Could Not Open \"Reduced mobility or wheelchair assistance\" Popup Open.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual verifyWheelChairPopupOpened_MethodExpectedValues verifyWheelChairPopupOpened_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyWheelChairPopupOpened_MethodExpectedValues == null))
                {
                    this.mverifyWheelChairPopupOpened_MethodExpectedValues = new verifyWheelChairPopupOpened_MethodExpectedValues();
                }
                return this.mverifyWheelChairPopupOpened_MethodExpectedValues;
            }
        }
        
        public UIVillaPlusHolidayBookWindow UIVillaPlusHolidayBookWindow
        {
            get
            {
                if ((this.mUIVillaPlusHolidayBookWindow == null))
                {
                    this.mUIVillaPlusHolidayBookWindow = new UIVillaPlusHolidayBookWindow();
                }
                return this.mUIVillaPlusHolidayBookWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyWheelChairPopupOpened_MethodExpectedValues mverifyWheelChairPopupOpened_MethodExpectedValues;
        
        private UIVillaPlusHolidayBookWindow mUIVillaPlusHolidayBookWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyWheelChairPopupOpened_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyWheelChairPopupOpened_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Id' property of 'aspnetForm' custom control equals 'aspnetForm'
        /// </summary>
        public string UIAspnetFormCustomId = "aspnetForm";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaPlusHolidayBookWindow : BrowserWindow
    {
        
        public UIVillaPlusHolidayBookWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus - Holiday Booking Details", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusHolidayBookDocument UIVillaPlusHolidayBookDocument
        {
            get
            {
                if ((this.mUIVillaPlusHolidayBookDocument == null))
                {
                    this.mUIVillaPlusHolidayBookDocument = new UIVillaPlusHolidayBookDocument(this);
                }
                return this.mUIVillaPlusHolidayBookDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusHolidayBookDocument mUIVillaPlusHolidayBookDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaPlusHolidayBookDocument : HtmlDocument
    {
        
        public UIVillaPlusHolidayBookDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus - Holiday Booking Details", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/bookingstatus.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/bookingstatus.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        #region Properties
        public UIIfrmWheelChairFrame UIIfrmWheelChairFrame
        {
            get
            {
                if ((this.mUIIfrmWheelChairFrame == null))
                {
                    this.mUIIfrmWheelChairFrame = new UIIfrmWheelChairFrame(this);
                }
                return this.mUIIfrmWheelChairFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIIfrmWheelChairFrame mUIIfrmWheelChairFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIIfrmWheelChairFrame : HtmlIFrame
    {
        
        public UIIfrmWheelChairFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "ifrmWheelChair";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.AbsolutePath, "/code_net/booking/wheelchair.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "/code_net/booking/wheelchair.aspx?bookingid=", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "id=\"ifrmWheelChair\" src=\"/code_net/booki";
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        #region Properties
        public UIWheelchairAssistanceDocument UIWheelchairAssistanceDocument
        {
            get
            {
                if ((this.mUIWheelchairAssistanceDocument == null))
                {
                    this.mUIWheelchairAssistanceDocument = new UIWheelchairAssistanceDocument(this);
                }
                return this.mUIWheelchairAssistanceDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIWheelchairAssistanceDocument mUIWheelchairAssistanceDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIWheelchairAssistanceDocument : HtmlDocument
    {
        
        public UIWheelchairAssistanceDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Wheelchair Assistance", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/wheelchair.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/wheelchair.aspx?bookingid=", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus - Holiday Booking Details");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIAspnetFormCustom
        {
            get
            {
                if ((this.mUIAspnetFormCustom == null))
                {
                    this.mUIAspnetFormCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIAspnetFormCustom.SearchProperties["TagName"] = "FORM";
                    this.mUIAspnetFormCustom.SearchProperties["Id"] = "aspnetForm";
                    this.mUIAspnetFormCustom.FilterProperties["ControlDefinition"] = "id=\"aspnetForm\" action=\"wheelchair.aspx?";
                    this.mUIAspnetFormCustom.WindowTitles.Add("Villa Plus - Holiday Booking Details");
                    #endregion
                }
                return this.mUIAspnetFormCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIAspnetFormCustom;
        #endregion
    }
}
