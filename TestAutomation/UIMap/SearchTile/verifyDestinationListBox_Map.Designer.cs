// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.SearchTile.verifyDestinationListBox_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyDestinationListBox_Map:logWriter
    {
        
        /// <summary>
        /// verifyDestinationListBox_Method - Use 'verifyDestinationListBox_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyDestinationListBox_Method(string strURL)
        {
            delayExecution(strURL);

            #region Variable Declarations
            HtmlComboBox uIDdDestinationsComboBox = this.UIVillaHolidaysThatYouWindow.UIVillaHolidaysThatYouDocument.UIDdDestinationsComboBox;
            #endregion

            //string ExpDestList = this.verifyDestinationListBox_MethodExpectedValues.UIDdDestinationsComboBoxInnerText;
            string ExpDestList = "AnyDestinationPortugalAlgarveSpainBalearicIslandsMajorca(Mallorca)Menorca(Minorca)CanaryIslandsLanzaroteFuerteventuraTenerifeMainlandSpainCostadelSolCostaBlancaGreekIslandsCorfuKefalonia(Cephalonia)CreteRhodesCyprusCroatia";
            ExpDestList = ExpDestList.Replace(" ", string.Empty);
            string ActDestList = uIDdDestinationsComboBox.InnerText;
            ActDestList = ActDestList.Replace(" ", string.Empty);
            
            try
            {
                // Verify that the 'InnerText' property of 'ddDestinations' combo box equals 'Any Destination Portugal     Algarve Spain     Balearic Islands         Majorca (Mallorca)         Menorca (Minorca)     Canary Islands         Lanzarote         Fuerteventura         Tenerife     Mainland Spain         Costa del Sol         Costa Blanca Greek Islands         Corfu         Kefalonia (Cephalonia)         Crete         Rhodes Cyprus Turkey '
                //Assert.AreEqual(this.verifyDestinationListBox_MethodExpectedValues.UIDdDestinationsComboBoxInnerText, uIDdDestinationsComboBox.InnerText);
                Assert.AreEqual(ExpDestList.Trim(), ActDestList.Trim());
                WriteLogs("PASS : \"Destination\" List From Search Tile is Populated properly.");
            }
            catch (AssertFailedException ex)
            {
                takeImage("verifyDestinationListBox");
                WriteLogs("FAIL : \"Destination\" List is Not Populated.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }

           
        }

        public string selectDestination_Method(List<string> centreNAMEList)
        {
            #region Variable Declarations
            HtmlComboBox uIDdDestinationsComboBox = this.UIVillaHolidaysThatYouWindow.UIVillaHolidaysThatYouDocument.UIDdDestinationsComboBox;
            #endregion

            string[] DestList = uIDdDestinationsComboBox.GetContent();
            int NumofCentersFrmPage = DestList.Length;

            int NumofCentersFrmDB = centreNAMEList.Count;
            Random rnd = new Random();
            int randomcenterindex = rnd.Next(0, NumofCentersFrmDB);
            string SelectableCenter = centreNAMEList[randomcenterindex];
            SelectableCenter = SelectableCenter.Trim();
            try
            {                
                for (int i = 0; i < NumofCentersFrmPage;i++ )
                {
                    uIDdDestinationsComboBox.SelectedIndex = i;
                    if (uIDdDestinationsComboBox.SelectedItem.Trim().StartsWith(SelectableCenter))
                    {
                        WriteLogs("PASS : \"" + SelectableCenter + "\" is Selected From Destination List.");
                        break;
                    }
                }
            }
            catch (AssertFailedException ex)
            {
                takeImage("selectDestination");
                WriteLogs("FAIL : Could Not Select Destination.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
            return SelectableCenter;
         }
        
        #region Properties
        public virtual verifyDestinationListBox_MethodExpectedValues verifyDestinationListBox_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyDestinationListBox_MethodExpectedValues == null))
                {
                    this.mverifyDestinationListBox_MethodExpectedValues = new verifyDestinationListBox_MethodExpectedValues();
                }
                return this.mverifyDestinationListBox_MethodExpectedValues;
            }
        }
        
        public UIVillaHolidaysThatYouWindow UIVillaHolidaysThatYouWindow
        {
            get
            {
                if ((this.mUIVillaHolidaysThatYouWindow == null))
                {
                    this.mUIVillaHolidaysThatYouWindow = new UIVillaHolidaysThatYouWindow();
                }
                return this.mUIVillaHolidaysThatYouWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyDestinationListBox_MethodExpectedValues mverifyDestinationListBox_MethodExpectedValues;
        
        private UIVillaHolidaysThatYouWindow mUIVillaHolidaysThatYouWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyDestinationListBox_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyDestinationListBox_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ddDestinations' combo box equals 'Any Destination Portugal     Algarve Spain     Balearic Islands         Majorca (Mallorca)         Menorca (Minorca)     Canary Islands         Lanzarote         Fuerteventura         Tenerife     Mainland Spain         Costa del Sol         Costa Blanca Greek Islands         Corfu         Kefalonia (Cephalonia)         Crete         Rhodes Cyprus Turkey '
        /// </summary>
        public string UIDdDestinationsComboBoxInnerText = @"Any Destination Portugal     Algarve Spain     Balearic Islands         Majorca (Mallorca)         Menorca (Minorca)     Canary Islands         Lanzarote         Fuerteventura         Tenerife     Mainland Spain         Costa del Sol         Costa Blanca Greek Islands         Corfu         Kefalonia (Cephalonia)         Crete         Rhodes Cyprus Turkey ";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaHolidaysThatYouWindow : BrowserWindow
    {
        
        public UIVillaHolidaysThatYouWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Holidays That You’ll Love More | Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaHolidaysThatYouDocument UIVillaHolidaysThatYouDocument
        {
            get
            {
                if ((this.mUIVillaHolidaysThatYouDocument == null))
                {
                    this.mUIVillaHolidaysThatYouDocument = new UIVillaHolidaysThatYouDocument(this);
                }
                return this.mUIVillaHolidaysThatYouDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaHolidaysThatYouDocument mUIVillaHolidaysThatYouDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaHolidaysThatYouDocument : HtmlDocument
    {
        
        public UIVillaHolidaysThatYouDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Holidays That You’ll Love More | Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIDdDestinationsComboBox
        {
            get
            {
                if ((this.mUIDdDestinationsComboBox == null))
                {
                    this.mUIDdDestinationsComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDdDestinationsComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ddDestinations";
                    this.mUIDdDestinationsComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$MainContent$quickSearch$ddDestinations";
                    this.mUIDdDestinationsComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "21";
                    this.mUIDdDestinationsComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"ctl00$MainContent$quickSearch$ddDe";
                    this.mUIDdDestinationsComboBox.WindowTitles.Add("Villa Holidays That You’ll Love More | Villa Plus");
                    #endregion
                }
                return this.mUIDdDestinationsComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIDdDestinationsComboBox;
        #endregion
    }
}
