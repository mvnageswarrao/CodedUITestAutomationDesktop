// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.SearchTile.selectMonthFrmCalender_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class selectMonthFrmCalender_Map:logWriter
    {
        
        /// <summary>
        /// selectMonthFrmCalender_Method - Use 'selectMonthFrmCalender_MethodParams' to pass parameters into this method.
        /// </summary>
        public void selectMonthFrmCalender_Method(DateTime SelectableDATE)
        {
            #region Variable Declarations
            HtmlComboBox uIItemComboBox = this.UIVillaHolidaysThatYouWindow.UIVillaHolidaysThatYouDocument.UIUidatepickerdivPane.UIItemComboBox;
            #endregion

            int NumofMonthsListed = uIItemComboBox.ItemCount;

            int SelectableMonthNum =Convert.ToInt32(SelectableDATE.Month.ToString());
            System.Globalization.DateTimeFormatInfo mfi = new
            System.Globalization.DateTimeFormatInfo();
            string strMonthName = mfi.GetMonthName(SelectableMonthNum).ToString();
            
            string SelectableYear = SelectableDATE.Year.ToString();

            string SelectableMonthYear = strMonthName+ " "+ SelectableYear;

            for (int i = 0; i < NumofMonthsListed; i++)
            {
                uIItemComboBox.SelectedIndex = i;
                if (uIItemComboBox.SelectedItem.Equals(SelectableMonthYear))
                {
                    WriteLogs("PASS : \"" + SelectableMonthYear + "\" is Selected as Month. ");
                    break;
                }
            }

        }
        
        #region Properties
        public virtual selectMonthFrmCalender_MethodParams selectMonthFrmCalender_MethodParams
        {
            get
            {
                if ((this.mselectMonthFrmCalender_MethodParams == null))
                {
                    this.mselectMonthFrmCalender_MethodParams = new selectMonthFrmCalender_MethodParams();
                }
                return this.mselectMonthFrmCalender_MethodParams;
            }
        }
        
        public UIVillaHolidaysThatYouWindow UIVillaHolidaysThatYouWindow
        {
            get
            {
                if ((this.mUIVillaHolidaysThatYouWindow == null))
                {
                    this.mUIVillaHolidaysThatYouWindow = new UIVillaHolidaysThatYouWindow();
                }
                return this.mUIVillaHolidaysThatYouWindow;
            }
        }
        #endregion
        
        #region Fields
        private selectMonthFrmCalender_MethodParams mselectMonthFrmCalender_MethodParams;
        
        private UIVillaHolidaysThatYouWindow mUIVillaHolidaysThatYouWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'selectMonthFrmCalender_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class selectMonthFrmCalender_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'May 2014' in combo box
        /// </summary>
        public string UIItemComboBoxSelectedItem = "May 2014";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaHolidaysThatYouWindow : BrowserWindow
    {
        
        public UIVillaHolidaysThatYouWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Holidays That You’ll Love More | Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaHolidaysThatYouDocument UIVillaHolidaysThatYouDocument
        {
            get
            {
                if ((this.mUIVillaHolidaysThatYouDocument == null))
                {
                    this.mUIVillaHolidaysThatYouDocument = new UIVillaHolidaysThatYouDocument(this);
                }
                return this.mUIVillaHolidaysThatYouDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaHolidaysThatYouDocument mUIVillaHolidaysThatYouDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaHolidaysThatYouDocument : HtmlDocument
    {
        
        public UIVillaHolidaysThatYouDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Holidays That You’ll Love More | Villa Plus");
            #endregion
        }
        
        #region Properties
        public UIUidatepickerdivPane UIUidatepickerdivPane
        {
            get
            {
                if ((this.mUIUidatepickerdivPane == null))
                {
                    this.mUIUidatepickerdivPane = new UIUidatepickerdivPane(this);
                }
                return this.mUIUidatepickerdivPane;
            }
        }
        #endregion
        
        #region Fields
        private UIUidatepickerdivPane mUIUidatepickerdivPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIUidatepickerdivPane : HtmlDiv
    {
        
        public UIUidatepickerdivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ui-datepicker-div";
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "PrevNext";
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all" +
                "\" id=\"ui-datepicker-div\" style=\"left: 967px; top: 317px; display: block; positio" +
                "n: absolute; z-index: 501;\"";
            this.WindowTitles.Add("Villa Holidays That You’ll Love More | Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "ui-datepicker-month";
                    this.mUIItemComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "class=\"ui-datepicker-month\" onchange=\"DP";
                    this.mUIItemComboBox.WindowTitles.Add("Villa Holidays That You’ll Love More | Villa Plus");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIItemComboBox;
        #endregion
    }
}
