// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.SearchTile.clickVillaNFlightsLinkFrmSearchResultsPage_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class clickVillaNFlightsLinkFrmSearchResultsPage_Map:logWriter
    {
        
        /// <summary>
        /// clickVillaNFlightsLinkFrmSearchResultsPage_Method
        /// </summary>
        public void clickVillaNFlightsLinkFrmSearchResultsPage_Method()
        {
            #region Variable Declarations
            HtmlInputButton uIBookvillaflightsButton = this.UIYoursearchfound2VillWindow.UIYoursearchfound2VillDocument.UIBookvillaflightsButton;
            #endregion
                        
            try
            {
                // Click 'Book villa & flights' link
                Mouse.Click(uIBookvillaflightsButton);
                WriteLogs("PASS : Clicked \"Book Villa & Flights\" Button From Search Results Page.");
            }
            catch (AssertFailedException ex)
            {
                takeImage("clickVillaNFlightsLinkFrmSearchResultsPage");
                WriteLogs("FAIL : Could Not click \"Book Villa & Flights\" Button From Search Results Page.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }

            // Click 'Book villa & flights' button
            //Mouse.Click(uIBookvillaflightsButton, new Point(80, 4));
        }

        public Boolean checkiflinkavaialable()
        {
            #region Variable Declarations
            HtmlInputButton uIBookvillaflightsButton = this.UIYoursearchfound2VillWindow.UIYoursearchfound2VillDocument.UIBookvillaflightsButton;
            #endregion
            
            Boolean islinkavaialable = uIBookvillaflightsButton.Exists;
            //if (islinkavaialable == false)
            //{
            //    WriteLogs("INFO : \"Book Villa & Flights\" is not a link");
            //}
            //else
            //{
            //    WriteLogs("INFO : \"Book Villa & Flights\" is a link");
            //}
            return islinkavaialable;
        }
        
        #region Properties
        public UIYoursearchfound2VillWindow UIYoursearchfound2VillWindow
        {
            get
            {
                if ((this.mUIYoursearchfound2VillWindow == null))
                {
                    this.mUIYoursearchfound2VillWindow = new UIYoursearchfound2VillWindow();
                }
                return this.mUIYoursearchfound2VillWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound2VillWindow mUIYoursearchfound2VillWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYoursearchfound2VillWindow : BrowserWindow
    {
        
        public UIYoursearchfound2VillWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your search found", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your search found 2 Villa holidays");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound2VillDocument UIYoursearchfound2VillDocument
        {
            get
            {
                if ((this.mUIYoursearchfound2VillDocument == null))
                {
                    this.mUIYoursearchfound2VillDocument = new UIYoursearchfound2VillDocument(this);
                }
                return this.mUIYoursearchfound2VillDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound2VillDocument mUIYoursearchfound2VillDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYoursearchfound2VillDocument : HtmlDocument
    {
        
        public UIYoursearchfound2VillDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your search found", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/searchresult.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/searchresult.aspx?", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your search found 2 Villa holidays");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIBookvillaflightsButton
        {
            get
            {
                if ((this.mUIBookvillaflightsButton == null))
                {
                    this.mUIBookvillaflightsButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIBookvillaflightsButton.SearchProperties.Add(new PropertyExpression(HtmlButton.PropertyNames.Id, "MainContent_lvVillaInfo_villaCtrl_0_lnkBookPkg_0", PropertyExpressionOperator.Contains));
                    this.mUIBookvillaflightsButton.SearchProperties.Add(new PropertyExpression(HtmlButton.PropertyNames.Name, "ctl00$MainContent$lvVillaInfo$ctrl0$villaCtrl$lnkBookPkg", PropertyExpressionOperator.Contains));
                    this.mUIBookvillaflightsButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Book villa & flights";
                    this.mUIBookvillaflightsButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIBookvillaflightsButton.FilterProperties[HtmlButton.PropertyNames.Class] = "link_button";
                    this.mUIBookvillaflightsButton.FilterProperties.Add(new PropertyExpression(HtmlButton.PropertyNames.ControlDefinition, "name=\"ctl00$MainContent$lvVillaInfo$ctrl", PropertyExpressionOperator.Contains));
                    this.mUIBookvillaflightsButton.WindowTitles.Add("Your search found 2 Villa holidays");
                    #endregion
                }
                return this.mUIBookvillaflightsButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIBookvillaflightsButton;
        #endregion
    }
}
