// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.SearchTile.clickBookVillaOnlyLINKFrmSRPage_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class clickBookVillaOnlyLINKFrmSRPage_Map : logWriter
    {
        
        /// <summary>
        /// clickBookVillaOnlyLINKFrmSRPage_Method
        /// </summary>
        public void clickBookVillaOnlyLINKFrmSRPage_Method()
        {
            #region Variable Declarations
            HtmlInputButton uIBookvillaonlyButton = this.UIYoursearchfound65VilWindow.UIYoursearchfound65VilDocument.UIBookvillaonlyButton;
            #endregion

            try
            {
                // Click 'Book villa only' button
                Mouse.Click(uIBookvillaonlyButton, new Point(67, 12));
                WriteLogs("PASS : Clicked \"Book Villa Only\" link From Search Results Page.");
            }
            catch (AssertFailedException ex)
            {
                takeImage("clickBookVillaOnlyLINKFrmSRPage");
                WriteLogs("FAIL : Could Not click \"Book Villa Only\" link From Search Results Page.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public UIYoursearchfound31VilWindow UIYoursearchfound31VilWindow
        {
            get
            {
                if ((this.mUIYoursearchfound31VilWindow == null))
                {
                    this.mUIYoursearchfound31VilWindow = new UIYoursearchfound31VilWindow();
                }
                return this.mUIYoursearchfound31VilWindow;
            }
        }
        
        public UIYoursearchfound65VilWindow UIYoursearchfound65VilWindow
        {
            get
            {
                if ((this.mUIYoursearchfound65VilWindow == null))
                {
                    this.mUIYoursearchfound65VilWindow = new UIYoursearchfound65VilWindow();
                }
                return this.mUIYoursearchfound65VilWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound31VilWindow mUIYoursearchfound31VilWindow;
        
        private UIYoursearchfound65VilWindow mUIYoursearchfound65VilWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIYoursearchfound31VilWindow : BrowserWindow
    {
        
        public UIYoursearchfound31VilWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your search found", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your search found 31 Villa holidays");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound31VilDocument UIYoursearchfound31VilDocument
        {
            get
            {
                if ((this.mUIYoursearchfound31VilDocument == null))
                {
                    this.mUIYoursearchfound31VilDocument = new UIYoursearchfound31VilDocument(this);
                }
                return this.mUIYoursearchfound31VilDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound31VilDocument mUIYoursearchfound31VilDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIYoursearchfound31VilDocument : HtmlDocument
    {
        
        public UIYoursearchfound31VilDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your search found", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/searchresult.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/searchresult.aspx?", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your search found 31 Villa holidays");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBookvillaonlyHyperlink
        {
            get
            {
                if ((this.mUIBookvillaonlyHyperlink == null))
                {
                    this.mUIBookvillaonlyHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBookvillaonlyHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Id, "MainContent_lvVillaInfo_villaCtrl_0_lnkBookVO_", PropertyExpressionOperator.Contains));
                    this.mUIBookvillaonlyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Book villa only";
                    this.mUIBookvillaonlyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "__doPostBack(\'ctl00$MainContent$lvVillaInfo$ctrl0$villaCtrl$lnkBookVO\',\'\')";
                    this.mUIBookvillaonlyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:__doPostBack(\'ctl00$MainContent$lvVillaInfo$ctrl0$villaCtrl$lnkBookVO\'" +
                        ",\'\')";
                    this.mUIBookvillaonlyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"MainContent_lvVillaInfo_villaCtrl_0_";
                    this.mUIBookvillaonlyHyperlink.WindowTitles.Add("Your search found 31 Villa holidays");
                    #endregion
                }
                return this.mUIBookvillaonlyHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBookvillaonlyHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIYoursearchfound65VilWindow : BrowserWindow
    {
        
        public UIYoursearchfound65VilWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your search found", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound65VilDocument UIYoursearchfound65VilDocument
        {
            get
            {
                if ((this.mUIYoursearchfound65VilDocument == null))
                {
                    this.mUIYoursearchfound65VilDocument = new UIYoursearchfound65VilDocument(this);
                }
                return this.mUIYoursearchfound65VilDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound65VilDocument mUIYoursearchfound65VilDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIYoursearchfound65VilDocument : HtmlDocument
    {
        
        public UIYoursearchfound65VilDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your search found", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/searchresult.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/searchresult.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIBookvillaonlyButton
        {
            get
            {
                if ((this.mUIBookvillaonlyButton == null))
                {
                    this.mUIBookvillaonlyButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIBookvillaonlyButton.SearchProperties.Add(new PropertyExpression(HtmlButton.PropertyNames.Id, "_lnkBookVO_", PropertyExpressionOperator.Contains));
                    this.mUIBookvillaonlyButton.SearchProperties.Add(new PropertyExpression(HtmlButton.PropertyNames.Name, "$villaCtrl$lnkBookVO", PropertyExpressionOperator.Contains));
                    this.mUIBookvillaonlyButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Book villa only";
                    this.mUIBookvillaonlyButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIBookvillaonlyButton.FilterProperties[HtmlButton.PropertyNames.Title] = "";
                    this.mUIBookvillaonlyButton.FilterProperties[HtmlButton.PropertyNames.Class] = "link_button";
                    this.mUIBookvillaonlyButton.FilterProperties.Add(new PropertyExpression(HtmlButton.PropertyNames.ControlDefinition, "$MainContent$lvVillaInfo$ctrl", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIBookvillaonlyButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIBookvillaonlyButton;
        #endregion
    }
}
