// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.OtherPaxPage.verifyOtherPaxPageOpened_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyOtherPaxPageOpened_Map:logWriter
    {
        
        /// <summary>
        /// verifyOtherPaxPageOpened_Method - Use 'verifyOtherPaxPageOpened_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyOtherPaxPageOpened_Method(string strURL)
        {
            delayExecution(strURL);
            #region Variable Declarations
            HtmlCell uIOtherPassengersCell = this.UIOtherPassengersDetaiWindow.UIOtherPassengersDetaiDocument.UIOtherPassengersCell;
            #endregion

            // Verify that the 'InnerText' property of 'Other Passengers' cell contains '  Other Passengers   '
            //StringAssert.Contains(uIOtherPassengersCell.InnerText, this.verifyOtherPaxPageOpened_MethodExpectedValues.UIOtherPassengersCellInnerText);

            try
            {
                StringAssert.Contains(uIOtherPassengersCell.InnerText, this.verifyOtherPaxPageOpened_MethodExpectedValues.UIOtherPassengersCellInnerText);
                WriteLogs("PASS : Other Pax Page is Opened Successfully. : VERIFICATION");
            }
            catch (AssertFailedException ex)
            {
                takeImage("verifyOtherPaxPageOpened");
                WriteLogs("FAIL : Other Pax Page Could not Opened. : VERIFICATION");
                WriteLogs("-----------------" + ex.Message.ToString());
            }

        }

        public Boolean CheckifOtherPaxPageOpened_Method()
        {
            #region Variable Declarations
            HtmlCell uIOtherPassengersCell = this.UIOtherPassengersDetaiWindow.UIOtherPassengersDetaiDocument.UIOtherPassengersCell;
            #endregion
            uIOtherPassengersCell.WaitForControlExist(30000);      
            string URLFrmPage = UIOtherPassengersDetaiWindow.Uri.ToString();
            int dotindex = URLFrmPage.IndexOf(".");
            URLFrmPage = URLFrmPage.Remove(0, dotindex);
            string strUTLtocompare = ".villaplus.com/code_net/booking/allocatePax.aspx";

            Boolean IsOtherPaxOpened = StringAssert.Equals(URLFrmPage, strUTLtocompare);
            
            return IsOtherPaxOpened;
        }
        
        #region Properties
        public virtual verifyOtherPaxPageOpened_MethodExpectedValues verifyOtherPaxPageOpened_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyOtherPaxPageOpened_MethodExpectedValues == null))
                {
                    this.mverifyOtherPaxPageOpened_MethodExpectedValues = new verifyOtherPaxPageOpened_MethodExpectedValues();
                }
                return this.mverifyOtherPaxPageOpened_MethodExpectedValues;
            }
        }
        
        public UIOtherPassengersDetaiWindow UIOtherPassengersDetaiWindow
        {
            get
            {
                if ((this.mUIOtherPassengersDetaiWindow == null))
                {
                    this.mUIOtherPassengersDetaiWindow = new UIOtherPassengersDetaiWindow();
                }
                return this.mUIOtherPassengersDetaiWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyOtherPaxPageOpened_MethodExpectedValues mverifyOtherPaxPageOpened_MethodExpectedValues;
        
        private UIOtherPassengersDetaiWindow mUIOtherPassengersDetaiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyOtherPaxPageOpened_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyOtherPaxPageOpened_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Other Passengers' cell contains '  Other Passengers   '
        /// </summary>
        public string UIOtherPassengersCellInnerText = "  Other Passengers   ";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIOtherPassengersDetaiWindow : BrowserWindow
    {
        
        public UIOtherPassengersDetaiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Other Passengers Details", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Other Passengers Details");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIOtherPassengersDetaiDocument UIOtherPassengersDetaiDocument
        {
            get
            {
                if ((this.mUIOtherPassengersDetaiDocument == null))
                {
                    this.mUIOtherPassengersDetaiDocument = new UIOtherPassengersDetaiDocument(this);
                }
                return this.mUIOtherPassengersDetaiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIOtherPassengersDetaiDocument mUIOtherPassengersDetaiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIOtherPassengersDetaiDocument : HtmlDocument
    {
        
        public UIOtherPassengersDetaiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Other Passengers Details", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/allocatePax.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/allocatePax.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Other Passengers Details");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIOtherPassengersCell
        {
            get
            {
                if ((this.mUIOtherPassengersCell == null))
                {
                    this.mUIOtherPassengersCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIOtherPassengersCell.SearchProperties[HtmlCell.PropertyNames.Id] = "mainContentsCell";
                    this.mUIOtherPassengersCell.SearchProperties.Add(new PropertyExpression(HtmlCell.PropertyNames.InnerText, "Other Passengers   ", PropertyExpressionOperator.Contains));
                    this.mUIOtherPassengersCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=\"padding-left10\" id=\"mainContentsCell\"";
                    this.mUIOtherPassengersCell.FilterProperties[HtmlCell.PropertyNames.Class] = "padding-left10";
                    this.mUIOtherPassengersCell.WindowTitles.Add("Other Passengers Details");
                    #endregion
                }
                return this.mUIOtherPassengersCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIOtherPassengersCell;
        #endregion
    }
}
