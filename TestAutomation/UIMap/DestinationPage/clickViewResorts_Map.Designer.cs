// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.DestinationsPage.clickViewResorts_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class clickViewResorts_Map:logWriter
    {
        
        /// <summary>
        /// clickViewResorts_Method
        /// </summary>
        public void clickViewResorts_Method()
        {
            #region Variable Declarations
            HtmlInputButton uIViewresortsButton = this.UIHttpnimbusdestinatioWindow.UIHttpnimbusdestinatioDocument.UIViewresortsButton;
            #endregion

            // Click 'View resorts' button
            Mouse.Click(uIViewresortsButton, new Point(78, 17));
        }

        public void clickViewResortsMopdified_Method(List<string> villaCenterlst)
        {
            #region Variable Declarations
            HtmlInputButton uIViewresortsButton = this.UIHttpnimbusdestinatioWindow.UIHttpnimbusdestinatioDocument.UIViewresortsButton;
            #endregion

            // Click 'View villas' button

            string centreStr = "";

            UITestControlCollection ui = uIViewresortsButton.FindMatchingControls();
            foreach (UITestControl utc in ui)
            {
                try
                {
                    bool tempFound = false;
                    Mouse.Click(utc);
                    string compareURL = this.UIHttpnimbusdestinatioWindow.Uri.ToString();
                    foreach (string tempcentreStr in villaCenterlst)
                    {
                        centreStr = "resorts.aspx?dest=" + tempcentreStr;
                        if (compareURL.Contains(centreStr))
                        {
                            tempFound = true;
                            break;
                        }
                    }
                    if (tempFound == true)
                    {
                        WriteLogs("PASS : Click View Resorts : " + centreStr);
                        tempFound = false;
                    }
                    else
                    {
                        WriteLogs("FAIL : Click View Resorts : " + centreStr);
                    }
                    this.mUIHttpnimbusdestinatioWindow.Back();
                }
                catch (Exception ex)
                {
                    takeImage("clickViewResortsMopdified");
                    WriteLogs("FAIL : Click View Resorts : " + centreStr);
                    WriteLogs("--------" + ex.Message.ToString()); ;
                }
            }
            //Mouse.Click(uIViewvillasButton, new Point(48, 13));
        }

        #region Properties
        public UIHttpnimbusdestinatioWindow UIHttpnimbusdestinatioWindow
        {
            get
            {
                if ((this.mUIHttpnimbusdestinatioWindow == null))
                {
                    this.mUIHttpnimbusdestinatioWindow = new UIHttpnimbusdestinatioWindow();
                }
                return this.mUIHttpnimbusdestinatioWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIHttpnimbusdestinatioWindow mUIHttpnimbusdestinatioWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHttpnimbusdestinatioWindow : BrowserWindow
    {
        
        public UIHttpnimbusdestinatioWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "destinations.aspx", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("http://nimbus/destinations.aspx");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHttpnimbusdestinatioDocument UIHttpnimbusdestinatioDocument
        {
            get
            {
                if ((this.mUIHttpnimbusdestinatioDocument == null))
                {
                    this.mUIHttpnimbusdestinatioDocument = new UIHttpnimbusdestinatioDocument(this);
                }
                return this.mUIHttpnimbusdestinatioDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHttpnimbusdestinatioDocument mUIHttpnimbusdestinatioDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHttpnimbusdestinatioDocument : HtmlDocument
    {
        
        public UIHttpnimbusdestinatioDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/destinations.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://nimbus/destinations.aspx";
            this.WindowTitles.Add("http://nimbus/destinations.aspx");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIViewresortsButton
        {
            get
            {
                if ((this.mUIViewresortsButton == null))
                {
                    this.mUIViewresortsButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIViewresortsButton.SearchProperties.Add(new PropertyExpression(HtmlButton.PropertyNames.Id, "btnViewResorts", PropertyExpressionOperator.Contains));
                    this.mUIViewresortsButton.SearchProperties.Add(new PropertyExpression(HtmlButton.PropertyNames.Name, "btnViewResorts", PropertyExpressionOperator.Contains));
                    this.mUIViewresortsButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "View resorts";
                    this.mUIViewresortsButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIViewresortsButton.FilterProperties.Add(new PropertyExpression(HtmlButton.PropertyNames.Title, "resorts", PropertyExpressionOperator.Contains));
                    this.mUIViewresortsButton.FilterProperties[HtmlButton.PropertyNames.Class] = "button";
                    this.mUIViewresortsButton.FilterProperties.Add(new PropertyExpression(HtmlButton.PropertyNames.ControlDefinition, "btn", PropertyExpressionOperator.Contains));
                    this.mUIViewresortsButton.WindowTitles.Add("http://nimbus/destinations.aspx");
                    #endregion
                }
                return this.mUIViewresortsButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIViewresortsButton;
        #endregion
    }
}
