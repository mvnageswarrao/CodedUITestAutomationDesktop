// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.DestinationsPage.openBrowser_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class openBrowser_Map
    {
        
        /// <summary>
        /// openBrowser_Method - Use 'openBrowser_MethodParams' to pass parameters into this method.
        /// </summary>
        public void openBrowser_Method()
        {
            #region Variable Declarations
            WinButton uIToolsButton = this.UIBlankPageWindowsInteWindow.UIFavoritesandToolsBarToolBar.UIToolsButton;
            WinMenuItem uIF12developertoolsMenuItem = this.UIItemWindow.UIContextMenu.UIF12developertoolsMenuItem;
            WinMenuItem uIDocumentModeQuirksMenuItem = this.UIBlankPageWindowsInteWindow.UIF12MenuToolBar.UIDocumentModeQuirksMenuItem;
            WinMenuItem uIInternetExplorer9staMenuItem = this.UIItemWindow.UIContextMenu.UIInternetExplorer9staMenuItem;
            WinButton uICloseF12Button = this.UIBlankPageWindowsInteWindow.UIF12MenuToolBar.UICloseF12Button;
            #endregion

            // Go to web page 'about:blank' using new browser instance
            this.UIBlankPageWindowsInteWindow.LaunchUrl(new System.Uri(this.openBrowser_MethodParams.UIBlankPageWindowsInteWindowUrl));

            // Click 'Tools' button
            //Mouse.Click(uIToolsButton, new Point(18, 13));

            // Click 'F12 developer tools' menu item
            //Mouse.Click(uIF12developertoolsMenuItem, new Point(93, 15));

            // Click 'Document Mode: Quirks' menu item
            //Mouse.Click(uIDocumentModeQuirksMenuItem, new Point(83, 11));

            // Click 'Internet Explorer 9 standards Alt+9' menu item
            //Mouse.Click(uIInternetExplorer9staMenuItem, new Point(86, 16));

            // Click 'Close (F12)' button
            //Mouse.Click(uICloseF12Button, new Point(9, 11));
        }
        
        public void closeBrowser_Method()
        {
            this.UIBlankPageWindowsInteWindow.Close();
        }

        #region Properties
        public virtual openBrowser_MethodParams openBrowser_MethodParams
        {
            get
            {
                if ((this.mopenBrowser_MethodParams == null))
                {
                    this.mopenBrowser_MethodParams = new openBrowser_MethodParams();
                }
                return this.mopenBrowser_MethodParams;
            }
        }
        
        public UIRunningapplicationsWindow UIRunningapplicationsWindow
        {
            get
            {
                if ((this.mUIRunningapplicationsWindow == null))
                {
                    this.mUIRunningapplicationsWindow = new UIRunningapplicationsWindow();
                }
                return this.mUIRunningapplicationsWindow;
            }
        }
        
        public UIJumpListWindow UIJumpListWindow
        {
            get
            {
                if ((this.mUIJumpListWindow == null))
                {
                    this.mUIJumpListWindow = new UIJumpListWindow();
                }
                return this.mUIJumpListWindow;
            }
        }
        
        public UIBlankPageWindowsInteWindow UIBlankPageWindowsInteWindow
        {
            get
            {
                if ((this.mUIBlankPageWindowsInteWindow == null))
                {
                    this.mUIBlankPageWindowsInteWindow = new UIBlankPageWindowsInteWindow();
                }
                return this.mUIBlankPageWindowsInteWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1();
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private openBrowser_MethodParams mopenBrowser_MethodParams;
        
        private UIRunningapplicationsWindow mUIRunningapplicationsWindow;
        
        private UIJumpListWindow mUIJumpListWindow;
        
        private UIBlankPageWindowsInteWindow mUIBlankPageWindowsInteWindow;
        
        private UIItemWindow1 mUIItemWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'openBrowser_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class openBrowser_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'about:blank' using new browser instance
        /// </summary>
        public string UIBlankPageWindowsInteWindowUrl = "about:blank";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIRunningapplicationsWindow : WinWindow
    {
        
        public UIRunningapplicationsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Running applications";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MSTaskSwWClass";
            this.WindowTitles.Add("Running applications");
            #endregion
        }
        
        #region Properties
        public UIRunningapplicationsToolBar UIRunningapplicationsToolBar
        {
            get
            {
                if ((this.mUIRunningapplicationsToolBar == null))
                {
                    this.mUIRunningapplicationsToolBar = new UIRunningapplicationsToolBar(this);
                }
                return this.mUIRunningapplicationsToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIRunningapplicationsToolBar mUIRunningapplicationsToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIRunningapplicationsToolBar : WinToolBar
    {
        
        public UIRunningapplicationsToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Running applications";
            this.WindowTitles.Add("Running applications");
            #endregion
        }
        
        #region Properties
        public WinControl UIInternetExplorerMenuButton
        {
            get
            {
                if ((this.mUIInternetExplorerMenuButton == null))
                {
                    this.mUIInternetExplorerMenuButton = new WinControl(this);
                    #region Search Criteria
                    this.mUIInternetExplorerMenuButton.SearchProperties[UITestControl.PropertyNames.Name] = "Internet Explorer";
                    this.mUIInternetExplorerMenuButton.SearchProperties[UITestControl.PropertyNames.ControlType] = "MenuButton";
                    this.mUIInternetExplorerMenuButton.WindowTitles.Add("Running applications");
                    #endregion
                }
                return this.mUIInternetExplorerMenuButton;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIInternetExplorerMenuButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIJumpListWindow : WinWindow
    {
        
        public UIJumpListWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Jump List";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DV2ControlHost";
            this.WindowTitles.Add("Jump List");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "9";
            this.WindowTitles.Add("Jump List");
            #endregion
        }
        
        #region Properties
        public UIJumpListClient UIJumpListClient
        {
            get
            {
                if ((this.mUIJumpListClient == null))
                {
                    this.mUIJumpListClient = new UIJumpListClient(this);
                }
                return this.mUIJumpListClient;
            }
        }
        #endregion
        
        #region Fields
        private UIJumpListClient mUIJumpListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIJumpListClient : WinClient
    {
        
        public UIJumpListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Jump List");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIInternetExplorerMenuItem
        {
            get
            {
                if ((this.mUIInternetExplorerMenuItem == null))
                {
                    this.mUIInternetExplorerMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIInternetExplorerMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Internet Explorer";
                    this.mUIInternetExplorerMenuItem.WindowTitles.Add("Jump List");
                    #endregion
                }
                return this.mUIInternetExplorerMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIInternetExplorerMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBlankPageWindowsInteWindow : BrowserWindow
    {
        
        public UIBlankPageWindowsInteWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Blank Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Blank Page");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIFavoritesandToolsBarToolBar UIFavoritesandToolsBarToolBar
        {
            get
            {
                if ((this.mUIFavoritesandToolsBarToolBar == null))
                {
                    this.mUIFavoritesandToolsBarToolBar = new UIFavoritesandToolsBarToolBar(this);
                }
                return this.mUIFavoritesandToolsBarToolBar;
            }
        }
        
        public UIF12MenuToolBar UIF12MenuToolBar
        {
            get
            {
                if ((this.mUIF12MenuToolBar == null))
                {
                    this.mUIF12MenuToolBar = new UIF12MenuToolBar(this);
                }
                return this.mUIF12MenuToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIFavoritesandToolsBarToolBar mUIFavoritesandToolsBarToolBar;
        
        private UIF12MenuToolBar mUIF12MenuToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIFavoritesandToolsBarToolBar : WinToolBar
    {
        
        public UIFavoritesandToolsBarToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Favorites and Tools Bar";
            this.WindowTitles.Add("Blank Page");
            #endregion
        }
        
        #region Properties
        public WinButton UIToolsButton
        {
            get
            {
                if ((this.mUIToolsButton == null))
                {
                    this.mUIToolsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIToolsButton.SearchProperties[WinButton.PropertyNames.Name] = "Tools";
                    this.mUIToolsButton.WindowTitles.Add("Blank Page");
                    #endregion
                }
                return this.mUIToolsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIToolsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIF12MenuToolBar : WinToolBar
    {
        
        public UIF12MenuToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "F12 Menu";
            this.WindowTitles.Add("Blank Page");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIDocumentModeQuirksMenuItem
        {
            get
            {
                if ((this.mUIDocumentModeQuirksMenuItem == null))
                {
                    this.mUIDocumentModeQuirksMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIDocumentModeQuirksMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Document Mode:  Quirks";
                    this.mUIDocumentModeQuirksMenuItem.WindowTitles.Add("Blank Page");
                    #endregion
                }
                return this.mUIDocumentModeQuirksMenuItem;
            }
        }
        
        public WinButton UICloseF12Button
        {
            get
            {
                if ((this.mUICloseF12Button == null))
                {
                    this.mUICloseF12Button = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseF12Button.SearchProperties[WinButton.PropertyNames.Name] = "Close (F12)";
                    this.mUICloseF12Button.WindowTitles.Add("Blank Page");
                    #endregion
                }
                return this.mUICloseF12Button;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIDocumentModeQuirksMenuItem;
        
        private WinButton mUICloseF12Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIF12developertoolsMenuItem
        {
            get
            {
                if ((this.mUIF12developertoolsMenuItem == null))
                {
                    this.mUIF12developertoolsMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIF12developertoolsMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "F12 developer tools";
                    #endregion
                }
                return this.mUIF12developertoolsMenuItem;
            }
        }
        
        public WinMenuItem UIInternetExplorer9staMenuItem
        {
            get
            {
                if ((this.mUIInternetExplorer9staMenuItem == null))
                {
                    this.mUIInternetExplorer9staMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIInternetExplorer9staMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Internet Explorer 9 standards\tAlt+9";
                    #endregion
                }
                return this.mUIInternetExplorer9staMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIF12developertoolsMenuItem;
        
        private WinMenuItem mUIInternetExplorer9staMenuItem;
        #endregion
    }
}
