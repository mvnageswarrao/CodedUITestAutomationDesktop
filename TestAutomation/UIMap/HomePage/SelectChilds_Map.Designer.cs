// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.HomePage.SelectChilds_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class SelectChilds_Map
    {
        
        /// <summary>
        /// SelectChilds_Method - Use 'SelectChilds_MethodParams' to pass parameters into this method.
        /// </summary>
        public void SelectChilds_Method()
        {
            #region Variable Declarations
            HtmlComboBox uIDdChildrenComboBox = this.UIHomePageWindowsInterWindow.UIHomePageDocument.UIDdChildrenComboBox;
            #endregion

            // Select '1' in 'ddChildren' combo box
            uIDdChildrenComboBox.SelectedItem = this.SelectChilds_MethodParams.UIDdChildrenComboBoxSelectedItem;
        }
        
        #region Properties
        public virtual SelectChilds_MethodParams SelectChilds_MethodParams
        {
            get
            {
                if ((this.mSelectChilds_MethodParams == null))
                {
                    this.mSelectChilds_MethodParams = new SelectChilds_MethodParams();
                }
                return this.mSelectChilds_MethodParams;
            }
        }
        
        public UIHomePageWindowsInterWindow UIHomePageWindowsInterWindow
        {
            get
            {
                if ((this.mUIHomePageWindowsInterWindow == null))
                {
                    this.mUIHomePageWindowsInterWindow = new UIHomePageWindowsInterWindow();
                }
                return this.mUIHomePageWindowsInterWindow;
            }
        }
        #endregion
        
        #region Fields
        private SelectChilds_MethodParams mSelectChilds_MethodParams;
        
        private UIHomePageWindowsInterWindow mUIHomePageWindowsInterWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectChilds_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SelectChilds_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select '1' in 'ddChildren' combo box
        /// </summary>
        public string UIDdChildrenComboBoxSelectedItem = "1";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHomePageWindowsInterWindow : BrowserWindow
    {
        
        public UIHomePageWindowsInterWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHomePageDocument UIHomePageDocument
        {
            get
            {
                if ((this.mUIHomePageDocument == null))
                {
                    this.mUIHomePageDocument = new UIHomePageDocument(this);
                }
                return this.mUIHomePageDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHomePageDocument mUIHomePageDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHomePageDocument : HtmlDocument
    {
        
        public UIHomePageDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "http://", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Home Page");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIForm1Custom
        {
            get
            {
                if ((this.mUIForm1Custom == null))
                {
                    this.mUIForm1Custom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIForm1Custom.SearchProperties["Id"] = "form1";
                    this.mUIForm1Custom.SearchProperties["TagName"] = "FORM";
                    this.mUIForm1Custom.FilterProperties.Add(new PropertyExpression("ControlDefinition", "id=form1 ", PropertyExpressionOperator.Contains));
                    this.mUIForm1Custom.FilterProperties["TagInstance"] = "1";
                    this.mUIForm1Custom.WindowTitles.Add("Home Page");
                    #endregion
                }
                return this.mUIForm1Custom;
            }
        }
        
        public HtmlComboBox UIDdChildrenComboBox
        {
            get
            {
                if ((this.mUIDdChildrenComboBox == null))
                {
                    this.mUIDdChildrenComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDdChildrenComboBox.SearchProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.Id, "ddChildren", PropertyExpressionOperator.Contains));
                    this.mUIDdChildrenComboBox.SearchProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.Name, "ddChildren", PropertyExpressionOperator.Contains));
                    this.mUIDdChildrenComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIDdChildrenComboBox.FilterProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.ItemCount, "19", PropertyExpressionOperator.Contains));
                    this.mUIDdChildrenComboBox.FilterProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.ControlDefinition, "id=ddChildren", PropertyExpressionOperator.Contains));
                    this.mUIDdChildrenComboBox.FilterProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.TagInstance, "5", PropertyExpressionOperator.Contains));
                    this.mUIDdChildrenComboBox.WindowTitles.Add("Home Page");
                    #endregion
                }
                return this.mUIDdChildrenComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIForm1Custom;
        
        private HtmlComboBox mUIDdChildrenComboBox;
        #endregion
    }
}
