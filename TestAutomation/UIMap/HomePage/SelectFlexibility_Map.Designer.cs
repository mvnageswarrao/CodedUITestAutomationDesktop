// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.HomePage.SelectFlexibility_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class SelectFlexibility_Map
    {
        
        /// <summary>
        /// SelectFlexibility_Method - Use 'SelectFlexibility_MethodParams' to pass parameters into this method.
        /// </summary>
        public void SelectFlexibility_Method()
        {
            #region Variable Declarations
            HtmlComboBox uIDdFlexibilityComboBox = this.UIHomePageWindowsInterWindow.UIHomePageDocument.UIDdFlexibilityComboBox;
            #endregion

            // Select '+/- 0 days' in 'ddFlexibility' combo box
            int flexItmeCount = uIDdFlexibilityComboBox.ItemCount;
            Random randomItem = new Random();
            int flexItemNumber = randomItem.Next(0, flexItmeCount);
            //uIDdFlexibilityComboBox.SelectedItem = this.SelectFlexibility_MethodParams.UIDdFlexibilityComboBoxSelectedItem;
            uIDdFlexibilityComboBox.SelectedIndex = flexItemNumber;
        }
        
        #region Properties
        public virtual SelectFlexibility_MethodParams SelectFlexibility_MethodParams
        {
            get
            {
                if ((this.mSelectFlexibility_MethodParams == null))
                {
                    this.mSelectFlexibility_MethodParams = new SelectFlexibility_MethodParams();
                }
                return this.mSelectFlexibility_MethodParams;
            }
        }
        
        public UIHomePageWindowsInterWindow UIHomePageWindowsInterWindow
        {
            get
            {
                if ((this.mUIHomePageWindowsInterWindow == null))
                {
                    this.mUIHomePageWindowsInterWindow = new UIHomePageWindowsInterWindow();
                }
                return this.mUIHomePageWindowsInterWindow;
            }
        }
        #endregion
        
        #region Fields
        private SelectFlexibility_MethodParams mSelectFlexibility_MethodParams;
        
        private UIHomePageWindowsInterWindow mUIHomePageWindowsInterWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectFlexibility_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SelectFlexibility_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select '+/- 0 days' in 'ddFlexibility' combo box
        /// </summary>
        public string UIDdFlexibilityComboBoxSelectedItem = "+/- 0 days";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHomePageWindowsInterWindow : BrowserWindow
    {
        
        public UIHomePageWindowsInterWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHomePageDocument UIHomePageDocument
        {
            get
            {
                if ((this.mUIHomePageDocument == null))
                {
                    this.mUIHomePageDocument = new UIHomePageDocument(this);
                }
                return this.mUIHomePageDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHomePageDocument mUIHomePageDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHomePageDocument : HtmlDocument
    {
        
        public UIHomePageDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "http://", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Home Page");
            #endregion
        }
        
        #region Properties
        public UIForm1Custom UIForm1Custom
        {
            get
            {
                if ((this.mUIForm1Custom == null))
                {
                    this.mUIForm1Custom = new UIForm1Custom(this);
                }
                return this.mUIForm1Custom;
            }
        }
        
        public HtmlComboBox UIDdFlexibilityComboBox
        {
            get
            {
                if ((this.mUIDdFlexibilityComboBox == null))
                {
                    this.mUIDdFlexibilityComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDdFlexibilityComboBox.SearchProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.Id, "ddFlexibility", PropertyExpressionOperator.Contains));
                    this.mUIDdFlexibilityComboBox.SearchProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.Name, "ddFlexibility", PropertyExpressionOperator.Contains));
                    this.mUIDdFlexibilityComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIDdFlexibilityComboBox.FilterProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.Class, "ddlFlexibility", PropertyExpressionOperator.Contains));
                    this.mUIDdFlexibilityComboBox.FilterProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.ControlDefinition, "id=ddF", PropertyExpressionOperator.Contains));
                    this.mUIDdFlexibilityComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "3";
                    this.mUIDdFlexibilityComboBox.WindowTitles.Add("Home Page");
                    #endregion
                }
                return this.mUIDdFlexibilityComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIForm1Custom mUIForm1Custom;
        
        private HtmlComboBox mUIDdFlexibilityComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIForm1Custom : HtmlCustom
    {
        
        public UIForm1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression("Id", "form1", PropertyExpressionOperator.Contains));
            this.SearchProperties["TagName"] = "FORM";
            this.FilterProperties.Add(new PropertyExpression("ControlDefinition", "id=form1 ", PropertyExpressionOperator.Contains));
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Home Page");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItem12345BettervillaPane
        {
            get
            {
                if ((this.mUIItem12345BettervillaPane == null))
                {
                    this.mUIItem12345BettervillaPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem12345BettervillaPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItem12345BettervillaPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem12345BettervillaPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "12345  ", PropertyExpressionOperator.Contains));
                    this.mUIItem12345BettervillaPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "main";
                    this.mUIItem12345BettervillaPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "class=main", PropertyExpressionOperator.Contains));
                    this.mUIItem12345BettervillaPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    this.mUIItem12345BettervillaPane.WindowTitles.Add("Home Page");
                    #endregion
                }
                return this.mUIItem12345BettervillaPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItem12345BettervillaPane;
        #endregion
    }
}
