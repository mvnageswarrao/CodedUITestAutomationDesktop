// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ResortPage.verifyHeadingText_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    using System.Diagnostics;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class verifyHeadingText_Map:logWriter
    {
        
        /// <summary>
        /// verifyHeadingText_Method - Use 'verifyHeadingText_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyHeadingText_Method(string villaCenterName)
        {
            #region Variable Declarations
            HtmlSpan uIResortsinAlgarvePane = this.UIHolidayVillaResortsiWindow.UIHolidayVillaResortsiDocument.UIResortsinAlgarvePane;
            #endregion

            // Verify that the 'InnerText' property of 'Resorts in Algarve' pane equals 'Resorts in Algarve'
            //Assert.AreEqual(this.verifyHeadingText_MethodExpectedValues.UIResortsinAlgarvePaneInnerText, uIResortsinAlgarvePane.InnerText);
            string txtToCompare = "Resorts In " + villaCenterName;
            
            try
            {
                Assert.AreEqual(txtToCompare, uIResortsinAlgarvePane.InnerText);
                WriteLogs("PASS : Heading Text " + txtToCompare + "");
            }
            catch (AssertFailedException ex)
            {
                WriteLogs("FAIL : Heading Text " + txtToCompare + "");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual verifyHeadingText_MethodExpectedValues verifyHeadingText_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyHeadingText_MethodExpectedValues == null))
                {
                    this.mverifyHeadingText_MethodExpectedValues = new verifyHeadingText_MethodExpectedValues();
                }
                return this.mverifyHeadingText_MethodExpectedValues;
            }
        }
        
        public UIHolidayVillaResortsiWindow UIHolidayVillaResortsiWindow
        {
            get
            {
                if ((this.mUIHolidayVillaResortsiWindow == null))
                {
                    this.mUIHolidayVillaResortsiWindow = new UIHolidayVillaResortsiWindow();
                }
                return this.mUIHolidayVillaResortsiWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyHeadingText_MethodExpectedValues mverifyHeadingText_MethodExpectedValues;
        
        private UIHolidayVillaResortsiWindow mUIHolidayVillaResortsiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyHeadingText_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class verifyHeadingText_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Resorts in Algarve' pane equals 'Resorts in Algarve'
        /// </summary>
        public string UIResortsinAlgarvePaneInnerText = "Resorts in Algarve";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHolidayVillaResortsiWindow : BrowserWindow
    {
        
        public UIHolidayVillaResortsiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Holiday Villa Resorts in Algarve - Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHolidayVillaResortsiDocument UIHolidayVillaResortsiDocument
        {
            get
            {
                if ((this.mUIHolidayVillaResortsiDocument == null))
                {
                    this.mUIHolidayVillaResortsiDocument = new UIHolidayVillaResortsiDocument(this);
                }
                return this.mUIHolidayVillaResortsiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHolidayVillaResortsiDocument mUIHolidayVillaResortsiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHolidayVillaResortsiDocument : HtmlDocument
    {
        
        public UIHolidayVillaResortsiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Holiday Villa Resorts in Algarve - Villa Plus";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/resorts.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://nimbus/resorts.aspx?dest=AL";
            this.WindowTitles.Add("Holiday Villa Resorts in Algarve - Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIResortsinAlgarvePane
        {
            get
            {
                if ((this.mUIResortsinAlgarvePane == null))
                {
                    this.mUIResortsinAlgarvePane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIResortsinAlgarvePane.SearchProperties[HtmlDiv.PropertyNames.Id] = "topContent_lblDestinationName";
                    this.mUIResortsinAlgarvePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIResortsinAlgarvePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Resorts in Algarve";
                    this.mUIResortsinAlgarvePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIResortsinAlgarvePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "Heading1 floatleft";
                    this.mUIResortsinAlgarvePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"topContent_lblDestinationName\" class";
                    this.mUIResortsinAlgarvePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIResortsinAlgarvePane.WindowTitles.Add("Holiday Villa Resorts in Algarve - Villa Plus");
                    #endregion
                }
                return this.mUIResortsinAlgarvePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIResortsinAlgarvePane;
        #endregion
    }
}
