// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ThankYouPage.selectRefFromList_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class selectRefFromList_Map:logWriter
    {
        
        /// <summary>
        /// selectRefFromList_Method - Use 'selectRefFromList_MethodParams' to pass parameters into this method.
        /// </summary>
        public void selectRefFromList_Method(string strURL)
        {
            delayExecution(strURL);

            #region Variable Declarations
            HtmlComboBox uIDrpReferralComboBox = this.UIThankYouWindowsInterWindow.UIThankYouDocument1.UIIfrmReferralSourceFrame.UISelectReferralSourceDocument.UIDrpReferralComboBox;
            #endregion

            // Select 'Social Media' in 'drpReferral' combo box
            uIDrpReferralComboBox.SelectedItem = this.selectRefFromList_MethodParams.UIDrpReferralComboBoxSelectedItem;
        }
        
        #region Properties
        public virtual selectRefFromList_MethodParams selectRefFromList_MethodParams
        {
            get
            {
                if ((this.mselectRefFromList_MethodParams == null))
                {
                    this.mselectRefFromList_MethodParams = new selectRefFromList_MethodParams();
                }
                return this.mselectRefFromList_MethodParams;
            }
        }
        
        public UIThankYouWindowsInterWindow UIThankYouWindowsInterWindow
        {
            get
            {
                if ((this.mUIThankYouWindowsInterWindow == null))
                {
                    this.mUIThankYouWindowsInterWindow = new UIThankYouWindowsInterWindow();
                }
                return this.mUIThankYouWindowsInterWindow;
            }
        }
        #endregion
        
        #region Fields
        private selectRefFromList_MethodParams mselectRefFromList_MethodParams;
        
        private UIThankYouWindowsInterWindow mUIThankYouWindowsInterWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'selectRefFromList_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class selectRefFromList_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Social Media' in 'drpReferral' combo box
        /// </summary>
        public string UIDrpReferralComboBoxSelectedItem = "Social Media";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIThankYouWindowsInterWindow : BrowserWindow
    {
        
        public UIThankYouWindowsInterWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Thank You", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Thank You");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIThankYouDocument UIThankYouDocument
        {
            get
            {
                if ((this.mUIThankYouDocument == null))
                {
                    this.mUIThankYouDocument = new UIThankYouDocument(this);
                }
                return this.mUIThankYouDocument;
            }
        }
        
        public UIThankYouDocument1 UIThankYouDocument1
        {
            get
            {
                if ((this.mUIThankYouDocument1 == null))
                {
                    this.mUIThankYouDocument1 = new UIThankYouDocument1(this);
                }
                return this.mUIThankYouDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIThankYouDocument mUIThankYouDocument;
        
        private UIThankYouDocument1 mUIThankYouDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIThankYouDocument : HtmlDocument
    {
        
        public UIThankYouDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Thank You", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/bookingstatus.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/bookingstatus.aspx?thankyou", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Thank You");
            #endregion
        }
        
        #region Properties
        public UIIfrmReferralSourceFrame UIIfrmReferralSourceFrame
        {
            get
            {
                if ((this.mUIIfrmReferralSourceFrame == null))
                {
                    this.mUIIfrmReferralSourceFrame = new UIIfrmReferralSourceFrame(this);
                }
                return this.mUIIfrmReferralSourceFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIIfrmReferralSourceFrame mUIIfrmReferralSourceFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIIfrmReferralSourceFrame : HtmlIFrame
    {
        
        public UIIfrmReferralSourceFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "ifrmReferralSource";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "ifrmReferralSource";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.AbsolutePath, "referralSource.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "referralSource.aspx?bookingid=", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "name=\"ifrmReferralSource\" width=\"500\" he";
            this.WindowTitles.Add("Thank You");
            #endregion
        }
        
        #region Properties
        public UISelectReferralSourceDocument UISelectReferralSourceDocument
        {
            get
            {
                if ((this.mUISelectReferralSourceDocument == null))
                {
                    this.mUISelectReferralSourceDocument = new UISelectReferralSourceDocument(this);
                }
                return this.mUISelectReferralSourceDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISelectReferralSourceDocument mUISelectReferralSourceDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISelectReferralSourceDocument : HtmlDocument
    {
        
        public UISelectReferralSourceDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Select Referral Source", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/referralSource.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/referralSource.aspx?bookingid=", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Thank You");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIDrpReferralComboBox
        {
            get
            {
                if ((this.mUIDrpReferralComboBox == null))
                {
                    this.mUIDrpReferralComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDrpReferralComboBox.SearchProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.Id, "drpReferral", PropertyExpressionOperator.Contains));
                    this.mUIDrpReferralComboBox.SearchProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.Name, "$drpReferral", PropertyExpressionOperator.Contains));
                    this.mUIDrpReferralComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"ctl00$ContentPlaceHolder1$drpRefer";
                    this.mUIDrpReferralComboBox.WindowTitles.Add("Thank You");
                    #endregion
                }
                return this.mUIDrpReferralComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIDrpReferralComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIThankYouDocument1 : HtmlDocument
    {
        
        public UIThankYouDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Thank You", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/bookingstatus.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/bookingstatus.aspx?thankyou", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Thank You");
            #endregion
        }
        
        #region Properties
        public UIIfrmReferralSourceFrame1 UIIfrmReferralSourceFrame
        {
            get
            {
                if ((this.mUIIfrmReferralSourceFrame == null))
                {
                    this.mUIIfrmReferralSourceFrame = new UIIfrmReferralSourceFrame1(this);
                }
                return this.mUIIfrmReferralSourceFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIIfrmReferralSourceFrame1 mUIIfrmReferralSourceFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIIfrmReferralSourceFrame1 : HtmlIFrame
    {
        
        public UIIfrmReferralSourceFrame1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "ifrmReferralSource";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "ifrmReferralSource";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.AbsolutePath, "referralSource.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "referralSource.aspx?", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.ControlDefinition, "name=\"ifrmReferralSource\" ", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Thank You");
            #endregion
        }
        
        #region Properties
        public UISelectReferralSourceDocument1 UISelectReferralSourceDocument
        {
            get
            {
                if ((this.mUISelectReferralSourceDocument == null))
                {
                    this.mUISelectReferralSourceDocument = new UISelectReferralSourceDocument1(this);
                }
                return this.mUISelectReferralSourceDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISelectReferralSourceDocument1 mUISelectReferralSourceDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISelectReferralSourceDocument1 : HtmlDocument
    {
        
        public UISelectReferralSourceDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Select Referral Source", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Thank You");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIDrpReferralComboBox
        {
            get
            {
                if ((this.mUIDrpReferralComboBox == null))
                {
                    this.mUIDrpReferralComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDrpReferralComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_ContentPlaceHolder1_drpReferral";
                    this.mUIDrpReferralComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$drpReferral";
                    this.mUIDrpReferralComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIDrpReferralComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIDrpReferralComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIDrpReferralComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "17";
                    this.mUIDrpReferralComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIDrpReferralComboBox.FilterProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.ControlDefinition, "ContentPlaceHolder", PropertyExpressionOperator.Contains));
                    this.mUIDrpReferralComboBox.WindowTitles.Add("Thank You");
                    #endregion
                }
                return this.mUIDrpReferralComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIDrpReferralComboBox;
        #endregion
    }
}
