// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ThankYouPage.verifyThankYouRefPopupdisplay_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyThankYouRefPopupdisplay_Map:logWriter
    {
        
        /// <summary>
        /// verifyThankYouRefPopupdisplay_Method - Use 'verifyThankYouRefPopupdisplay_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyThankYouRefPopupdisplay_Method()
        {
            #region Variable Declarations
            HtmlCustom uIAspnetFormCustom = this.UIThankYouWindowsInterWindow.UIThankYouDocument.UIIfrmReferralSourceFrame.UISelectReferralSourceDocument.UIAspnetFormCustom;
            #endregion
            
            try
            {
                string TextFromPage = uIAspnetFormCustom.InnerText;
                string ExpectedText = "How did you hear about us";

                //StringAssert.Contains(uIAspnetFormCustom.InnerText, this.verifyThankYouRefPopupdisplay_MethodExpectedValues.UIAspnetFormCustomInnerText);
                StringAssert.Contains(TextFromPage, ExpectedText);
                WriteLogs("PASS : Referal Popup is Opened Successfully on Thank You Page.");
            }
            catch (AssertFailedException ex)
            {
                takeImage("verifyThankYouRefPopupdisplay");
                WriteLogs("FAIL : Could not Find Referal Popup on Thank You Page.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual verifyThankYouRefPopupdisplay_MethodExpectedValues verifyThankYouRefPopupdisplay_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyThankYouRefPopupdisplay_MethodExpectedValues == null))
                {
                    this.mverifyThankYouRefPopupdisplay_MethodExpectedValues = new verifyThankYouRefPopupdisplay_MethodExpectedValues();
                }
                return this.mverifyThankYouRefPopupdisplay_MethodExpectedValues;
            }
        }
        
        public UIThankYouWindowsInterWindow UIThankYouWindowsInterWindow
        {
            get
            {
                if ((this.mUIThankYouWindowsInterWindow == null))
                {
                    this.mUIThankYouWindowsInterWindow = new UIThankYouWindowsInterWindow();
                }
                return this.mUIThankYouWindowsInterWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyThankYouRefPopupdisplay_MethodExpectedValues mverifyThankYouRefPopupdisplay_MethodExpectedValues;
        
        private UIThankYouWindowsInterWindow mUIThankYouWindowsInterWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyThankYouRefPopupdisplay_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyThankYouRefPopupdisplay_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'aspnetForm' custom control contains '    
        /////<![CDATA[ var theForm = document.forms['aspnetForm']; if (!theForm) { theForm = document.aspnetForm; } function __doPostBack(eventTarget, eventArgument) { if (!theForm.onsubmit || (theForm.onsubmit() != false)) { theForm.__EVENTTARGET.value = eventTarget; theForm.__EVENTARGUMENT.value = eventArgument; theForm.submit(); } } //]]>    //<![CDATA[ if (typeof(Sys) === 'undefined') throw new Error('ASP.NET Ajax client-side framework failed to load.'); //]]>    
        ///
        ///Thank You
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        /////<![CDATA[ Sys.WebForms.PageRequestManager._initialize('ctl00$ContentPlaceHolder1$ScriptManager1', 'aspnetForm', ['tctl00$ContentPlaceHolder1$UpdatePanel1',''], [], ['ctl00$ContentPlaceHolder1$btnNextEnable',''], 90, 'ctl00'); //]]>  
        ///
        /// 
        ///
        ///Thank-you for choosing Villa Plus. Please check your details carefully.
        ///
        /// 
        ///Before you continue, please can you tell us.... 
        /// 
        ///* Have you travelled with Villa Plus before?   
        ///
        ///YesNo
        ///
        ///  
        ///  
        ///  
        ///* HOW DID YOU HEAR ABOUT VILLA PLUS?
        ///
        ///
        ///Internet SearchNewspapersMagazinesOther
        ///
        ///
        ///
        ///-- Please select one -- Google Google Ireland Yahoo Uk MSN/Live FaceBook Ask.Com www.puertopollensa.com Trip Advisor Travelsupermarket Holiday Watchdog Review Centre Twitter ATOP.uk Travelwhere Online Advert  
        ///
        ///
        /// 
        ///
        ///
        ///
        ///
        ///
        ///(*) indicates mandatory fields  
        ///
        ///
        ///  
        ///
        ///
        ///
        ///
        ///
        /// 
        ///
        /// 
        ///
        /// 
        /// 
        ///
        ///                     OK  
        /// 
        /// 
        ///   
        /// '
        /// </summary>
        public string UIAspnetFormCustomInnerText = @"    
//<![CDATA[ var theForm = document.forms['aspnetForm']; if (!theForm) { theForm = document.aspnetForm; } function __doPostBack(eventTarget, eventArgument) { if (!theForm.onsubmit || (theForm.onsubmit() != false)) { theForm.__EVENTTARGET.value = eventTarget; theForm.__EVENTARGUMENT.value = eventArgument; theForm.submit(); } } //]]>    //<![CDATA[ if (typeof(Sys) === 'undefined') throw new Error('ASP.NET Ajax client-side framework failed to load.'); //]]>    

Thank You







//<![CDATA[ Sys.WebForms.PageRequestManager._initialize('ctl00$ContentPlaceHolder1$ScriptManager1', 'aspnetForm', ['tctl00$ContentPlaceHolder1$UpdatePanel1',''], [], ['ctl00$ContentPlaceHolder1$btnNextEnable',''], 90, 'ctl00'); //]]>  

 

Thank-you for choosing Villa Plus. Please check your details carefully.

 
Before you continue, please can you tell us.... 
 
* Have you travelled with Villa Plus before?   

YesNo

  
  
  
* HOW DID YOU HEAR ABOUT VILLA PLUS?


Internet SearchNewspapersMagazinesOther



-- Please select one -- Google Google Ireland Yahoo Uk MSN/Live FaceBook Ask.Com www.puertopollensa.com Trip Advisor Travelsupermarket Holiday Watchdog Review Centre Twitter ATOP.uk Travelwhere Online Advert  


 





(*) indicates mandatory fields  


  





 

 

 
 

                     OK  
 
 
   
 ";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIThankYouWindowsInterWindow : BrowserWindow
    {
        
        public UIThankYouWindowsInterWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Thank You", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Thank You");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIThankYouDocument UIThankYouDocument
        {
            get
            {
                if ((this.mUIThankYouDocument == null))
                {
                    this.mUIThankYouDocument = new UIThankYouDocument(this);
                }
                return this.mUIThankYouDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIThankYouDocument mUIThankYouDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIThankYouDocument : HtmlDocument
    {
        
        public UIThankYouDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Thank You", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/bookingstatus.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/bookingstatus.aspx?thankyou", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Thank You");
            #endregion
        }
        
        #region Properties
        public UIIfrmReferralSourceFrame UIIfrmReferralSourceFrame
        {
            get
            {
                if ((this.mUIIfrmReferralSourceFrame == null))
                {
                    this.mUIIfrmReferralSourceFrame = new UIIfrmReferralSourceFrame(this);
                }
                return this.mUIIfrmReferralSourceFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIIfrmReferralSourceFrame mUIIfrmReferralSourceFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIIfrmReferralSourceFrame : HtmlIFrame
    {
        
        public UIIfrmReferralSourceFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "ifrmReferralSource";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "ifrmReferralSource";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.AbsolutePath, "referralSource.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "referralSource.aspx?bookingid=", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "name=\"ifrmReferralSource\" width=\"500\" he";
            this.WindowTitles.Add("Thank You");
            #endregion
        }
        
        #region Properties
        public UISelectReferralSourceDocument UISelectReferralSourceDocument
        {
            get
            {
                if ((this.mUISelectReferralSourceDocument == null))
                {
                    this.mUISelectReferralSourceDocument = new UISelectReferralSourceDocument(this);
                }
                return this.mUISelectReferralSourceDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISelectReferralSourceDocument mUISelectReferralSourceDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISelectReferralSourceDocument : HtmlDocument
    {
        
        public UISelectReferralSourceDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Select Referral Source", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/referralSource.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/referralSource.aspx?bookingid=", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Thank You");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIAspnetFormCustom
        {
            get
            {
                if ((this.mUIAspnetFormCustom == null))
                {
                    this.mUIAspnetFormCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIAspnetFormCustom.SearchProperties["TagName"] = "FORM";
                    this.mUIAspnetFormCustom.SearchProperties["Id"] = "aspnetForm";
                    this.mUIAspnetFormCustom.FilterProperties["ControlDefinition"] = "id=\"aspnetForm\" action=\"referralSource.a";
                    this.mUIAspnetFormCustom.WindowTitles.Add("Thank You");
                    #endregion
                }
                return this.mUIAspnetFormCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIAspnetFormCustom;
        #endregion
    }
}
