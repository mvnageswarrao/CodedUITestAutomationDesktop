// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.BookingPages.verifyTotalHolCost_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public partial class verifyTotalHolCost_Map:logWriter

    {
        
        /// <summary>
        /// verifyTotalHolCost_Method - Use 'verifyTotalHolCost_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyTotalHolCost_Method(decimal TOTALPRICE)
        {
            #region Variable Declarations
            HtmlCell uIItem170020Cell = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIIFrmTotalCostFrame.UIVillaPlusDocument.UIFrmCalculateTotalCosCustom.UIItemTable.UIItem170020Cell;
            #endregion

            // Verify that the 'InnerText' property of '£1700.20' cell contains '£1700.20'
            //StringAssert.Contains(uIItem170020Cell.InnerText, this.verifyTotalHolCost_MethodExpectedValues.UIItem170020CellInnerText);
            
            string TotalCostFromPage = uIItem170020Cell.InnerText.Trim();
            string TotalCostFromDB = "£"+TOTALPRICE.ToString().Trim();

            try
            {
                StringAssert.Contains(TotalCostFromPage, TotalCostFromDB);
                WriteLogs("PASS : Total Holiday Cost is Matched. : VERIFICATION");
            }
            catch (AssertFailedException ex)
            {
                takeImage("verifyTotalHolCost");
                WriteLogs("FAIL : Total Holiday Cost is Not Matched. : VERIFICATION");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual verifyTotalHolCost_MethodExpectedValues verifyTotalHolCost_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyTotalHolCost_MethodExpectedValues == null))
                {
                    this.mverifyTotalHolCost_MethodExpectedValues = new verifyTotalHolCost_MethodExpectedValues();
                }
                return this.mverifyTotalHolCost_MethodExpectedValues;
            }
        }
        
        public UIYourHolidaySummaryWiWindow UIYourHolidaySummaryWiWindow
        {
            get
            {
                if ((this.mUIYourHolidaySummaryWiWindow == null))
                {
                    this.mUIYourHolidaySummaryWiWindow = new UIYourHolidaySummaryWiWindow();
                }
                return this.mUIYourHolidaySummaryWiWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyTotalHolCost_MethodExpectedValues mverifyTotalHolCost_MethodExpectedValues;
        
        private UIYourHolidaySummaryWiWindow mUIYourHolidaySummaryWiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyTotalHolCost_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class verifyTotalHolCost_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '£1700.20' cell contains '£1700.20'
        /// </summary>
        public string UIItem170020CellInnerText = "£1700.20";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIYourHolidaySummaryWiWindow : BrowserWindow
    {
        
        public UIYourHolidaySummaryWiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYourHolidaySummaryDocument UIYourHolidaySummaryDocument
        {
            get
            {
                if ((this.mUIYourHolidaySummaryDocument == null))
                {
                    this.mUIYourHolidaySummaryDocument = new UIYourHolidaySummaryDocument(this);
                }
                return this.mUIYourHolidaySummaryDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourHolidaySummaryDocument mUIYourHolidaySummaryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIYourHolidaySummaryDocument : HtmlDocument
    {
        
        public UIYourHolidaySummaryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIIFrmTotalCostFrame UIIFrmTotalCostFrame
        {
            get
            {
                if ((this.mUIIFrmTotalCostFrame == null))
                {
                    this.mUIIFrmTotalCostFrame = new UIIFrmTotalCostFrame(this);
                }
                return this.mUIIFrmTotalCostFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIIFrmTotalCostFrame mUIIFrmTotalCostFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIIFrmTotalCostFrame : HtmlIFrame
    {
        
        public UIIFrmTotalCostFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "iFrmTotalCost";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "iFrmTotalCost";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.AbsolutePath, "calculateTotalCost.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "calculateTotalCost.aspx?refNo=", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "name=\"iFrmTotalCost\" id=\"iFrmTotalCost\" ";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIVillaPlusDocument UIVillaPlusDocument
        {
            get
            {
                if ((this.mUIVillaPlusDocument == null))
                {
                    this.mUIVillaPlusDocument = new UIVillaPlusDocument(this);
                }
                return this.mUIVillaPlusDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusDocument mUIVillaPlusDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIVillaPlusDocument : HtmlDocument
    {
        
        public UIVillaPlusDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/calculateTotalCost.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/calculateTotalCost.aspx?refNo", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIFrmCalculateTotalCosCustom UIFrmCalculateTotalCosCustom
        {
            get
            {
                if ((this.mUIFrmCalculateTotalCosCustom == null))
                {
                    this.mUIFrmCalculateTotalCosCustom = new UIFrmCalculateTotalCosCustom(this);
                }
                return this.mUIFrmCalculateTotalCosCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFrmCalculateTotalCosCustom mUIFrmCalculateTotalCosCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIFrmCalculateTotalCosCustom : HtmlCustom
    {
        
        public UIFrmCalculateTotalCosCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties.Add(new PropertyExpression("Id", "frmCalculateTotalCost", PropertyExpressionOperator.Contains));
            this.FilterProperties["ControlDefinition"] = "id=\"frmCalculateTotalCost\" style=\"backgr";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable mUIItemTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIItemTable : HtmlTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.FilterProperties.Add(new PropertyExpression(HtmlTable.PropertyNames.InnerText, "Total Holiday Cost £", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\"";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIItem170020Cell
        {
            get
            {
                if ((this.mUIItem170020Cell == null))
                {
                    this.mUIItem170020Cell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIItem170020Cell.SearchProperties.Add(new PropertyExpression(HtmlCell.PropertyNames.InnerText, "£", PropertyExpressionOperator.Contains));
                    this.mUIItem170020Cell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "align=\"right\" class=\"hsHeadersNoIndent tabBg contentText boldText\" style=\"padding" +
                        "-right: 5px; font-size: 12px;\"";
                    this.mUIItem170020Cell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "0";
                    this.mUIItem170020Cell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "1";
                    this.mUIItem170020Cell.FilterProperties[HtmlCell.PropertyNames.Class] = "hsHeadersNoIndent tabBg contentText boldText";
                    this.mUIItem170020Cell.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUIItem170020Cell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIItem170020Cell;
        #endregion
    }
}
