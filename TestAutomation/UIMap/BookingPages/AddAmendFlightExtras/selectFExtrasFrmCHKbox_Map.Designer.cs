// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.BookingPages.AddAmendFlightExtras.selectFExtrasFrmCHKbox_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class selectFExtrasFrmCHKbox_Map:logWriter
    {
        
        /// <summary>
        /// selectFExtrasFrmCHKbox_Method - Use 'selectFExtrasFrmCHKbox_MethodParams' to pass parameters into this method.
        /// </summary>
        public void selectFExtrasFrmCHKbox_Method()
        {
            #region Variable Declarations
            HtmlCheckBox uICtl00ContentPlaceHolCheckBox = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIAmendFlightExtraSeleFrame.UIUntitledPageDocument.UICtl00ContentPlaceHolCheckBox;
            #endregion

            Boolean IsCheckBoxthere = uICtl00ContentPlaceHolCheckBox.TryFind();

            if (IsCheckBoxthere == true)
            {
                try
                {
                    UITestControlCollection FExtrasCheckBoxestoSelect = uICtl00ContentPlaceHolCheckBox.FindMatchingControls();
                    foreach (HtmlCheckBox ChkBox in FExtrasCheckBoxestoSelect)
                    {
                        if (ChkBox.Enabled == true)
                        {
                            Boolean ischckboxchecked = ChkBox.Checked;
                            if (ischckboxchecked == true)
                            {
                                ChkBox.SetProperty("checked", false);
                                WriteLogs("PASS : Check Box is De-Selected for listed Flight Extra.");
                            }
                            else
                            {
                                ChkBox.SetProperty("checked", true);
                                WriteLogs("PASS : Check Box is Selected for listed Flight Extra.");
                            }
                        }
                        else
                        {
                            WriteLogs("PASS : The Check Box is Disabled and Could Not Select a Qty.");
                        }
                        WriteLogs("PASS : Quantity is Selected for all the listed Flight Extras.");
                    }
                }
                catch (AssertFailedException ex)
                {
                    takeImage("selectFExtrasFrmCHKbox");
                    WriteLogs("FAIL : Could Not Select Quantity check Box for all/Few of the listed Flight Extras.");
                    WriteLogs("-----------------" + ex.Message.ToString());
                }

                // Select 'ctl00$ContentPlaceHolder1$rptAmend$ctl01$chkSelect' check box
                //uICtl00ContentPlaceHolCheckBox.Checked = this.selectFExtrasFrmCHKbox_MethodParams.UICtl00ContentPlaceHolCheckBoxChecked;
            }
        }

        public Boolean IsFExtrasCHKboxthere_Method()
        {
            #region Variable Declarations
            HtmlCheckBox uICtl00ContentPlaceHolCheckBox = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIAmendFlightExtraSeleFrame.UIUntitledPageDocument.UICtl00ContentPlaceHolCheckBox;
            #endregion

            Boolean IsCheckBoxthere = false;
            IsCheckBoxthere = uICtl00ContentPlaceHolCheckBox.TryFind();

            //UITestControlCollection UIFExtraCHKBox = uICtl00ContentPlaceHolCheckBox.FindMatchingControls();
            //int NumofFextrasCHKBoxes = UIFExtraCHKBox.Count;
            //if (NumofFextrasCHKBoxes != 0)

            if (IsCheckBoxthere == true)
            {
                IsCheckBoxthere = true;
            }
            else
            {
                IsCheckBoxthere = false;
            }

            return IsCheckBoxthere;
        }
              
  
        #region Properties
        public virtual selectFExtrasFrmCHKbox_MethodParams selectFExtrasFrmCHKbox_MethodParams
        {
            get
            {
                if ((this.mselectFExtrasFrmCHKbox_MethodParams == null))
                {
                    this.mselectFExtrasFrmCHKbox_MethodParams = new selectFExtrasFrmCHKbox_MethodParams();
                }
                return this.mselectFExtrasFrmCHKbox_MethodParams;
            }
        }
        
        public UIYourHolidaySummaryWiWindow UIYourHolidaySummaryWiWindow
        {
            get
            {
                if ((this.mUIYourHolidaySummaryWiWindow == null))
                {
                    this.mUIYourHolidaySummaryWiWindow = new UIYourHolidaySummaryWiWindow();
                }
                return this.mUIYourHolidaySummaryWiWindow;
            }
        }
        #endregion
        
        #region Fields
        private selectFExtrasFrmCHKbox_MethodParams mselectFExtrasFrmCHKbox_MethodParams;
        
        private UIYourHolidaySummaryWiWindow mUIYourHolidaySummaryWiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'selectFExtrasFrmCHKbox_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class selectFExtrasFrmCHKbox_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'ctl00$ContentPlaceHolder1$rptAmend$ctl01$chkSelect' check box
        /// </summary>
        public bool UICtl00ContentPlaceHolCheckBoxChecked = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryWiWindow : BrowserWindow
    {
        
        public UIYourHolidaySummaryWiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYourHolidaySummaryDocument UIYourHolidaySummaryDocument
        {
            get
            {
                if ((this.mUIYourHolidaySummaryDocument == null))
                {
                    this.mUIYourHolidaySummaryDocument = new UIYourHolidaySummaryDocument(this);
                }
                return this.mUIYourHolidaySummaryDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourHolidaySummaryDocument mUIYourHolidaySummaryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryDocument : HtmlDocument
    {
        
        public UIYourHolidaySummaryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIAmendFlightExtraSeleFrame UIAmendFlightExtraSeleFrame
        {
            get
            {
                if ((this.mUIAmendFlightExtraSeleFrame == null))
                {
                    this.mUIAmendFlightExtraSeleFrame = new UIAmendFlightExtraSeleFrame(this);
                }
                return this.mUIAmendFlightExtraSeleFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIAmendFlightExtraSeleFrame mUIAmendFlightExtraSeleFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAmendFlightExtraSeleFrame : HtmlIFrame
    {
        
        public UIAmendFlightExtraSeleFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "amendFlightExtraSelection";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "amendFlightExtraSelection";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.AbsolutePath, "amendFlightExtra.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "amendFlightExtra.aspx?refNo=", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "name=\"amendFlightExtraSelection\" id=\"ame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIUntitledPageDocument UIUntitledPageDocument
        {
            get
            {
                if ((this.mUIUntitledPageDocument == null))
                {
                    this.mUIUntitledPageDocument = new UIUntitledPageDocument(this);
                }
                return this.mUIUntitledPageDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIUntitledPageDocument mUIUntitledPageDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIUntitledPageDocument : HtmlDocument
    {
        
        public UIUntitledPageDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/amendFlightExtra.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/amendFlightExtra.aspx?refNo=", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UICtl00ContentPlaceHolCheckBox
        {
            get
            {
                if ((this.mUICtl00ContentPlaceHolCheckBox == null))
                {
                    this.mUICtl00ContentPlaceHolCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00ContentPlaceHolCheckBox.SearchProperties.Add(new PropertyExpression(HtmlCheckBox.PropertyNames.Id, "ctl00_ContentPlaceHolder1_rptAmend_", PropertyExpressionOperator.Contains));
                    this.mUICtl00ContentPlaceHolCheckBox.SearchProperties.Add(new PropertyExpression(HtmlCheckBox.PropertyNames.Name, "ctl00$ContentPlaceHolder1$rptAmend$", PropertyExpressionOperator.Contains));
                    this.mUICtl00ContentPlaceHolCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"ctl00$ContentPlaceHolder1$rptAmend";
                    this.mUICtl00ContentPlaceHolCheckBox.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUICtl00ContentPlaceHolCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUICtl00ContentPlaceHolCheckBox;
        #endregion
    }
}
