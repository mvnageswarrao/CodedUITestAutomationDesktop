// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.BookingPages.verifyCheckInBagsPopupOpened_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class verifyCheckInBagsPopupOpened_Map:logWriter
    {
        
        /// <summary>
        /// verifyCheckInBagsPopupOpened_Method - Use 'verifyCheckInBagsPopupOpened_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public Boolean verifyCheckInBagsPopupOpened_Method()
        {
            #region Variable Declarations
            HtmlDiv uIDvAlertBoxPane = this.UIYourHolidaySummaryInWindow.UIYourHolidaySummaryDocument.UIDvAlertBoxPane;
            #endregion

            Boolean CheckInBagsPopupExits = false;

            try
            {
                CheckInBagsPopupExits = uIDvAlertBoxPane.TryFind();
                // Verify that the 'InnerText' property of 'Hold Items' cell equals 'Hold Items'
                //Assert.AreEqual(this.verifyHoldItemsPopupDisplay_MethodExpectedValues.UIHoldItemsCellInnerText, uIHoldItemsCell.InnerText);
                WriteLogs("PASS : Check-In Bags Popup displayed on HS page.");
            }
            catch (AssertFailedException ex)
            {
                takeImage("Check-In Bags");
                WriteLogs("INFO : Could not find Check-In Bags Popup.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }

            return CheckInBagsPopupExits;
        }
        
        #region Properties
        public virtual verifyCheckInBagsPopupOpened_MethodExpectedValues verifyCheckInBagsPopupOpened_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyCheckInBagsPopupOpened_MethodExpectedValues == null))
                {
                    this.mverifyCheckInBagsPopupOpened_MethodExpectedValues = new verifyCheckInBagsPopupOpened_MethodExpectedValues();
                }
                return this.mverifyCheckInBagsPopupOpened_MethodExpectedValues;
            }
        }
        
        public UIYourHolidaySummaryInWindow UIYourHolidaySummaryInWindow
        {
            get
            {
                if ((this.mUIYourHolidaySummaryInWindow == null))
                {
                    this.mUIYourHolidaySummaryInWindow = new UIYourHolidaySummaryInWindow();
                }
                return this.mUIYourHolidaySummaryInWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyCheckInBagsPopupOpened_MethodExpectedValues mverifyCheckInBagsPopupOpened_MethodExpectedValues;
        
        private UIYourHolidaySummaryInWindow mUIYourHolidaySummaryInWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyCheckInBagsPopupOpened_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class verifyCheckInBagsPopupOpened_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'dvAlertBox' pane contains 'Check-in Bags'
        /// </summary>
        public string UIDvAlertBoxPaneInnerText = "Check-in Bags";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYourHolidaySummaryInWindow : BrowserWindow
    {
        
        public UIYourHolidaySummaryInWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Your Holiday Summary";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYourHolidaySummaryDocument UIYourHolidaySummaryDocument
        {
            get
            {
                if ((this.mUIYourHolidaySummaryDocument == null))
                {
                    this.mUIYourHolidaySummaryDocument = new UIYourHolidaySummaryDocument(this);
                }
                return this.mUIYourHolidaySummaryDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourHolidaySummaryDocument mUIYourHolidaySummaryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYourHolidaySummaryDocument : HtmlDocument
    {
        
        public UIYourHolidaySummaryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Your Holiday Summary";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIDvAlertBoxPane
        {
            get
            {
                if ((this.mUIDvAlertBoxPane == null))
                {
                    this.mUIDvAlertBoxPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDvAlertBoxPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "dvAlertBox";
                    this.mUIDvAlertBoxPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Check-in Bags", PropertyExpressionOperator.Contains));
                    this.mUIDvAlertBoxPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "alertOuter";
                    this.mUIDvAlertBoxPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "class=\"alertOuter\" id=\"dvAlertBox\"", PropertyExpressionOperator.Contains));
                    this.mUIDvAlertBoxPane.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUIDvAlertBoxPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIDvAlertBoxPane;
        #endregion
    }
}
