// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.BookingPages.verifyAirportBoxOpened_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyAirportBoxOpened_Map:logWriter
    {
        
        /// <summary>
        /// verifyAirportBoxOpened_Method - Use 'verifyAirportBoxOpened_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyAirportBoxOpened_Method()
        {
            #region Variable Declarations
            HtmlDocument uIIncludeFlightDocument = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIIFrmIncludeFlightFrame.UIIncludeFlightDocument;
            #endregion

            try
            {
                StringAssert.Matches(uIIncludeFlightDocument.InnerText, new Regex(this.verifyAirportBoxOpened_MethodExpectedValues.UIIncludeFlightDocumentInnerText));
                WriteLogs("PASS : Departure Airport Box is Opened.");
            }
            catch (AssertFailedException ex)
            {
                takeImage("verifyAirportBoxOpened");
                WriteLogs("FAIL : Departure Airport Box is Not Opened.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
          
        }
        
        #region Properties
        public virtual verifyAirportBoxOpened_MethodExpectedValues verifyAirportBoxOpened_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyAirportBoxOpened_MethodExpectedValues == null))
                {
                    this.mverifyAirportBoxOpened_MethodExpectedValues = new verifyAirportBoxOpened_MethodExpectedValues();
                }
                return this.mverifyAirportBoxOpened_MethodExpectedValues;
            }
        }
        
        public UIYourHolidaySummaryWiWindow UIYourHolidaySummaryWiWindow
        {
            get
            {
                if ((this.mUIYourHolidaySummaryWiWindow == null))
                {
                    this.mUIYourHolidaySummaryWiWindow = new UIYourHolidaySummaryWiWindow();
                }
                return this.mUIYourHolidaySummaryWiWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyAirportBoxOpened_MethodExpectedValues mverifyAirportBoxOpened_MethodExpectedValues;
        
        private UIYourHolidaySummaryWiWindow mUIYourHolidaySummaryWiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyAirportBoxOpened_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyAirportBoxOpened_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Include Flight' document matches '
        /// 
        ///
        /// 
        ///  
        ///
        ///
        ///Departure Airport
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        ///Choose Airport All London All North West All Midlands All Scottish All South West All North East Aberdeen Belfast Intl Blackpool Birmingham Intl Bournemouth Bristol Cardiff Coventry Doncaster Durham East Midlands Edinburgh  Exeter Glasgow Humberside Leeds Bradford Liverpool London Gatwick London Heathrow London Luton London Southend London Stansted Manchester Newcastle Intl Norwich Southampton   
        ///    
        ///
        ///
        ///
        ///
        ///Note : For more flights/Airport choices. Please use "Amend Flights" button in the following screen. '
        /// </summary>
        public string UIIncludeFlightDocumentInnerText = @"
 

 
  


Departure Airport








Choose Airport All London All North West All Midlands All Scottish All South West All North East Aberdeen Belfast Intl Blackpool Birmingham Intl Bournemouth Bristol Cardiff Coventry Doncaster Durham East Midlands Edinburgh  Exeter Glasgow Humberside Leeds Bradford Liverpool London Gatwick London Heathrow London Luton London Southend London Stansted Manchester Newcastle Intl Norwich Southampton   
    




Note : For more flights/Airport choices. Please use ""Amend Flights"" button in the following screen. ";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryWiWindow : BrowserWindow
    {
        
        public UIYourHolidaySummaryWiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYourHolidaySummaryDocument UIYourHolidaySummaryDocument
        {
            get
            {
                if ((this.mUIYourHolidaySummaryDocument == null))
                {
                    this.mUIYourHolidaySummaryDocument = new UIYourHolidaySummaryDocument(this);
                }
                return this.mUIYourHolidaySummaryDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourHolidaySummaryDocument mUIYourHolidaySummaryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryDocument : HtmlDocument
    {
        
        public UIYourHolidaySummaryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIIFrmIncludeFlightFrame UIIFrmIncludeFlightFrame
        {
            get
            {
                if ((this.mUIIFrmIncludeFlightFrame == null))
                {
                    this.mUIIFrmIncludeFlightFrame = new UIIFrmIncludeFlightFrame(this);
                }
                return this.mUIIFrmIncludeFlightFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIIFrmIncludeFlightFrame mUIIFrmIncludeFlightFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIIFrmIncludeFlightFrame : HtmlIFrame
    {
        
        public UIIFrmIncludeFlightFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "iFrmIncludeFlight";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "iFrmIncludeFlight";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.AbsolutePath, "/code_net/booking/includeflight.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "/code_net/booking/includeflight.aspx?", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "name=\"iFrmIncludeFlight\" width=\"300\" hei";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public HtmlDocument UIIncludeFlightDocument
        {
            get
            {
                if ((this.mUIIncludeFlightDocument == null))
                {
                    this.mUIIncludeFlightDocument = new HtmlDocument(this);
                    #region Search Criteria
                    this.mUIIncludeFlightDocument.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
                    this.mUIIncludeFlightDocument.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
                    this.mUIIncludeFlightDocument.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Include Flight", PropertyExpressionOperator.Contains));
                    this.mUIIncludeFlightDocument.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/includeflight.aspx", PropertyExpressionOperator.Contains));
                    this.mUIIncludeFlightDocument.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/includeflight.aspx?", PropertyExpressionOperator.Contains));
                    this.mUIIncludeFlightDocument.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUIIncludeFlightDocument;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDocument mUIIncludeFlightDocument;
        #endregion
    }
}
