// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.BookingPages.AddAmendVillaExtras.verifyselectedVExtrasSavedOnHSPage_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    using System.Text;
    using System.Configuration;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyselectedVExtrasSavedOnHSPage_Map:logWriter
    {
        
        /// <summary>
        /// verifyselectedVExtrasSavedOnHSPage_Method - Use 'verifyselectedVExtrasSavedOnHSPage_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyselectedVExtrasSavedOnHSPage_Method(List<string> ListofVExtrasFrmDBAfterAdding, List<string> ListofVExtraUnitPriceFrmDB, List<string> ListofVExtraQtyFrmDB, List<string> ListofVExtraTotalPriceFrmDB, int MaxOCCUPANCY, int NumofADULTS, int NumofCHILD, int NumofINFANTS)
        {
            #region Variable Declarations
            HtmlTable uIItemTable = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIVillaExtrasRowPane.UIItemTable;
            #endregion

            int TotalPax = (NumofADULTS + NumofCHILD);

            if (TotalPax <= MaxOCCUPANCY)
            {
                int index = ListofVExtrasFrmDBAfterAdding.IndexOf("Z-Bed");
                ListofVExtrasFrmDBAfterAdding.Remove("Z-Bed");
                ListofVExtraUnitPriceFrmDB.RemoveAt(index);
                ListofVExtraQtyFrmDB.RemoveAt(index);
                ListofVExtraTotalPriceFrmDB.RemoveAt(index);

            }
            
            StringBuilder SelectedVExtrasdetailsfromDB = new StringBuilder();

            for (int i = 0; i < ListofVExtrasFrmDBAfterAdding.Count; i++)
            {
                for (int j = 0; j < ListofVExtraUnitPriceFrmDB.Count;)
                {
                    for (int k = 0; k < ListofVExtraQtyFrmDB.Count;)
                    {
                        for (int l = 0; l< ListofVExtraTotalPriceFrmDB.Count;)
                        {
                            SelectedVExtrasdetailsfromDB.Append(ListofVExtrasFrmDBAfterAdding[i]);
                            SelectedVExtrasdetailsfromDB.Append("£" + ListofVExtraUnitPriceFrmDB[i]);
                            if (ListofVExtrasFrmDBAfterAdding[i]=="Childgates")
                            {
                                SelectedVExtrasdetailsfromDB.Append("Free");
                            }
                            else
                            {
                                SelectedVExtrasdetailsfromDB.Append("x" + ListofVExtraQtyFrmDB[i]);
                            }
                            SelectedVExtrasdetailsfromDB.Append("£" + ListofVExtraTotalPriceFrmDB[i]);
                            break;
                        }
                        break;
                    }
                    break;
                }
            }

            SelectedVExtrasdetailsfromDB = SelectedVExtrasdetailsfromDB.Replace(" ", string.Empty);
            SelectedVExtrasdetailsfromDB = SelectedVExtrasdetailsfromDB.Replace("£0.00", "Free");
            //SelectedVExtrasdetailsfromDB = SelectedVExtrasdetailsfromDB.Replace("Z-BedFreex0Free",string.Empty);
            string strSelectedVExtrasdetailsfromDB = SelectedVExtrasdetailsfromDB.ToString();
            //if(strSelectedVExtrasdetailsfromDB.Contains("Childgates")
            //{
            //    strSelectedVExtrasdetailsfromDB = strSelectedVExtrasdetailsfromDB.Replace()
            //}

            string SelectedVExtrasfromPage = uIItemTable.InnerText;
            SelectedVExtrasfromPage = SelectedVExtrasfromPage.Replace("\r\n", string.Empty);
            SelectedVExtrasfromPage = SelectedVExtrasfromPage.Replace(" ", string.Empty);
            SelectedVExtrasfromPage = SelectedVExtrasfromPage.Trim();

            try
            {
                StringAssert.Contains(strSelectedVExtrasdetailsfromDB, SelectedVExtrasfromPage); 
                WriteLogs("PASS : Villa Extras Details and Prices are Matched with DB.");
            }
            catch (AssertFailedException ex)
            {
                takeImage("verifyselectedVExtrasSavedOnHSPage");
                //WriteLogs("FAIL : Villa Extras Details and Prices are Not Matched with DB.");
                //WriteLogs("-----------------" + ex.Message.ToString());
            }
            


            // Verify that the 'InnerText' property of table equals '
            //Starter Pack £35.00 x4 £140.00 
            //
            //Cots Free x1 Free 
            //
            //High Chair Free x2 Free 
            //
            //Childgates Free Free Free 
            //
            //   '
            //Assert.AreEqual(this.verifyselectedVExtrasSavedOnHSPage_MethodExpectedValues.UIItemTableInnerText, uIItemTable.InnerText);
        }
        
        #region Properties
        public virtual verifyselectedVExtrasSavedOnHSPage_MethodExpectedValues verifyselectedVExtrasSavedOnHSPage_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyselectedVExtrasSavedOnHSPage_MethodExpectedValues == null))
                {
                    this.mverifyselectedVExtrasSavedOnHSPage_MethodExpectedValues = new verifyselectedVExtrasSavedOnHSPage_MethodExpectedValues();
                }
                return this.mverifyselectedVExtrasSavedOnHSPage_MethodExpectedValues;
            }
        }
        
        public UIYourHolidaySummaryWiWindow UIYourHolidaySummaryWiWindow
        {
            get
            {
                if ((this.mUIYourHolidaySummaryWiWindow == null))
                {
                    this.mUIYourHolidaySummaryWiWindow = new UIYourHolidaySummaryWiWindow();
                }
                return this.mUIYourHolidaySummaryWiWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyselectedVExtrasSavedOnHSPage_MethodExpectedValues mverifyselectedVExtrasSavedOnHSPage_MethodExpectedValues;
        
        private UIYourHolidaySummaryWiWindow mUIYourHolidaySummaryWiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyselectedVExtrasSavedOnHSPage_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyselectedVExtrasSavedOnHSPage_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of table equals '
        ///Starter Pack £35.00 x4 £140.00 
        ///
        ///Cots Free x1 Free 
        ///
        ///High Chair Free x2 Free 
        ///
        ///Childgates Free Free Free 
        ///
        ///   '
        /// </summary>
        public string UIItemTableInnerText = "\r\nStarter Pack £35.00 x4 £140.00 \r\n\r\nCots Free x1 Free \r\n\r\nHigh Chair Free x2 Fre" +
            "e \r\n\r\nChildgates Free Free Free \r\n\r\n   ";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryWiWindow : BrowserWindow
    {
        
        public UIYourHolidaySummaryWiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYourHolidaySummaryDocument UIYourHolidaySummaryDocument
        {
            get
            {
                if ((this.mUIYourHolidaySummaryDocument == null))
                {
                    this.mUIYourHolidaySummaryDocument = new UIYourHolidaySummaryDocument(this);
                }
                return this.mUIYourHolidaySummaryDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourHolidaySummaryDocument mUIYourHolidaySummaryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryDocument : HtmlDocument
    {
        
        public UIYourHolidaySummaryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIVillaExtrasRowPane UIVillaExtrasRowPane
        {
            get
            {
                if ((this.mUIVillaExtrasRowPane == null))
                {
                    this.mUIVillaExtrasRowPane = new UIVillaExtrasRowPane(this);
                }
                return this.mUIVillaExtrasRowPane;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaExtrasRowPane mUIVillaExtrasRowPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaExtrasRowPane : HtmlDiv
    {
        
        public UIVillaExtrasRowPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "villaExtrasRow";
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Starter Pack ", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "contentText aRow";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"contentText aRow\" id=\"villaExtrasRow\" style=\"visibility: visible;\"";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public HtmlTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new HtmlTable(this);
                    #region Search Criteria
                    this.mUIItemTable.SearchProperties[HtmlTable.PropertyNames.Id] = null;
                    this.mUIItemTable.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mUIItemTable.FilterProperties.Add(new PropertyExpression(HtmlTable.PropertyNames.InnerText, "Starter Pack", PropertyExpressionOperator.Contains));
                    this.mUIItemTable.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\"";
                    this.mUIItemTable.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUIItemTable;
            }
        }
        #endregion
        
        #region Fields
        private HtmlTable mUIItemTable;
        #endregion
    }
}
