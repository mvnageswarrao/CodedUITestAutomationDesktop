// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.BookingPages.verifyFlightInfoPopupOpened_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyFlightInfoPopupOpened_Map:logWriter
    {
        
        /// <summary>
        /// verifyFlightInfoPopupOpened_Method - Use 'verifyFlightInfoPopupOpened_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyFlightInfoPopupOpened_Method()
        {
            #region Variable Declarations
            HtmlCell uIYourFlightInformatioCell = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIYourFlightInformatioFrame.UIYourFlightInformatioDocument.UIAspnetFormCustom.UIItemTable.UIYourFlightInformatioCell;
            #endregion

            try
            {
                // Verify that the 'InnerText' property of 'Your Flight Information' cell equals 'Your Flight Information'
                Assert.AreEqual(this.verifyFlightInfoPopupOpened_MethodExpectedValues.UIYourFlightInformatioCellInnerText, uIYourFlightInformatioCell.InnerText);
                WriteLogs("PASS : \"Flight Info\" Popup is Opened Successfully.");
            }
            catch (AssertFailedException ex)
            {
                takeImage("verifyFlightInfoPopupOpened");
                WriteLogs("FAIL : Could not Open \"Flight Info\" Popup.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
            
        }
        
        #region Properties
        public virtual verifyFlightInfoPopupOpened_MethodExpectedValues verifyFlightInfoPopupOpened_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyFlightInfoPopupOpened_MethodExpectedValues == null))
                {
                    this.mverifyFlightInfoPopupOpened_MethodExpectedValues = new verifyFlightInfoPopupOpened_MethodExpectedValues();
                }
                return this.mverifyFlightInfoPopupOpened_MethodExpectedValues;
            }
        }
        
        public UIYourHolidaySummaryWiWindow UIYourHolidaySummaryWiWindow
        {
            get
            {
                if ((this.mUIYourHolidaySummaryWiWindow == null))
                {
                    this.mUIYourHolidaySummaryWiWindow = new UIYourHolidaySummaryWiWindow();
                }
                return this.mUIYourHolidaySummaryWiWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyFlightInfoPopupOpened_MethodExpectedValues mverifyFlightInfoPopupOpened_MethodExpectedValues;
        
        private UIYourHolidaySummaryWiWindow mUIYourHolidaySummaryWiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyFlightInfoPopupOpened_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyFlightInfoPopupOpened_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Your Flight Information' cell equals 'Your Flight Information'
        /// </summary>
        public string UIYourFlightInformatioCellInnerText = "Your Flight Information";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryWiWindow : BrowserWindow
    {
        
        public UIYourHolidaySummaryWiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYourHolidaySummaryDocument UIYourHolidaySummaryDocument
        {
            get
            {
                if ((this.mUIYourHolidaySummaryDocument == null))
                {
                    this.mUIYourHolidaySummaryDocument = new UIYourHolidaySummaryDocument(this);
                }
                return this.mUIYourHolidaySummaryDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourHolidaySummaryDocument mUIYourHolidaySummaryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryDocument : HtmlDocument
    {
        
        public UIYourHolidaySummaryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIYourFlightInformatioFrame UIYourFlightInformatioFrame
        {
            get
            {
                if ((this.mUIYourFlightInformatioFrame == null))
                {
                    this.mUIYourFlightInformatioFrame = new UIYourFlightInformatioFrame(this);
                }
                return this.mUIYourFlightInformatioFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIYourFlightInformatioFrame mUIYourFlightInformatioFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourFlightInformatioFrame : HtmlIFrame
    {
        
        public UIYourFlightInformatioFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "iFrmCustFlightInfo";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "iFrmCustFlightInfo";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.AbsolutePath, "/code_net/booking/CustomerBookedFlightInfo.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "/code_net/booking/CustomerBookedFlightInfo.aspx?bookingRefNumber=", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.Title, "Your Flight Information", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "name=\"iFrmCustFlightInfo\" width=\"610\" he";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIYourFlightInformatioDocument UIYourFlightInformatioDocument
        {
            get
            {
                if ((this.mUIYourFlightInformatioDocument == null))
                {
                    this.mUIYourFlightInformatioDocument = new UIYourFlightInformatioDocument(this);
                }
                return this.mUIYourFlightInformatioDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourFlightInformatioDocument mUIYourFlightInformatioDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourFlightInformatioDocument : HtmlDocument
    {
        
        public UIYourFlightInformatioDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your Flight Information", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/CustomerBookedFlightInfo.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/CustomerBookedFlightInfo.aspx?bookingRefNumber=", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIAspnetFormCustom UIAspnetFormCustom
        {
            get
            {
                if ((this.mUIAspnetFormCustom == null))
                {
                    this.mUIAspnetFormCustom = new UIAspnetFormCustom(this);
                }
                return this.mUIAspnetFormCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIAspnetFormCustom mUIAspnetFormCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAspnetFormCustom : HtmlCustom
    {
        
        public UIAspnetFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "aspnetForm";
            this.FilterProperties["ControlDefinition"] = "id=\"aspnetForm\" onsubmit=\"javascript:ret";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable mUIItemTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemTable : HtmlTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.FilterProperties.Add(new PropertyExpression(HtmlTable.PropertyNames.InnerText, "Your Flight Information", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "1";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "3";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIYourFlightInformatioCell
        {
            get
            {
                if ((this.mUIYourFlightInformatioCell == null))
                {
                    this.mUIYourFlightInformatioCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIYourFlightInformatioCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIYourFlightInformatioCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Your Flight Information";
                    this.mUIYourFlightInformatioCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "width=\"100%\" class=\"frameBg\"";
                    this.mUIYourFlightInformatioCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "0";
                    this.mUIYourFlightInformatioCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "1";
                    this.mUIYourFlightInformatioCell.FilterProperties[HtmlCell.PropertyNames.Class] = "frameBg";
                    this.mUIYourFlightInformatioCell.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUIYourFlightInformatioCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIYourFlightInformatioCell;
        #endregion
    }
}
