// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.BookingPages.verifyTransferDfltTxt_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyTransferDfltTxt_Map:logWriter
    {
        
        /// <summary>
        /// verifyTransferDfltTxt_Method - Use 'verifyTransferDfltTxt_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyTransferDfltTxt_Method()
        {
            #region Variable Declarations
            HtmlCell uIAlthoughhiringacarisCell = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UITransfersCellCell.UIItemTable.UIAlthoughhiringacarisCell;
            #endregion

            // Verify that the 'InnerText' property of 'Although hiring a car is often the best' cell contains 'Although hiring a car is often the best way to make the most out of your stay, you can also add a private transfer to and from your villa.'
            //StringAssert.Contains(uIAlthoughhiringacarisCell.InnerText, this.verifyTransferDfltTxt_MethodExpectedValues.UIAlthoughhiringacarisCellInnerText);
            Playback.PlaybackSettings.ContinueOnError = true;
            HtmlCell uIOurprivatetransferswCell = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UITransfersCellCell.UIItemTable.UIOurprivatetransferswCell;

            string StringFrmPage = uIOurprivatetransferswCell.InnerText;
            string ExpectedTransferstringtoMatch = "Our private transfers will pick you up from the airport and drop you off directly at the villa. There are no drop-offs on the way and no haggling with the price. We provide a door to door service, so you can relax knowing that everything is taken care of.";
            
            try
            {
                StringAssert.Contains(StringFrmPage, ExpectedTransferstringtoMatch);
                WriteLogs("PASS : Transfers Default Text is Matched.");
            }
            catch (AssertFailedException ex)
            {
                takeImage("verifyTransferDfltTxt");
                WriteLogs("FAIL : Transfers Default Text is Not Matched.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }

        }
        
        #region Properties
        public virtual verifyTransferDfltTxt_MethodExpectedValues verifyTransferDfltTxt_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyTransferDfltTxt_MethodExpectedValues == null))
                {
                    this.mverifyTransferDfltTxt_MethodExpectedValues = new verifyTransferDfltTxt_MethodExpectedValues();
                }
                return this.mverifyTransferDfltTxt_MethodExpectedValues;
            }
        }
        
        public UIYourHolidaySummaryWiWindow UIYourHolidaySummaryWiWindow
        {
            get
            {
                if ((this.mUIYourHolidaySummaryWiWindow == null))
                {
                    this.mUIYourHolidaySummaryWiWindow = new UIYourHolidaySummaryWiWindow();
                }
                return this.mUIYourHolidaySummaryWiWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyTransferDfltTxt_MethodExpectedValues mverifyTransferDfltTxt_MethodExpectedValues;
        
        private UIYourHolidaySummaryWiWindow mUIYourHolidaySummaryWiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyTransferDfltTxt_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyTransferDfltTxt_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Although hiring a car is often the best' cell contains 'Although hiring a car is often the best way to make the most out of your stay, you can also add a private transfer to and from your villa.'
        /// </summary>
        public string UIAlthoughhiringacarisCellInnerText = "Although hiring a car is often the best way to make the most out of your stay, yo" +
            "u can also add a private transfer to and from your villa.";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryWiWindow : BrowserWindow
    {
        
        public UIYourHolidaySummaryWiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYourHolidaySummaryDocument UIYourHolidaySummaryDocument
        {
            get
            {
                if ((this.mUIYourHolidaySummaryDocument == null))
                {
                    this.mUIYourHolidaySummaryDocument = new UIYourHolidaySummaryDocument(this);
                }
                return this.mUIYourHolidaySummaryDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourHolidaySummaryDocument mUIYourHolidaySummaryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryDocument : HtmlDocument
    {
        
        public UIYourHolidaySummaryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UITransfersCellCell UITransfersCellCell
        {
            get
            {
                if ((this.mUITransfersCellCell == null))
                {
                    this.mUITransfersCellCell = new UITransfersCellCell(this);
                }
                return this.mUITransfersCellCell;
            }
        }
        #endregion
        
        #region Fields
        private UITransfersCellCell mUITransfersCellCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UITransfersCellCell : HtmlCell
    {
        
        public UITransfersCellCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "transfersCell";
            this.SearchProperties.Add(new PropertyExpression(HtmlCell.PropertyNames.InnerText, "Private Transfers", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=\"transfersCell\" colspan=\"9\"";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "17";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable mUIItemTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemTable : HtmlTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.FilterProperties.Add(new PropertyExpression(HtmlTable.PropertyNames.InnerText, "Although hiring a car is often the best ", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "width=\"100%\" border=\"0\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "1";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "2";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIAlthoughhiringacarisCell
        {
            get
            {
                if ((this.mUIAlthoughhiringacarisCell == null))
                {
                    this.mUIAlthoughhiringacarisCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIAlthoughhiringacarisCell.SearchProperties.Add(new PropertyExpression(HtmlCell.PropertyNames.InnerText, "Although hiring a car is often the best ", PropertyExpressionOperator.Contains));
                    this.mUIAlthoughhiringacarisCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "width=\"650\" class=\"contentText hsContentIndent\" style=\"color: rgb(51, 51, 51);\"";
                    this.mUIAlthoughhiringacarisCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "0";
                    this.mUIAlthoughhiringacarisCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIAlthoughhiringacarisCell.FilterProperties[HtmlCell.PropertyNames.Class] = "contentText hsContentIndent";
                    this.mUIAlthoughhiringacarisCell.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUIAlthoughhiringacarisCell;
            }
        }
        #endregion

        #region Properties
        public HtmlCell UIOurprivatetransferswCell
        {
            get
            {
                if ((this.mUIOurprivatetransferswCell == null))
                {
                    this.mUIOurprivatetransferswCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIOurprivatetransferswCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIOurprivatetransferswCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIOurprivatetransferswCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIOurprivatetransferswCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Our private transfers will pick you up f";
                    this.mUIOurprivatetransferswCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "width=\"650\" class=\"contentText hsContentIndent\" style=\"color: rgb(51, 51, 51);\"";
                    this.mUIOurprivatetransferswCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "0";
                    this.mUIOurprivatetransferswCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIOurprivatetransferswCell.FilterProperties[HtmlCell.PropertyNames.Class] = "contentText hsContentIndent";
                    this.mUIOurprivatetransferswCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "171";
                    this.mUIOurprivatetransferswCell.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUIOurprivatetransferswCell;
            }
        }
        #endregion

        #region Fields
        private HtmlCell mUIOurprivatetransferswCell;
        #endregion
        
        #region Fields
        private HtmlCell mUIAlthoughhiringacarisCell;
        #endregion
    }
}
