// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.BookingPages.AddAmendInsurance.selectPolicyType_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class selectPolicyType_Map:logWriter
    {
        
        /// <summary>
        /// selectPolicyType_Method - Use 'selectPolicyType_MethodParams' to pass parameters into this method.
        /// </summary>
        public void selectPolicyType_Method(int NumofADULTS, int NumofCHILD, int NumofINFANTS)
        {
            #region Variable Declarations
            HtmlComboBox uIPolicy1ComboBox = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIAmendInsuranceSelectFrame.UIVillaPlusPackageHoliDocument.UIPolicy1ComboBox;
            #endregion

            int NumofPAX = NumofADULTS + NumofCHILD + NumofINFANTS;
            int Lastitem = uIPolicy1ComboBox.ItemCount;
            UITestControlCollection Allpax = uIPolicy1ComboBox.FindMatchingControls();
            NumofPAX = Allpax.Count;

            int selectableindex = 0;
            try
            {
                if ((NumofADULTS == 2 || NumofADULTS == 4) && (((NumofCHILD == 4) || (NumofINFANTS == 4) || (NumofCHILD + NumofINFANTS) == 4) || ((NumofCHILD == 8) || (NumofINFANTS == 8) || (NumofCHILD + NumofINFANTS) == 8)))
                {
                    selectableindex = 1;
                    foreach (HtmlComboBox eachpax in Allpax)
                    {
                        eachpax.SelectedIndex = selectableindex;
                    }
                    WriteLogs("PASS : Selected \"Family\" Policy for All pax.");
                }
                else
                {
                    selectableindex = 0;
                    foreach (HtmlComboBox eachpax in Allpax)
                    {
                        eachpax.SelectedIndex = selectableindex;
                    }
                    WriteLogs("PASS : Selected \"Individual Insurance\" Policy for All pax.");

                }
            }
            catch (AssertFailedException ex)
            {
                takeImage("selectPolicyType");
                WriteLogs("FAIL : Could Not Select \"Insurance Policy\" for any Passenger.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }

            //if (NumofCHILD == 0 && NumofINFANTS == 0)
            //{
            //    selectableindex = 0;
            //    foreach (HtmlComboBox eachpax in Allpax)
            //    {
            //        // Select 'Individual Insurance' in 'Policy1' combo box
            //        eachpax.SelectedIndex = selectableindex;
            //    }
            //    WriteLogs("PASS : Selected \"Individual Insurance\" Policy for All pax.");
            //}
            //else if ((NumofADULTS == 2 && NumofADULTS % 2 == 0) && (NumofCHILD == 4 && NumofCHILD % 2 == 0) || (NumofINFANTS == 4 && NumofINFANTS % 2 == 0) || ((NumofCHILD + NumofINFANTS) == 4 && (NumofCHILD + NumofINFANTS) % 2 == 0))
            //{
            //    selectableindex = 1;
            //    foreach (HtmlComboBox eachpax in Allpax)
            //    {
            //        // Select 'Individual Insurance' in 'Policy1' combo box
            //        eachpax.SelectedIndex = selectableindex;
            //    }
            //    WriteLogs("PASS : Selected \"Family\" Policy for All pax.");
            //}
            //else if ((NumofADULTS > 2 && NumofADULTS % 2 != 0) && (NumofCHILD < 4 && NumofCHILD % 2 != 0) || (NumofINFANTS < 4 && NumofINFANTS % 2 != 0) || ((NumofCHILD + NumofINFANTS) != 4 && (NumofCHILD + NumofINFANTS) % 2 != 0))
            //{
            //    selectableindex = 0;
            //    foreach (HtmlComboBox eachpax in Allpax)
            //    {
            //        // Select 'Individual Insurance' in 'Policy1' combo box
            //        eachpax.SelectedIndex = selectableindex;
            //    }
            //    WriteLogs("PASS : Selected \"Individual Insurance\" Policy for All pax.");
            //}
            //else
            //{
            //    selectableindex = Lastitem;
            //    foreach (HtmlComboBox eachpax in Allpax)
            //    {
            //        // Select 'Individual Insurance' in 'Policy1' combo box
            //        eachpax.SelectedIndex = selectableindex;
            //    }
            //    WriteLogs("PASS : Selected \"Own Insurance\" Policy for All pax.");
            //}
        }   
        
        #region Properties
        public virtual selectPolicyType_MethodParams selectPolicyType_MethodParams
        {
            get
            {
                if ((this.mselectPolicyType_MethodParams == null))
                {
                    this.mselectPolicyType_MethodParams = new selectPolicyType_MethodParams();
                }
                return this.mselectPolicyType_MethodParams;
            }
        }
        
        public UIYourHolidaySummaryWiWindow UIYourHolidaySummaryWiWindow
        {
            get
            {
                if ((this.mUIYourHolidaySummaryWiWindow == null))
                {
                    this.mUIYourHolidaySummaryWiWindow = new UIYourHolidaySummaryWiWindow();
                }
                return this.mUIYourHolidaySummaryWiWindow;
            }
        }
        #endregion
        
        #region Fields
        private selectPolicyType_MethodParams mselectPolicyType_MethodParams;
        
        private UIYourHolidaySummaryWiWindow mUIYourHolidaySummaryWiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'selectPolicyType_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class selectPolicyType_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Individual Insurance' in 'Policy1' combo box
        /// </summary>
        public string UIPolicy1ComboBoxSelectedItem = "Individual Insurance";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryWiWindow : BrowserWindow
    {
        
        public UIYourHolidaySummaryWiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYourHolidaySummaryDocument UIYourHolidaySummaryDocument
        {
            get
            {
                if ((this.mUIYourHolidaySummaryDocument == null))
                {
                    this.mUIYourHolidaySummaryDocument = new UIYourHolidaySummaryDocument(this);
                }
                return this.mUIYourHolidaySummaryDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourHolidaySummaryDocument mUIYourHolidaySummaryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryDocument : HtmlDocument
    {
        
        public UIYourHolidaySummaryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIAmendInsuranceSelectFrame UIAmendInsuranceSelectFrame
        {
            get
            {
                if ((this.mUIAmendInsuranceSelectFrame == null))
                {
                    this.mUIAmendInsuranceSelectFrame = new UIAmendInsuranceSelectFrame(this);
                }
                return this.mUIAmendInsuranceSelectFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIAmendInsuranceSelectFrame mUIAmendInsuranceSelectFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAmendInsuranceSelectFrame : HtmlIFrame
    {
        
        public UIAmendInsuranceSelectFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "amendInsuranceSelection";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "amendInsuranceSelection";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.AbsolutePath, "amendInsurance.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "amendInsurance.aspx?", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "name=\"amendInsuranceSelection\" id=\"amend";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIVillaPlusPackageHoliDocument UIVillaPlusPackageHoliDocument
        {
            get
            {
                if ((this.mUIVillaPlusPackageHoliDocument == null))
                {
                    this.mUIVillaPlusPackageHoliDocument = new UIVillaPlusPackageHoliDocument(this);
                }
                return this.mUIVillaPlusPackageHoliDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusPackageHoliDocument mUIVillaPlusPackageHoliDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaPlusPackageHoliDocument : HtmlDocument
    {
        
        public UIVillaPlusPackageHoliDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Villa Plus Package Holiday Summary Amendment";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/amendInsurance.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/amendInsurance.aspx?", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIPolicy1ComboBox
        {
            get
            {
                if ((this.mUIPolicy1ComboBox == null))
                {
                    this.mUIPolicy1ComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIPolicy1ComboBox.SearchProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.Id, "PolicyType", PropertyExpressionOperator.Contains));
                    this.mUIPolicy1ComboBox.SearchProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.Name, "Policy", PropertyExpressionOperator.Contains));
                    this.mUIPolicy1ComboBox.FilterProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.ControlDefinition, "name=\"Policy ", PropertyExpressionOperator.Contains));
                    this.mUIPolicy1ComboBox.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUIPolicy1ComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIPolicy1ComboBox;
        #endregion
    }
}
