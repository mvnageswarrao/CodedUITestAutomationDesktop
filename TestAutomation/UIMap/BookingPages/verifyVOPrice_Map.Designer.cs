// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.BookingPages.verifyVOPrice_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyVOPrice_Map:logWriter
    {
        
        /// <summary>
        /// verifyVOPrice_Method - Use 'verifyVOPrice_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyVOPrice_Method(decimal LinePRICEFRMDB)
        {
            #region Variable Declarations
            HtmlCell uIItem72252Cell = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIItem72252Cell;
            #endregion

            string VOPriceFrmPage = uIItem72252Cell.InnerText;
            string ExpectedVOPrice = "£" + LinePRICEFRMDB;

            try
            {
                // Verify that the 'InnerText' property of '£722.52' cell equals '£722.52'
                Assert.AreEqual(ExpectedVOPrice, VOPriceFrmPage);
                WriteLogs("PASS : Villa Price Details Are Matched.");
            }
            catch (AssertFailedException ex)
            {
                //takeImage("verifyVOPrice");
                //WriteLogs("FAIL : Villa Price Details Are Not Matched.");
                //WriteLogs("-----------------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual verifyVOPrice_MethodExpectedValues verifyVOPrice_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyVOPrice_MethodExpectedValues == null))
                {
                    this.mverifyVOPrice_MethodExpectedValues = new verifyVOPrice_MethodExpectedValues();
                }
                return this.mverifyVOPrice_MethodExpectedValues;
            }
        }
        
        public UIYourHolidaySummaryWiWindow UIYourHolidaySummaryWiWindow
        {
            get
            {
                if ((this.mUIYourHolidaySummaryWiWindow == null))
                {
                    this.mUIYourHolidaySummaryWiWindow = new UIYourHolidaySummaryWiWindow();
                }
                return this.mUIYourHolidaySummaryWiWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyVOPrice_MethodExpectedValues mverifyVOPrice_MethodExpectedValues;
        
        private UIYourHolidaySummaryWiWindow mUIYourHolidaySummaryWiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyVOPrice_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyVOPrice_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '£722.52' cell equals '£722.52'
        /// </summary>
        public string UIItem72252CellInnerText = "£722.52";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryWiWindow : BrowserWindow
    {
        
        public UIYourHolidaySummaryWiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYourHolidaySummaryDocument UIYourHolidaySummaryDocument
        {
            get
            {
                if ((this.mUIYourHolidaySummaryDocument == null))
                {
                    this.mUIYourHolidaySummaryDocument = new UIYourHolidaySummaryDocument(this);
                }
                return this.mUIYourHolidaySummaryDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourHolidaySummaryDocument mUIYourHolidaySummaryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryDocument : HtmlDocument
    {
        
        public UIYourHolidaySummaryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIItem72252Cell
        {
            get
            {
                if ((this.mUIItem72252Cell == null))
                {
                    this.mUIItem72252Cell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIItem72252Cell.SearchProperties[HtmlCell.PropertyNames.Id] = "villaAdultTotal";
                    this.mUIItem72252Cell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "align=\"right\" class=\"contentText\" id=\"villaAdultTotal\" style=\"padding-right: 10px" +
                        ";\" colspan=\"2\"";
                    this.mUIItem72252Cell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIItem72252Cell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "7";
                    this.mUIItem72252Cell.FilterProperties[HtmlCell.PropertyNames.Class] = "contentText";
                    this.mUIItem72252Cell.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUIItem72252Cell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIItem72252Cell;
        #endregion
    }
}
