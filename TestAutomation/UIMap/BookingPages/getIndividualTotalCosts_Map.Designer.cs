// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.BookingPages.getIndividualTotalCosts_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class getIndividualTotalCosts_Map:logWriter
    {
        
        /// <summary>
        /// getIndividualTotalCosts_Method - Use 'getIndividualTotalCosts_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void getIndividualTotalCosts_Method()
        {
            #region Variable Declarations
            HtmlCell uIFreeCell = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIFlightExtrasCellCell.UIItemTable.UIFreeCell;
            #endregion

            // Verify that the 'Class' property of 'Free' cell equals 'contentText'
            Assert.AreEqual(this.getIndividualTotalCosts_MethodExpectedValues.UIFreeCellClass, uIFreeCell.Class);
        }

        //public HtmlCell gettingIndividualTotalCosts_Method()
        //{
        //    #region Variable Declarations
        //    HtmlCell uIFreeCell = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIFlightExtrasCellCell.UIItemTable.UIFreeCell;
        //    #endregion

        //    //HtmlTable UIItemTable = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIFlightExtrasCellCell.UIItemTable;

        //    //UITestControlCollection children = UIItemTable.GetChildren();

        //    //HtmlDocument UIYourHolidaySummaryDocument = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument;
        //    //UITestControlCollection children = UIYourHolidaySummaryDocument.GetChildren();

        //    //UITestControlCollection UI = uIFreeCell.FindMatchingControls();
        //    //int Numofcells = UI.Count;
        //    List<getIndividualTotalCosts_Map> IndiTotals = new List<getIndividualTotalCosts_Map>
            
        //    return uIFreeCell;
        //}
        
        #region Properties
        public virtual getIndividualTotalCosts_MethodExpectedValues getIndividualTotalCosts_MethodExpectedValues
        {
            get
            {
                if ((this.mgetIndividualTotalCosts_MethodExpectedValues == null))
                {
                    this.mgetIndividualTotalCosts_MethodExpectedValues = new getIndividualTotalCosts_MethodExpectedValues();
                }
                return this.mgetIndividualTotalCosts_MethodExpectedValues;
            }
        }
        
        public UIYourHolidaySummaryWiWindow UIYourHolidaySummaryWiWindow
        {
            get
            {
                if ((this.mUIYourHolidaySummaryWiWindow == null))
                {
                    this.mUIYourHolidaySummaryWiWindow = new UIYourHolidaySummaryWiWindow();
                }
                return this.mUIYourHolidaySummaryWiWindow;
            }
        }
        #endregion
        
        #region Fields
        private getIndividualTotalCosts_MethodExpectedValues mgetIndividualTotalCosts_MethodExpectedValues;
        
        private UIYourHolidaySummaryWiWindow mUIYourHolidaySummaryWiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'getIndividualTotalCosts_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class getIndividualTotalCosts_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Class' property of 'Free' cell equals 'contentText'
        /// </summary>
        public string UIFreeCellClass = "contentText";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryWiWindow : BrowserWindow
    {
        
        public UIYourHolidaySummaryWiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYourHolidaySummaryDocument UIYourHolidaySummaryDocument
        {
            get
            {
                if ((this.mUIYourHolidaySummaryDocument == null))
                {
                    this.mUIYourHolidaySummaryDocument = new UIYourHolidaySummaryDocument(this);
                }
                return this.mUIYourHolidaySummaryDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourHolidaySummaryDocument mUIYourHolidaySummaryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryDocument : HtmlDocument
    {
        
        public UIYourHolidaySummaryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIFlightExtrasCellCell UIFlightExtrasCellCell
        {
            get
            {
                if ((this.mUIFlightExtrasCellCell == null))
                {
                    this.mUIFlightExtrasCellCell = new UIFlightExtrasCellCell(this);
                }
                return this.mUIFlightExtrasCellCell;
            }
        }
        #endregion
        
        #region Fields
        private UIFlightExtrasCellCell mUIFlightExtrasCellCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIFlightExtrasCellCell : HtmlCell
    {
        
        public UIFlightExtrasCellCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=\"flightExtrasCell\" colspan=\"9\"";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable mUIItemTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemTable : HtmlTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\"";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIFreeCell
        {
            get
            {
                if ((this.mUIFreeCell == null))
                {
                    this.mUIFreeCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIFreeCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "width=\"80\" align=\"right\" class=\"contentText\" valign=\"top\"";
                    this.mUIFreeCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "7";
                    this.mUIFreeCell.FilterProperties[HtmlCell.PropertyNames.Class] = "contentText";
                    this.mUIFreeCell.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUIFreeCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIFreeCell;
        #endregion
    }
}
