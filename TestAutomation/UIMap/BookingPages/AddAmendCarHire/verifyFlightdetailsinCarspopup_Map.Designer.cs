// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.BookingPages.AddAmendCarHire.verifyFlightdetailsinCarspopup_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyFlightdetailsinCarspopup_Map:logWriter
    {
        
        /// <summary>
        /// verifyFlightdetailsinCarspopup_Method - Use 'verifyFlightdetailsinCarspopup_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public string verifyFlightdetailsinCarspopup_Method(string fl_depDATE, string DepTIME_OB, string Deport_OB_NAME, string ArrTIME_IB, string ArrPort_OB_NAME, string fl_retDATE, string DepTIME_IB, string ArrTIME_OB)
        {
            #region Variable Declarations
            HtmlDiv uIFlightContainerPane = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIAmendCarHireFrame.UIAmendCarHireDocument.UIFlightContainerPane;
            #endregion

            string FlightdetailsfrmCarsSection = uIFlightContainerPane.InnerText;
            FlightdetailsfrmCarsSection = FlightdetailsfrmCarsSection.Replace("\r\n", string.Empty);
            FlightdetailsfrmCarsSection = FlightdetailsfrmCarsSection.Replace(" ", string.Empty);
            FlightdetailsfrmCarsSection = FlightdetailsfrmCarsSection.Trim();

            int datemodifiedfl = Convert.ToDateTime(fl_depDATE).Day;
            int datemodifiedret = Convert.ToDateTime(fl_retDATE).Day;

            string fldepDATE = string.Empty;
            string flretDATE = string.Empty;
            fldepDATE = fl_depDATE.Replace(" 20", "'");
            fldepDATE = fldepDATE.Insert(3, ",");

            if (datemodifiedfl<=9 && fldepDATE.Contains("0"))
            {
                fldepDATE=fldepDATE.Replace("0","");
            }

            flretDATE = fl_retDATE.Replace(" 20", "'");
            flretDATE = flretDATE.Insert(3, ",");
            if (datemodifiedret<=9 && flretDATE.Contains("0"))
            {
                flretDATE = flretDATE.Replace("0", "");
            }



            //if (datemodifiedfl <= 9)
            //{
            //    //fldepDATE = fl_depDATE.Remove(4);
            //    fldepDATE = fldepDATE.Insert(3, ",");
            //}
            //else
            //{
            //    fldepDATE = fl_depDATE.Insert(3, ",");
            //    fldepDATE = fldepDATE.Replace(" 20", "'");
            //}

            //if (datemodifiedret <= 9)
            //{
            //    flretDATE = fl_retDATE.Remove(4, 1);
            //    flretDATE = flretDATE.Insert(3, ",");
            //    flretDATE = flretDATE.Replace(" 20", "'");
            //}
            //else
            //{
            //    flretDATE = fl_retDATE.Insert(3, ",");
            //    flretDATE = flretDATE.Replace(" 20", "'");
            //}
  
            string ExpectedFlightDetailsFrmCars = "Flightdetails:Departing:" + fldepDATE + "," + DepTIME_OB + "hrs," + Deport_OB_NAME + "Arriving:" + fldepDATE + "," + ArrTIME_OB + "hrs," + ArrPort_OB_NAME + "Departing:" + flretDATE + "," + DepTIME_IB + "hrs," + ArrPort_OB_NAME + "Arriving:" + flretDATE + "," + ArrTIME_IB + "hrs," + Deport_OB_NAME + "";
            ExpectedFlightDetailsFrmCars = ExpectedFlightDetailsFrmCars.Replace(" ", string.Empty).Trim();

            // Verify that the 'InnerText' property of 'flightContainer' pane equals '
            //Flight details:
            //
            // 
            //
            //
            //Departing: Thu, 6 Feb '14, 14:05 hrs, London Gatwick
            //
            //Arriving: Thu, 6 Feb '14, 18:20 hrs, Arrecife
            //
            // 
            //
            //
            //Departing: Thu, 13 Feb '14, 12:35 hrs, Arrecife
            //
            //Arriving: Thu, 13 Feb '14, 16:45 hrs, London Gatwick'
            //Assert.AreEqual(this.verifyFlightdetailsinCarspopup_MethodExpectedValues.UIFlightContainerPaneInnerText, uIFlightContainerPane.InnerText);

            try
            {
                Assert.AreEqual(ExpectedFlightDetailsFrmCars, FlightdetailsfrmCarsSection);
                WriteLogs("PASS : Flight Details in Cars popup are matched with the Flights Section.");
            }
            catch (AssertFailedException ex)
            {
                takeImage("verifyFlightdetailsinCarspopup");
                WriteLogs("FAIL : Flight Details in Cars popup are NOT matched with the Flights Section.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }

            return ExpectedFlightDetailsFrmCars;
        }
        
        #region Properties
        public virtual verifyFlightdetailsinCarspopup_MethodExpectedValues verifyFlightdetailsinCarspopup_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyFlightdetailsinCarspopup_MethodExpectedValues == null))
                {
                    this.mverifyFlightdetailsinCarspopup_MethodExpectedValues = new verifyFlightdetailsinCarspopup_MethodExpectedValues();
                }
                return this.mverifyFlightdetailsinCarspopup_MethodExpectedValues;
            }
        }
        
        public UIYourHolidaySummaryWiWindow UIYourHolidaySummaryWiWindow
        {
            get
            {
                if ((this.mUIYourHolidaySummaryWiWindow == null))
                {
                    this.mUIYourHolidaySummaryWiWindow = new UIYourHolidaySummaryWiWindow();
                }
                return this.mUIYourHolidaySummaryWiWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyFlightdetailsinCarspopup_MethodExpectedValues mverifyFlightdetailsinCarspopup_MethodExpectedValues;
        
        private UIYourHolidaySummaryWiWindow mUIYourHolidaySummaryWiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyFlightdetailsinCarspopup_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyFlightdetailsinCarspopup_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'flightContainer' pane equals '
        ///Flight details:
        ///
        /// 
        ///
        ///
        ///Departing: Thu, 6 Feb '14, 14:05 hrs, London Gatwick
        ///
        ///Arriving: Thu, 6 Feb '14, 18:20 hrs, Arrecife
        ///
        /// 
        ///
        ///
        ///Departing: Thu, 13 Feb '14, 12:35 hrs, Arrecife
        ///
        ///Arriving: Thu, 13 Feb '14, 16:45 hrs, London Gatwick'
        /// </summary>
        public string UIFlightContainerPaneInnerText = "\r\nFlight details:\r\n\r\n \r\n\r\n\r\nDeparting: Thu, 6 Feb \'14, 14:05 hrs, London Gatwick\r" +
            "\n\r\nArriving: Thu, 6 Feb \'14, 18:20 hrs, Arrecife\r\n\r\n \r\n\r\n\r\nDeparting: Thu, 13 Fe" +
            "b \'14, 12:35 hrs, Arrecife\r\n\r\nArriving: Thu, 13 Feb \'14, 16:45 hrs, London Gatwi" +
            "ck";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryWiWindow : BrowserWindow
    {
        
        public UIYourHolidaySummaryWiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYourHolidaySummaryDocument UIYourHolidaySummaryDocument
        {
            get
            {
                if ((this.mUIYourHolidaySummaryDocument == null))
                {
                    this.mUIYourHolidaySummaryDocument = new UIYourHolidaySummaryDocument(this);
                }
                return this.mUIYourHolidaySummaryDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourHolidaySummaryDocument mUIYourHolidaySummaryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryDocument : HtmlDocument
    {
        
        public UIYourHolidaySummaryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIAmendCarHireFrame UIAmendCarHireFrame
        {
            get
            {
                if ((this.mUIAmendCarHireFrame == null))
                {
                    this.mUIAmendCarHireFrame = new UIAmendCarHireFrame(this);
                }
                return this.mUIAmendCarHireFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIAmendCarHireFrame mUIAmendCarHireFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAmendCarHireFrame : HtmlIFrame
    {
        
        public UIAmendCarHireFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "amendCarHire";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "amendCarHire";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.AbsolutePath, "amendCarHire.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "amendCarHire.aspx?", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "name=\"amendCarHire\" id=\"amendCarHire\" sr";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIAmendCarHireDocument UIAmendCarHireDocument
        {
            get
            {
                if ((this.mUIAmendCarHireDocument == null))
                {
                    this.mUIAmendCarHireDocument = new UIAmendCarHireDocument(this);
                }
                return this.mUIAmendCarHireDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAmendCarHireDocument mUIAmendCarHireDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAmendCarHireDocument : HtmlDocument
    {
        
        public UIAmendCarHireDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Amend Car Hire", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/amendCarHire.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/amendCarHire.aspx?", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIFlightContainerPane
        {
            get
            {
                if ((this.mUIFlightContainerPane == null))
                {
                    this.mUIFlightContainerPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIFlightContainerPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "flightContainer";
                    this.mUIFlightContainerPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Flight details:", PropertyExpressionOperator.Contains));
                    this.mUIFlightContainerPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "frameContainerWhite";
                    this.mUIFlightContainerPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"frameContainerWhite\" id=\"flightContainer\"";
                    this.mUIFlightContainerPane.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUIFlightContainerPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIFlightContainerPane;
        #endregion
    }
}
