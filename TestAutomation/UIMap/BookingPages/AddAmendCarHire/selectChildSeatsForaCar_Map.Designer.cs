// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.BookingPages.AddAmendCarHire.selectChildSeatsForaCar_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class selectChildSeatsForaCar_Map:logWriter
    {
        
        /// <summary>
        /// selectChildSeatsForaCar_Method - Use 'selectChildSeatsForaCar_MethodParams' to pass parameters into this method.
        /// </summary>
        public void selectChildSeatsForaCar_Method()
        {
            #region Variable Declarations
            HtmlComboBox uIDdlChildSeatComboBox = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIAmendCarHireFrame.UIAmendCarHireDocument.UIDdlChildSeatComboBox;
            #endregion

            int Numofitems = uIDdlChildSeatComboBox.ItemCount;
            Random rnd = new Random();
            int tobeselected =rnd.Next(0, Numofitems);

            Boolean IsChildSeatBoxEnabled = uIDdlChildSeatComboBox.Enabled;

            if (IsChildSeatBoxEnabled == true)
            {
                try
                {
                    // Select '1 x €35.00' in 'ddlChildSeat' combo box
                    uIDdlChildSeatComboBox.SelectedIndex = tobeselected;
                    WriteLogs("PASS : Selected " + tobeselected + " \"Child Seats\" For Car.");
                }
                catch (AssertFailedException ex)
                {
                    takeImage("selectChildSeatsForaCar");
                    WriteLogs("FAIL : Could Not Select \"Child Seats\" For Car.");
                    WriteLogs("-----------------" + ex.Message.ToString());
                }
            }
            else
            {
                WriteLogs("INFO : \"Child Seats\" Box is Disabled.");
            }
          }
        
        #region Properties
        public virtual selectChildSeatsForaCar_MethodParams selectChildSeatsForaCar_MethodParams
        {
            get
            {
                if ((this.mselectChildSeatsForaCar_MethodParams == null))
                {
                    this.mselectChildSeatsForaCar_MethodParams = new selectChildSeatsForaCar_MethodParams();
                }
                return this.mselectChildSeatsForaCar_MethodParams;
            }
        }
        
        public UIYourHolidaySummaryWiWindow UIYourHolidaySummaryWiWindow
        {
            get
            {
                if ((this.mUIYourHolidaySummaryWiWindow == null))
                {
                    this.mUIYourHolidaySummaryWiWindow = new UIYourHolidaySummaryWiWindow();
                }
                return this.mUIYourHolidaySummaryWiWindow;
            }
        }
        #endregion
        
        #region Fields
        private selectChildSeatsForaCar_MethodParams mselectChildSeatsForaCar_MethodParams;
        
        private UIYourHolidaySummaryWiWindow mUIYourHolidaySummaryWiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'selectChildSeatsForaCar_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class selectChildSeatsForaCar_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select '1 x €35.00' in 'ddlChildSeat' combo box
        /// </summary>
        public string UIDdlChildSeatComboBoxSelectedItem = "1 x €35.00";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryWiWindow : BrowserWindow
    {
        
        public UIYourHolidaySummaryWiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYourHolidaySummaryDocument UIYourHolidaySummaryDocument
        {
            get
            {
                if ((this.mUIYourHolidaySummaryDocument == null))
                {
                    this.mUIYourHolidaySummaryDocument = new UIYourHolidaySummaryDocument(this);
                }
                return this.mUIYourHolidaySummaryDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourHolidaySummaryDocument mUIYourHolidaySummaryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryDocument : HtmlDocument
    {
        
        public UIYourHolidaySummaryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIAmendCarHireFrame UIAmendCarHireFrame
        {
            get
            {
                if ((this.mUIAmendCarHireFrame == null))
                {
                    this.mUIAmendCarHireFrame = new UIAmendCarHireFrame(this);
                }
                return this.mUIAmendCarHireFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIAmendCarHireFrame mUIAmendCarHireFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAmendCarHireFrame : HtmlIFrame
    {
        
        public UIAmendCarHireFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "amendCarHire";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "amendCarHire";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.AbsolutePath, "amendCarHire.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "amendCarHire.aspx?", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "name=\"amendCarHire\" id=\"amendCarHire\" sr";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIAmendCarHireDocument UIAmendCarHireDocument
        {
            get
            {
                if ((this.mUIAmendCarHireDocument == null))
                {
                    this.mUIAmendCarHireDocument = new UIAmendCarHireDocument(this);
                }
                return this.mUIAmendCarHireDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAmendCarHireDocument mUIAmendCarHireDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAmendCarHireDocument : HtmlDocument
    {
        
        public UIAmendCarHireDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Amend Car Hire";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/code_net/booking/amendCarHire.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/amendCarHire.aspx?", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIDdlChildSeatComboBox
        {
            get
            {
                if ((this.mUIDdlChildSeatComboBox == null))
                {
                    this.mUIDdlChildSeatComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDdlChildSeatComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_ContentPlaceHolder1_ddlChildSeat";
                    this.mUIDdlChildSeatComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$ddlChildSeat";
                    this.mUIDdlChildSeatComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "contentText";
                    this.mUIDdlChildSeatComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"ctl00$ContentPlaceHolder1$ddlChild";
                    this.mUIDdlChildSeatComboBox.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUIDdlChildSeatComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIDdlChildSeatComboBox;
        #endregion
    }
}
