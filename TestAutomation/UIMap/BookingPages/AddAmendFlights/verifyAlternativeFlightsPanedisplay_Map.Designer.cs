// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.BookingPages.AddAmendFlights.verifyAlternativeFlightsPanedisplay_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyAlternativeFlightsPanedisplay_Map:logWriter
    {
        
        /// <summary>
        /// verifyAlternativeFlightsPanedisplay_Method - Use 'verifyAlternativeFlightsPanedisplay_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyAlternativeFlightsPanedisplay_Method()
        {
            #region Variable Declarations
            HtmlDiv uIFlightOptionsContainPane = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIAmendFlightsSelectioFrame.UIVillaPlusQualityholiDocument.UIFlightOptionsContainPane;
            #endregion

            //Boolean IsAlternativeFlightsPaneEnabled = uIFlightOptionsContainPane.Enabled;

            string AlternativetextfromPane = uIFlightOptionsContainPane.InnerText;
            string Expectedstring = "Alternative Flights For: Flight";
            
            if (AlternativetextfromPane == Expectedstring)
            {
                try
                {
                    // Verify that the 'Exists' property of 'flightOptionsContainer' pane equals 'True'
                    //Assert.AreEqual(IsAlternativeFlightsPaneEnabled, uIFlightOptionsContainPane.Exists);
                    StringAssert.Contains(AlternativetextfromPane, Expectedstring);
                    
                    WriteLogs("PASS : \"Alternative Flights Pane\" Displayed as \"View Flight Options\" Button Clicked.");
                }
                catch (AssertFailedException ex)
                {
                    takeImage("verifyAlternativeFlightsPanedisplay");
                    WriteLogs("FAIL : \"Alternative Flights Pane\" Not Displayed though \"View Flight Options\" Button Clicked.");
                    WriteLogs("-----------------" + ex.Message.ToString());
                }

            }

            else
            {
                try
                {
                    // Verify that the 'Exists' property of 'flightOptionsContainer' pane equals 'True'
                    StringAssert.Contains(AlternativetextfromPane, Expectedstring);
                    WriteLogs("PASS : \"Alternative Flights Pane\" Hiden as \"Hide Flight Options\" Button Clicked.");
                }
                catch (AssertFailedException ex)
                {
                    takeImage("verifyAlternativeFlightsPanedisplay");
                    WriteLogs("FAIL : \"Alternative Flights Pane\" Not Hiden though \"Hide Flight Options\" Button Clicked.");
                    WriteLogs("-----------------" + ex.Message.ToString());
                }

            }
            
        }
        
        #region Properties
        public virtual verifyAlternativeFlightsPanedisplay_MethodExpectedValues verifyAlternativeFlightsPanedisplay_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyAlternativeFlightsPanedisplay_MethodExpectedValues == null))
                {
                    this.mverifyAlternativeFlightsPanedisplay_MethodExpectedValues = new verifyAlternativeFlightsPanedisplay_MethodExpectedValues();
                }
                return this.mverifyAlternativeFlightsPanedisplay_MethodExpectedValues;
            }
        }
        
        public UIYourHolidaySummaryWiWindow UIYourHolidaySummaryWiWindow
        {
            get
            {
                if ((this.mUIYourHolidaySummaryWiWindow == null))
                {
                    this.mUIYourHolidaySummaryWiWindow = new UIYourHolidaySummaryWiWindow();
                }
                return this.mUIYourHolidaySummaryWiWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyAlternativeFlightsPanedisplay_MethodExpectedValues mverifyAlternativeFlightsPanedisplay_MethodExpectedValues;
        
        private UIYourHolidaySummaryWiWindow mUIYourHolidaySummaryWiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyAlternativeFlightsPanedisplay_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyAlternativeFlightsPanedisplay_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'flightOptionsContainer' pane equals 'True'
        /// </summary>
        public bool UIFlightOptionsContainPaneExists = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryWiWindow : BrowserWindow
    {
        
        public UIYourHolidaySummaryWiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYourHolidaySummaryDocument UIYourHolidaySummaryDocument
        {
            get
            {
                if ((this.mUIYourHolidaySummaryDocument == null))
                {
                    this.mUIYourHolidaySummaryDocument = new UIYourHolidaySummaryDocument(this);
                }
                return this.mUIYourHolidaySummaryDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourHolidaySummaryDocument mUIYourHolidaySummaryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryDocument : HtmlDocument
    {
        
        public UIYourHolidaySummaryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIAmendFlightsSelectioFrame UIAmendFlightsSelectioFrame
        {
            get
            {
                if ((this.mUIAmendFlightsSelectioFrame == null))
                {
                    this.mUIAmendFlightsSelectioFrame = new UIAmendFlightsSelectioFrame(this);
                }
                return this.mUIAmendFlightsSelectioFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIAmendFlightsSelectioFrame mUIAmendFlightsSelectioFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAmendFlightsSelectioFrame : HtmlIFrame
    {
        
        public UIAmendFlightsSelectioFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "amendFlightsSelection";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "amendFlightsSelection";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.AbsolutePath, "AmendFlight.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "AmendFlight.aspx?refNo=", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "name=\"amendFlightsSelection\" id=\"amendFl";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIVillaPlusQualityholiDocument UIVillaPlusQualityholiDocument
        {
            get
            {
                if ((this.mUIVillaPlusQualityholiDocument == null))
                {
                    this.mUIVillaPlusQualityholiDocument = new UIVillaPlusQualityholiDocument(this);
                }
                return this.mUIVillaPlusQualityholiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusQualityholiDocument mUIVillaPlusQualityholiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaPlusQualityholiDocument : HtmlDocument
    {
        
        public UIVillaPlusQualityholiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/AmendFlight.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/AmendFlight.aspx?refNo=", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIFlightOptionsContainPane
        {
            get
            {
                if ((this.mUIFlightOptionsContainPane == null))
                {
                    this.mUIFlightOptionsContainPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIFlightOptionsContainPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "flightOptionsContainer";
                    this.mUIFlightOptionsContainPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Alternative Flights For: Flight 1", PropertyExpressionOperator.Contains));
                    this.mUIFlightOptionsContainPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "frameContainerWhite";
                    this.mUIFlightOptionsContainPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"frameContainerWhite\" id=\"flightOptionsContainer\" style=\"overflow: hidden; " +
                        "display: block;\"";
                    this.mUIFlightOptionsContainPane.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUIFlightOptionsContainPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIFlightOptionsContainPane;
        #endregion
    }
}
