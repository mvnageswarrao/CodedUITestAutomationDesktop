// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.BookingPages.selectAirporttoIncludeFlights_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class selectAirporttoIncludeFlights_Map:logWriter
    {
        
        /// <summary>
        /// selectAirporttoIncludeFlights_Method - Use 'selectAirporttoIncludeFlights_MethodParams' to pass parameters into this method.
        /// </summary>
        public void selectAirporttoIncludeFlights_Method()
        {
            #region Variable Declarations
            HtmlComboBox uIDrpAirPortComboBox = this.UIYourHolidaySummaryWiWindow.UIYourHolidaySummaryDocument.UIIFrmIncludeFlightFrame.UIIncludeFlightDocument.UIDrpAirPortComboBox;
            #endregion

            Random rnd = new Random();
            int rndnum = rnd.Next(1, 32);

            int TobeSelectedAiprortIndex = rndnum;

            string SelectedAirport = string.Empty;

            try
            {
                uIDrpAirPortComboBox.SelectedIndex = TobeSelectedAiprortIndex;
                SelectedAirport = uIDrpAirPortComboBox.SelectedItem;
                WriteLogs("PASS : Selected\"" + SelectedAirport + "\" as an Airport From Include Flights Section.");
            }

            catch (AssertFailedException ex)
            {
                takeImage("selectAirporttoIncludeFlights");
                WriteLogs("FAIL : Could Not Select Airport From Include Flights Section.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }

            // Select 'Belfast Intl' in 'drpAirPort' combo box
            //uIDrpAirPortComboBox.SelectedItem = this.selectAirporttoIncludeFlights_MethodParams.UIDrpAirPortComboBoxSelectedItem;
        }
        
        #region Properties
        public virtual selectAirporttoIncludeFlights_MethodParams selectAirporttoIncludeFlights_MethodParams
        {
            get
            {
                if ((this.mselectAirporttoIncludeFlights_MethodParams == null))
                {
                    this.mselectAirporttoIncludeFlights_MethodParams = new selectAirporttoIncludeFlights_MethodParams();
                }
                return this.mselectAirporttoIncludeFlights_MethodParams;
            }
        }
        
        public UIYourHolidaySummaryWiWindow UIYourHolidaySummaryWiWindow
        {
            get
            {
                if ((this.mUIYourHolidaySummaryWiWindow == null))
                {
                    this.mUIYourHolidaySummaryWiWindow = new UIYourHolidaySummaryWiWindow();
                }
                return this.mUIYourHolidaySummaryWiWindow;
            }
        }
        #endregion
        
        #region Fields
        private selectAirporttoIncludeFlights_MethodParams mselectAirporttoIncludeFlights_MethodParams;
        
        private UIYourHolidaySummaryWiWindow mUIYourHolidaySummaryWiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'selectAirporttoIncludeFlights_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class selectAirporttoIncludeFlights_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Belfast Intl' in 'drpAirPort' combo box
        /// </summary>
        public string UIDrpAirPortComboBoxSelectedItem = "Belfast Intl";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryWiWindow : BrowserWindow
    {
        
        public UIYourHolidaySummaryWiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYourHolidaySummaryDocument UIYourHolidaySummaryDocument
        {
            get
            {
                if ((this.mUIYourHolidaySummaryDocument == null))
                {
                    this.mUIYourHolidaySummaryDocument = new UIYourHolidaySummaryDocument(this);
                }
                return this.mUIYourHolidaySummaryDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYourHolidaySummaryDocument mUIYourHolidaySummaryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYourHolidaySummaryDocument : HtmlDocument
    {
        
        public UIYourHolidaySummaryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your Holiday Summary", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/default.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIIFrmIncludeFlightFrame UIIFrmIncludeFlightFrame
        {
            get
            {
                if ((this.mUIIFrmIncludeFlightFrame == null))
                {
                    this.mUIIFrmIncludeFlightFrame = new UIIFrmIncludeFlightFrame(this);
                }
                return this.mUIIFrmIncludeFlightFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIIFrmIncludeFlightFrame mUIIFrmIncludeFlightFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIIFrmIncludeFlightFrame : HtmlIFrame
    {
        
        public UIIFrmIncludeFlightFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "iFrmIncludeFlight";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "iFrmIncludeFlight";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.AbsolutePath, "/code_net/booking/includeflight.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "/code_net/booking/includeflight.aspx?", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "name=\"iFrmIncludeFlight\" width=\"300\" hei";
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public UIIncludeFlightDocument UIIncludeFlightDocument
        {
            get
            {
                if ((this.mUIIncludeFlightDocument == null))
                {
                    this.mUIIncludeFlightDocument = new UIIncludeFlightDocument(this);
                }
                return this.mUIIncludeFlightDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIIncludeFlightDocument mUIIncludeFlightDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIIncludeFlightDocument : HtmlDocument
    {
        
        public UIIncludeFlightDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Include Flight", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/includeflight.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/includeflight.aspx?", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your Holiday Summary");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIDrpAirPortComboBox
        {
            get
            {
                if ((this.mUIDrpAirPortComboBox == null))
                {
                    this.mUIDrpAirPortComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDrpAirPortComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "drpAirPort";
                    this.mUIDrpAirPortComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "drpAirPort";
                    this.mUIDrpAirPortComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"drpAirPort\" id=\"drpAirPort\" style=";
                    this.mUIDrpAirPortComboBox.WindowTitles.Add("Your Holiday Summary");
                    #endregion
                }
                return this.mUIDrpAirPortComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIDrpAirPortComboBox;
        #endregion
    }
}
