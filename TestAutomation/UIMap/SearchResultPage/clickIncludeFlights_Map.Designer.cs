// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.SearchResultPage.clickIncludeFlights_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class clickIncludeFlights_Map:logWriter
    {
        
        /// <summary>
        /// clickIncludeFlights_Method
        /// </summary>
        public void clickIncludeFlights_Method()
        {
            #region Variable Declarations
            HtmlHyperlink uIIncludeFlightsHyperlink = this.UIYoursearchfound9VillWindow.UIYoursearchfound9VillDocument.UIIncludeFlightsHyperlink;
            #endregion

            try
            {
                Mouse.Click(uIIncludeFlightsHyperlink);
                WriteLogs("PASS : Clicked \"Include Flights\" Popup.");
            }
            catch (AssertFailedException ex)
            {
                WriteLogs("FAIL : Could Not Click \"Include Flights\" Popup.");
                WriteLogs("----------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public UIYoursearchfound9VillWindow UIYoursearchfound9VillWindow
        {
            get
            {
                if ((this.mUIYoursearchfound9VillWindow == null))
                {
                    this.mUIYoursearchfound9VillWindow = new UIYoursearchfound9VillWindow();
                }
                return this.mUIYoursearchfound9VillWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound9VillWindow mUIYoursearchfound9VillWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIYoursearchfound9VillWindow : BrowserWindow
    {
        
        public UIYoursearchfound9VillWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your search found", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your search found 9 Villa holidays");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound9VillDocument UIYoursearchfound9VillDocument
        {
            get
            {
                if ((this.mUIYoursearchfound9VillDocument == null))
                {
                    this.mUIYoursearchfound9VillDocument = new UIYoursearchfound9VillDocument(this);
                }
                return this.mUIYoursearchfound9VillDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound9VillDocument mUIYoursearchfound9VillDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIYoursearchfound9VillDocument : HtmlDocument
    {
        
        public UIYoursearchfound9VillDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your search found", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/searchresult.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/searchresult.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your search found 9 Villa holidays");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIIncludeFlightsHyperlink
        {
            get
            {
                if ((this.mUIIncludeFlightsHyperlink == null))
                {
                    this.mUIIncludeFlightsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIIncludeFlightsHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Id, "MainContent_lvVillaInfo_villaCtrl_", PropertyExpressionOperator.Contains));
                    this.mUIIncludeFlightsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Include Flights";
                    this.mUIIncludeFlightsHyperlink.WindowTitles.Add("Your search found 9 Villa holidays");
                    #endregion
                }
                return this.mUIIncludeFlightsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIIncludeFlightsHyperlink;
        #endregion
    }
}
