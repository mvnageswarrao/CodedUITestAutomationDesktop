// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.SearchResultPage.VerifyResortsFilter_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class VerifyResortsFilter_Map:logWriter
    {
        
        /// <summary>
        /// VerifyResortsFilter_Method - Use 'VerifyResortsFilter_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VerifyResortsFilter_Method(List<string> ResortsList, List<string> VillaCountFrEachResort)
        {
            #region Variable Declarations
            HtmlDiv UIVillaresortsClearAlbPane = this.UIYoursearchfound4VillWindow.UIYoursearchfound4VillDocument.UIRightContent_dvAllFiPane.UIVillaresortsClearAlbPane;
            #endregion

            // Verify that the 'TagName' property of 'Villa destination Clear Algarve' pane equals 'DIV'
            //Assert.AreEqual(this.VerifyVillaDestinationsFilter_MethodExpectedValues.UIVilladestinationCleaPaneTagName, uIVilladestinationCleaPane.TagName);

            string TxtFrmPage = UIVillaresortsClearAlbPane.InnerText;
            TxtFrmPage = TxtFrmPage.Replace("\r\n", string.Empty);
            if (TxtFrmPage.Contains("Clear"))
            {
                TxtFrmPage = TxtFrmPage.Replace("Villa resorts   Clear ", string.Empty).Trim();
            }
            else
            {
                TxtFrmPage = TxtFrmPage.Replace("Villa resorts", string.Empty).Trim();
            }
            TxtFrmPage = TxtFrmPage.Replace(" ", string.Empty);
            int i = 0;

            for (i = 0; i < ResortsList.Count; i++)
            {
                try
                {
                    string TxtFrmDB = ResortsList[i].ToString() + " (" + VillaCountFrEachResort[i].ToString() + ")".Trim();
                    TxtFrmDB = TxtFrmDB.Replace(" ", string.Empty);
                    StringAssert.Contains(TxtFrmPage, TxtFrmDB);
                    WriteLogs("PASS : Resort Name : " + ResortsList[i].Trim() + " And Villa Count: " + VillaCountFrEachResort[i].Trim() + " is Matched with DB.");
                }
                catch (AssertFailedException ex)
                {
                    WriteLogs("FAIL : Resort Name : " + ResortsList[i] + " And Villa Count: " + VillaCountFrEachResort[i] + " is NOT Matched with DB.");
                    WriteLogs("----------" + ex.Message.ToString());
                }
            }
        }
                
        #region Properties
        public virtual VerifyResortsFilter_MethodExpectedValues VerifyResortsFilter_MethodExpectedValues
        {
            get
            {
                if ((this.mVerifyResortsFilter_MethodExpectedValues == null))
                {
                    this.mVerifyResortsFilter_MethodExpectedValues = new VerifyResortsFilter_MethodExpectedValues();
                }
                return this.mVerifyResortsFilter_MethodExpectedValues;
            }
        }
        
        public UIYoursearchfound4VillWindow UIYoursearchfound4VillWindow
        {
            get
            {
                if ((this.mUIYoursearchfound4VillWindow == null))
                {
                    this.mUIYoursearchfound4VillWindow = new UIYoursearchfound4VillWindow();
                }
                return this.mUIYoursearchfound4VillWindow;
            }
        }     
        
        #endregion
        
        #region Fields
        private VerifyResortsFilter_MethodExpectedValues mVerifyResortsFilter_MethodExpectedValues;
        
        private UIYoursearchfound4VillWindow mUIYoursearchfound4VillWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyResortsFilter_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class VerifyResortsFilter_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Villa resorts Clear Albufeira (1' pane contains '
        ///Villa resorts
        ///   Clear 
        ///
        ///Albufeira (1)
        ///Armacao de Pera (1)
        ///Carvoeiro (1)
        ///Sao Rafael, Castelo, Gale, Val (1)'
        /// </summary>
        public string UIVillaresortsClearAlbPaneInnerText = "\r\nVilla resorts\r\n   Clear \r\n\r\nAlbufeira (1)\r\nArmacao de Pera (1)\r\nCarvoeiro (1)\r\n" +
            "Sao Rafael, Castelo, Gale, Val (1)";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIYoursearchfound4VillWindow : BrowserWindow
    {
        
        public UIYoursearchfound4VillWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your search found", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your search found 4 Villa holidays");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound4VillDocument UIYoursearchfound4VillDocument
        {
            get
            {
                if ((this.mUIYoursearchfound4VillDocument == null))
                {
                    this.mUIYoursearchfound4VillDocument = new UIYoursearchfound4VillDocument(this);
                }
                return this.mUIYoursearchfound4VillDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound4VillDocument mUIYoursearchfound4VillDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIYoursearchfound4VillDocument : HtmlDocument
    {
        
        public UIYoursearchfound4VillDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your search found", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/searchresult.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/searchresult.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your search found 4 Villa holidays");
            #endregion
        }
        
        #region Properties
        public UIRightContent_dvAllFiPane UIRightContent_dvAllFiPane
        {
            get
            {
                if ((this.mUIRightContent_dvAllFiPane == null))
                {
                    this.mUIRightContent_dvAllFiPane = new UIRightContent_dvAllFiPane(this);
                }
                return this.mUIRightContent_dvAllFiPane;
            }
        }
        #endregion
        
        #region Fields
        private UIRightContent_dvAllFiPane mUIRightContent_dvAllFiPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIRightContent_dvAllFiPane : HtmlDiv
    {
        
        public UIRightContent_dvAllFiPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "rightContent_dvAllFilterCol";
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Refine by: \r\n Clear All \r\n.CheckBoxnotse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"rightContent_dvAllFilterCol\"";
            this.WindowTitles.Add("Your search found 4 Villa holidays");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIVillaresortsClearAlbPane
        {
            get
            {
                if ((this.mUIVillaresortsClearAlbPane == null))
                {
                    this.mUIVillaresortsClearAlbPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIVillaresortsClearAlbPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Villa resorts", PropertyExpressionOperator.Contains));
                    this.mUIVillaresortsClearAlbPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "portlet BorderZero ui-widget ui-widget-content ui-helper-clearfix ui-corner-all";
                    this.mUIVillaresortsClearAlbPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"portlet BorderZero ui-widget ui-widget-content ui-helper-clearfix ui-corne" +
                        "r-all\"";
                    this.mUIVillaresortsClearAlbPane.WindowTitles.Add("Your search found 4 Villa holidays");
                    #endregion
                }
                return this.mUIVillaresortsClearAlbPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIVillaresortsClearAlbPane;
        #endregion
    }
}
