// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.VillaOnlyPriceCheck.getVillaOnlyPriceFrmSRPage_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class getVillaOnlyPriceFrmSRPage_Map:logWriter
    {
        
        /// <summary>
        /// getVillaOnlyPriceFrmSRPage_Method - Use 'getVillaOnlyPriceFrmSRPage_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void getVillaOnlyPriceFrmSRPage_Method(string villaOnlyPricefromDB, string villanameweb)
        {
            #region Variable Declarations
            HtmlSpan uIItem507Pane = this.UIYoursearchfound11VilWindow.UIYoursearchfound11VilDocument.UIItem507Pane;
            string webprice_trim = null;
            string webprice = null;
            #endregion

            // Verify that the 'InnerText' property of ': £507' pane contains ''
            //  StringAssert.Contains(uIItem507Pane.InnerText, this.getVillaOnlyPriceFrmSRPage_MethodExpectedValues.UIItem507PaneInnerText);
            try
            {
                StringAssert.Contains(uIItem507Pane.InnerText, villaOnlyPricefromDB);
                webprice = uIItem507Pane.InnerText;
                webprice_trim = webprice.Remove(0, 3);
               
               WriteLogs("PASS: Villa Only Price from Search Result Page:  " + webprice_trim + " is matched with  Villa Only Price from DB: " + villaOnlyPricefromDB + " ");
               WriteLogs("----------------------------------------------------------------------------------------- ");

            }
            catch (AssertFailedException ex)
            {
                WriteLogs("FAIL : Price didn't Matched for  \"" + villanameweb + "\" from DB and search result page.");
                WriteLogs("FAIL: Villa Only Price from DB " + villaOnlyPricefromDB + " ");
                WriteLogs("FAIL: Villa Only Price from Search Result page" + webprice_trim + " ");
                WriteLogs("FAIL: -----------------" + ex.Message.ToString());
                WriteLogs("FAIL: -------------------------------------------------------------");
            }
        }
             public HtmlSpan getVillaPriceControlFrmSRPage_Method()
        {
            #region Variable Declarations
            HtmlSpan uIItem507Pane = this.UIYoursearchfound11VilWindow.UIYoursearchfound11VilDocument.UIItem507Pane;
            #endregion
            return uIItem507Pane;

            // Verify that the 'InnerText' property of 'Villa Mencia, Salgar, Menorca' link equals 'Villa Mencia, Salgar, Menorca'
            //Assert.AreEqual(this.getVillaNameFrmSRPage_MethodExpectedValues.UIVillaMenciaSalgarMenHyperlinkInnerText, uIVillaMenciaSalgarMenHyperlink.InnerText);
        }
             public void compareVOpriceFrmSRPage_Method(string villaOnlyPricefromDB, string villaonlypricefromweb,string villanameweb)
             {
                 #region Variable Declarations
                 HtmlSpan uIItem507Pane = this.UIYoursearchfound11VilWindow.UIYoursearchfound11VilDocument.UIItem507Pane;
                 #endregion

                 try
                 {
                     StringAssert.Contains(villaonlypricefromweb, villaOnlyPricefromDB);
                     WriteLogs("PASS: Villa Only Price from DB  " + villaOnlyPricefromDB + " is matched with Villa Only Price from Web  " + villaonlypricefromweb + " ");
                     WriteLogs("---------------------------------------------------------------------------------------------------------------");
                   
                  }
                 catch (AssertFailedException ex)
                 {
                     WriteLogs("FAIL: Villa Only Price Verification with DB for villa " + villanameweb + "");
                     WriteLogs("FAIL: Villa Only Price from DB " + villaOnlyPricefromDB + " :FAIL ");
                     WriteLogs("FAIL: Villa Only Price from web" + villaonlypricefromweb + " ");
                     WriteLogs("FAIL: -----------------" + ex.Message.ToString());
                    

                 }
             }
        
        #region Properties
        public virtual getVillaOnlyPriceFrmSRPage_MethodExpectedValues getVillaOnlyPriceFrmSRPage_MethodExpectedValues
        {
            get
            {
                if ((this.mgetVillaOnlyPriceFrmSRPage_MethodExpectedValues == null))
                {
                    this.mgetVillaOnlyPriceFrmSRPage_MethodExpectedValues = new getVillaOnlyPriceFrmSRPage_MethodExpectedValues();
                }
                return this.mgetVillaOnlyPriceFrmSRPage_MethodExpectedValues;
            }
        }
        
        public UIYoursearchfound11VilWindow UIYoursearchfound11VilWindow
        {
            get
            {
                if ((this.mUIYoursearchfound11VilWindow == null))
                {
                    this.mUIYoursearchfound11VilWindow = new UIYoursearchfound11VilWindow();
                }
                return this.mUIYoursearchfound11VilWindow;
            }
        }
        #endregion
        
        #region Fields
        private getVillaOnlyPriceFrmSRPage_MethodExpectedValues mgetVillaOnlyPriceFrmSRPage_MethodExpectedValues;
        
        private UIYoursearchfound11VilWindow mUIYoursearchfound11VilWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'getVillaOnlyPriceFrmSRPage_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class getVillaOnlyPriceFrmSRPage_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of ': £507' pane contains ''
        /// </summary>
        public string UIItem507PaneInnerText = "";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIYoursearchfound11VilWindow : BrowserWindow
    {
        
        public UIYoursearchfound11VilWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Your search found";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your search found");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound11VilDocument UIYoursearchfound11VilDocument
        {
            get
            {
                if ((this.mUIYoursearchfound11VilDocument == null))
                {
                    this.mUIYoursearchfound11VilDocument = new UIYoursearchfound11VilDocument(this);
                }
                return this.mUIYoursearchfound11VilDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound11VilDocument mUIYoursearchfound11VilDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIYoursearchfound11VilDocument : HtmlDocument
    {
        
        public UIYoursearchfound11VilDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Your search found 11 Villa holidays";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/searchresult.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://staging1.villaplus.com/searchresult.aspx";
            this.WindowTitles.Add("Your search found 11 Villa holidays");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIItem507Pane
        {
            get
            {
                if ((this.mUIItem507Pane == null))
                {
                    this.mUIItem507Pane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItem507Pane.SearchProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.Id, "MainContent_lvVillaInfo_villaCtrl", PropertyExpressionOperator.Contains));
                    this.mUIItem507Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = "";
                    this.mUIItem507Pane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, ": £", PropertyExpressionOperator.Contains));
                    this.mUIItem507Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = "";
                    this.mUIItem507Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "";
                    this.mUIItem507Pane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "id=\"MainContent_lvVillaInfo_villaCtrl", PropertyExpressionOperator.Contains));
                    this.mUIItem507Pane.WindowTitles.Add("Your search found");
                    #endregion
                }
                return this.mUIItem507Pane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIItem507Pane;
        #endregion
    }
}
