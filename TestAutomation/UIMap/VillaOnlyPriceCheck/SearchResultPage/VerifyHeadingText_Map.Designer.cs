// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.SearchResultPage.VerifyHeadingText_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class VerifyHeadingText_Map:logWriter
    {
        
        /// <summary>
        /// verify heading text on search result page
        /// </summary>
        public void VerifyHeadingText_Method()
        {
            #region Variable Declarations
            HtmlSpan uIGettingclosertoyourhPane = this.UIYoursearchfound3VillWindow.UIYoursearchfound3VillDocument.UIGettingclosertoyourhPane;
            #endregion

            string Exptxt = "Getting closer to your holiday";
            try
            {
                // Verify that the 'InnerText' property of 'Getting closer to your holiday' pane contains 'Getting closer to your holiday'
                StringAssert.Contains(uIGettingclosertoyourhPane.InnerText.Trim(), Exptxt);
                WriteLogs("PASS : Heading Text is Present");
            }

            catch (AssertFailedException ex)
            {
                WriteLogs("FAIL : Heading Text is Not Matched.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual VerifyHeadingText_MethodExpectedValues VerifyHeadingText_MethodExpectedValues
        {
            get
            {
                if ((this.mVerifyHeadingText_MethodExpectedValues == null))
                {
                    this.mVerifyHeadingText_MethodExpectedValues = new VerifyHeadingText_MethodExpectedValues();
                }
                return this.mVerifyHeadingText_MethodExpectedValues;
            }
        }
        
        public UIYoursearchfound3VillWindow UIYoursearchfound3VillWindow
        {
            get
            {
                if ((this.mUIYoursearchfound3VillWindow == null))
                {
                    this.mUIYoursearchfound3VillWindow = new UIYoursearchfound3VillWindow();
                }
                return this.mUIYoursearchfound3VillWindow;
            }
        }
        #endregion
        
        #region Fields
        private VerifyHeadingText_MethodExpectedValues mVerifyHeadingText_MethodExpectedValues;
        
        private UIYoursearchfound3VillWindow mUIYoursearchfound3VillWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyHeadingText_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class VerifyHeadingText_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Getting closer to your holiday' pane contains 'Getting closer to your holiday'
        /// </summary>
        public string UIGettingclosertoyourhPaneInnerText = "Getting closer to your holiday";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIYoursearchfound3VillWindow : BrowserWindow
    {
        
        public UIYoursearchfound3VillWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your search found", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your search found 3 Villa holidays");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound3VillDocument UIYoursearchfound3VillDocument
        {
            get
            {
                if ((this.mUIYoursearchfound3VillDocument == null))
                {
                    this.mUIYoursearchfound3VillDocument = new UIYoursearchfound3VillDocument(this);
                }
                return this.mUIYoursearchfound3VillDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound3VillDocument mUIYoursearchfound3VillDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIYoursearchfound3VillDocument : HtmlDocument
    {
        
        public UIYoursearchfound3VillDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your search found", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/searchresult.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/searchresult.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your search found 3 Villa holidays");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIGettingclosertoyourhPane
        {
            get
            {
                if ((this.mUIGettingclosertoyourhPane == null))
                {
                    this.mUIGettingclosertoyourhPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIGettingclosertoyourhPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "topContent_header";
                    this.mUIGettingclosertoyourhPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Getting closer to your holiday";
                    this.mUIGettingclosertoyourhPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"topContent_header\"";
                    this.mUIGettingclosertoyourhPane.WindowTitles.Add("Your search found 3 Villa holidays");
                    #endregion
                }
                return this.mUIGettingclosertoyourhPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIGettingclosertoyourhPane;
        #endregion
    }
}
