// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.SearchResultPage.VerifyVillaOverview_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    using System.Configuration;
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class VerifyVillaOverview_Map:logWriter 
    {
        
        /// <summary>
        /// VerifyVillaOverview_Method - Use 'VerifyVillaOverview_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VerifyVillaOverview_Method(List<string> VillaOverView, string villablockDETAILS, string VillaNAME)
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UIYoursearchfound214ViWindow.UIYoursearchfound214ViDocument.UIMainContent_lvVillaIPane.UIItemCustom;
            #endregion

            foreach (string Overview in VillaOverView)
            {
                try
                {
                    StringAssert.Contains( villablockDETAILS.Trim(),Overview.Trim());
                    WriteLogs("PASS : OverView for Villa : " + VillaNAME + " : " + Overview + " is shown correct.");
                }

                catch (AssertFailedException ex)
                {
                    WriteLogs("FAIL : OverView for Villa : " + VillaNAME + " : " + Overview + "is shown Wrong.");
                    WriteLogs("----------" + ex.Message.ToString());
                }
            }

            //UITestControlCollection UI = uIItemCustom.FindMatchingControls();
            //foreach (UITestControl utc in UI)
            //{
            //    const string HTML_TAG_PATTERN = "<.*?>";

            //    string OverviewfromPage = uIItemCustom.InnerText;
            //    OverviewfromPage = Regex.Replace(OverviewfromPage, HTML_TAG_PATTERN, string.Empty);
            //    OverviewfromPage = OverviewfromPage.Replace("\r\n", string.Empty);
            //    OverviewfromPage = OverviewfromPage.Trim();
            //    //OverviewfromPage = OverviewfromPage.Replace(" ", string.Empty);
            //    foreach (string overview in VillaOverView)
            //    {
            //        try
            //        {
            //            //Assert.AreEqual(VillaOverviewforeachVilla, OverviewfromPage);
            //            StringAssert.Contains(OverviewfromPage, overview);
            //            WriteLogs("OverView for Villa : " + VillaName + " : " + overview + "is shown correct : PASS");
            //        }
            //        catch (AssertFailedException ex)
            //        {
            //            WriteLogs("OverView for Villa : " + VillaName + " : " + overview + "is shown Wrong : FAIL");
            //            WriteLogs("----------" + ex.Message.ToString());
            //        }
            // }

                // Verify that the 'TagName' property of custom control equals 'UL'
                //Assert.AreEqual(this.VerifyVillaOverview_MethodExpectedValues.UIItemCustomTagName, uIItemCustom.TagName);
            //}
        }
        #region Properties
        public virtual VerifyVillaOverview_MethodExpectedValues VerifyVillaOverview_MethodExpectedValues
        {
            get
            {
                if ((this.mVerifyVillaOverview_MethodExpectedValues == null))
                {
                    this.mVerifyVillaOverview_MethodExpectedValues = new VerifyVillaOverview_MethodExpectedValues();
                }
                return this.mVerifyVillaOverview_MethodExpectedValues;
            }
        }
        
        public UIYoursearchfound214ViWindow UIYoursearchfound214ViWindow
        {
            get
            {
                if ((this.mUIYoursearchfound214ViWindow == null))
                {
                    this.mUIYoursearchfound214ViWindow = new UIYoursearchfound214ViWindow();
                }
                return this.mUIYoursearchfound214ViWindow;
            }
        }
        #endregion
        
        #region Fields
        private VerifyVillaOverview_MethodExpectedValues mVerifyVillaOverview_MethodExpectedValues;
        
        private UIYoursearchfound214ViWindow mUIYoursearchfound214ViWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyVillaOverview_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class VerifyVillaOverview_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'TagName' property of custom control equals 'UL'
        /// </summary>
        public string UIItemCustomTagName = "UL";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIYoursearchfound214ViWindow : BrowserWindow
    {
        
        public UIYoursearchfound214ViWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your search found ", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your search found 214 Villa holidays");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound214ViDocument UIYoursearchfound214ViDocument
        {
            get
            {
                if ((this.mUIYoursearchfound214ViDocument == null))
                {
                    this.mUIYoursearchfound214ViDocument = new UIYoursearchfound214ViDocument(this);
                }
                return this.mUIYoursearchfound214ViDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound214ViDocument mUIYoursearchfound214ViDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIYoursearchfound214ViDocument : HtmlDocument
    {
        
        public UIYoursearchfound214ViDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your search found ", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/searchresult.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "villaplus.com/searchresult.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your search found 214 Villa holidays");
            #endregion
        }
        
        #region Properties
        public UIMainContent_lvVillaIPane UIMainContent_lvVillaIPane
        {
            get
            {
                if ((this.mUIMainContent_lvVillaIPane == null))
                {
                    this.mUIMainContent_lvVillaIPane = new UIMainContent_lvVillaIPane(this);
                }
                return this.mUIMainContent_lvVillaIPane;
            }
        }
        #endregion
        
        #region Fields
        private UIMainContent_lvVillaIPane mUIMainContent_lvVillaIPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIMainContent_lvVillaIPane : HtmlDiv
    {
        
        public UIMainContent_lvVillaIPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "MainContent_lvVillaInfo_lstProducts";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Villa \r\n\r\n   \r\n", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"MainContent_lvVillaInfo_lstProducts\"";
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.TagInstance, "41", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your search found 214 Villa holidays");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "UL";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "villa_like";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"villa_like\"";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "10";
                    this.mUIItemCustom.WindowTitles.Add("Your search found 214 Villa holidays");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
}
