// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.SearchResultPage.verifyProdPageOpened_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class verifyProdPageOpened_Map:logWriter
    {
        
        /// <summary>
        /// verifyProdPageOpened_Method - Use 'verifyProdPageOpened_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyProdPageOpened_Method(string VillaNAME)
        {
            #region Variable Declarations
            HtmlSpan uIVillaLourdasIthakiLoPane = this.UIVillaLourdasIthakiInWindow.UIVillaLourdasIthakiInDocument.UIVillaLourdasIthakiLoPane;
            #endregion
            string VillaNameFrmPage = uIVillaLourdasIthakiLoPane.InnerText;

            try
            {
                StringAssert.Contains(VillaNameFrmPage, VillaNAME); 
                WriteLogs("PASS : Product Page is opened for the selected Villa" + VillaNAME + ".");
            }

            catch (AssertFailedException ex)
            {
                WriteLogs("FAIL : Could not Open Product Page.");
                WriteLogs("----------" + ex.Message.ToString());
            }

            // Verify that the 'InnerText' property of 'Villa Lourdas Ithaki, Lourdas, Kefalonia' pane contains 'Villa Lourdas Ithaki, Lourdas, Kefalonia'
            //StringAssert.Contains(uIVillaLourdasIthakiLoPane.InnerText, this.verifyProdPageOpened_MethodExpectedValues.UIVillaLourdasIthakiLoPaneInnerText);
        }
        
        #region Properties
        public virtual verifyProdPageOpened_MethodExpectedValues verifyProdPageOpened_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyProdPageOpened_MethodExpectedValues == null))
                {
                    this.mverifyProdPageOpened_MethodExpectedValues = new verifyProdPageOpened_MethodExpectedValues();
                }
                return this.mverifyProdPageOpened_MethodExpectedValues;
            }
        }
        
        public UIVillaLourdasIthakiInWindow UIVillaLourdasIthakiInWindow
        {
            get
            {
                if ((this.mUIVillaLourdasIthakiInWindow == null))
                {
                    this.mUIVillaLourdasIthakiInWindow = new UIVillaLourdasIthakiInWindow();
                }
                return this.mUIVillaLourdasIthakiInWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyProdPageOpened_MethodExpectedValues mverifyProdPageOpened_MethodExpectedValues;
        
        private UIVillaLourdasIthakiInWindow mUIVillaLourdasIthakiInWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyProdPageOpened_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class verifyProdPageOpened_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Villa Lourdas Ithaki, Lourdas, Kefalonia' pane contains 'Villa Lourdas Ithaki, Lourdas, Kefalonia'
        /// </summary>
        public string UIVillaLourdasIthakiLoPaneInnerText = "Villa Lourdas Ithaki, Lourdas, Kefalonia";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVillaLourdasIthakiInWindow : BrowserWindow
    {
        
        public UIVillaLourdasIthakiInWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "| Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Lourdas Ithaki In Lourdas, Kefalonia | Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaLourdasIthakiInDocument UIVillaLourdasIthakiInDocument
        {
            get
            {
                if ((this.mUIVillaLourdasIthakiInDocument == null))
                {
                    this.mUIVillaLourdasIthakiInDocument = new UIVillaLourdasIthakiInDocument(this);
                }
                return this.mUIVillaLourdasIthakiInDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaLourdasIthakiInDocument mUIVillaLourdasIthakiInDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVillaLourdasIthakiInDocument : HtmlDocument
    {
        
        public UIVillaLourdasIthakiInDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "| Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Lourdas Ithaki In Lourdas, Kefalonia | Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIVillaLourdasIthakiLoPane
        {
            get
            {
                if ((this.mUIVillaLourdasIthakiLoPane == null))
                {
                    this.mUIVillaLourdasIthakiLoPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIVillaLourdasIthakiLoPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "MainContent_VillaHeader";
                    this.mUIVillaLourdasIthakiLoPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Villa", PropertyExpressionOperator.Contains));
                    this.mUIVillaLourdasIthakiLoPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"MainContent_VillaHeader\"";
                    this.mUIVillaLourdasIthakiLoPane.WindowTitles.Add("Villa Lourdas Ithaki In Lourdas, Kefalonia | Villa Plus");
                    #endregion
                }
                return this.mUIVillaLourdasIthakiLoPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIVillaLourdasIthakiLoPane;
        #endregion
    }
}
