// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ProductPage.verifyVillaFacilityText_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyVillaFacilityText_Map:logWriter
    {
        
        /// <summary>
        /// verifyVillaFacilitiesText_Method - Use 'verifyVillaFacilitiesText_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyVillaFacilitiesText_Method(string villaFacilityText)
        {
            #region Variable Declarations
            HtmlDiv uIVillafacilities1doubPane = this.UIVillaEborosOldSkalaKWindow.UIVillaEborosOldSkalaKDocument.UIDvVillaFaclitiesPane.UIVillafacilities1doubPane;
            #endregion

            // Verify that the 'InnerText' property of 'Villa facilities 1 double bedroom' pane contains 'Villa facilities
            //
            // 1 double bedroom   
            //with en suite shower room   
            //1 twin bedroom   
            //with en suite shower room   
            //Washing Machine   
            //Dishwasher   
            //Microwave   
            //Fan/Heater   
            //Hairdryers   
            //FREE WiFi   
            //Laptop Safe   
            //Satellite TV   
            //CD Player   
            //DVD player plus films   
            //Pool/Billiard Table   
            //Table Tennis Table   
            //Brick Barbecue   
            //Safe   
            //Alarm and Nightlight   
            //Air conditioning/heating in   
            //bedrooms and lounge   
            //at no extra cost   
            //FREE Heated Pool   '
            //StringAssert.Contains(uIVillafacilities1doubPane.InnerText, this.verifyVillaFacilitiesText_MethodExpectedValues.UIVillafacilities1doubPaneInnerText);
            string toCompare = uIVillafacilities1doubPane.InnerText;
            toCompare = toCompare.Replace("\r\n", string.Empty);
            toCompare = toCompare.Trim();
            toCompare = toCompare.Replace(" ", string.Empty);
            try
            {
                
                StringAssert.Contains(toCompare, villaFacilityText);
                WriteLogs("PASS : Description Tab - Facilities.");
            }
            catch (AssertFailedException ex)
            {
                WriteLogs("FAIL : Description Tab - Facilities.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual verifyVillaFacilitiesText_MethodExpectedValues verifyVillaFacilitiesText_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyVillaFacilitiesText_MethodExpectedValues == null))
                {
                    this.mverifyVillaFacilitiesText_MethodExpectedValues = new verifyVillaFacilitiesText_MethodExpectedValues();
                }
                return this.mverifyVillaFacilitiesText_MethodExpectedValues;
            }
        }
        
        public UIVillaEborosOldSkalaKWindow UIVillaEborosOldSkalaKWindow
        {
            get
            {
                if ((this.mUIVillaEborosOldSkalaKWindow == null))
                {
                    this.mUIVillaEborosOldSkalaKWindow = new UIVillaEborosOldSkalaKWindow();
                }
                return this.mUIVillaEborosOldSkalaKWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyVillaFacilitiesText_MethodExpectedValues mverifyVillaFacilitiesText_MethodExpectedValues;
        
        private UIVillaEborosOldSkalaKWindow mUIVillaEborosOldSkalaKWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyVillaFacilitiesText_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyVillaFacilitiesText_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Villa facilities 1 double bedroom' pane contains 'Villa facilities
        ///
        /// 1 double bedroom   
        ///with en suite shower room   
        ///1 twin bedroom   
        ///with en suite shower room   
        ///Washing Machine   
        ///Dishwasher   
        ///Microwave   
        ///Fan/Heater   
        ///Hairdryers   
        ///FREE WiFi   
        ///Laptop Safe   
        ///Satellite TV   
        ///CD Player   
        ///DVD player plus films   
        ///Pool/Billiard Table   
        ///Table Tennis Table   
        ///Brick Barbecue   
        ///Safe   
        ///Alarm and Nightlight   
        ///Air conditioning/heating in   
        ///bedrooms and lounge   
        ///at no extra cost   
        ///FREE Heated Pool   '
        /// </summary>
        public string UIVillafacilities1doubPaneInnerText = @"Villa facilities

 1 double bedroom   
with en suite shower room   
1 twin bedroom   
with en suite shower room   
Washing Machine   
Dishwasher   
Microwave   
Fan/Heater   
Hairdryers   
FREE WiFi   
Laptop Safe   
Satellite TV   
CD Player   
DVD player plus films   
Pool/Billiard Table   
Table Tennis Table   
Brick Barbecue   
Safe   
Alarm and Nightlight   
Air conditioning/heating in   
bedrooms and lounge   
at no extra cost   
FREE Heated Pool   ";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaEborosOldSkalaKWindow : BrowserWindow
    {
        
        public UIVillaEborosOldSkalaKWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaEborosOldSkalaKDocument UIVillaEborosOldSkalaKDocument
        {
            get
            {
                if ((this.mUIVillaEborosOldSkalaKDocument == null))
                {
                    this.mUIVillaEborosOldSkalaKDocument = new UIVillaEborosOldSkalaKDocument(this);
                }
                return this.mUIVillaEborosOldSkalaKDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaEborosOldSkalaKDocument mUIVillaEborosOldSkalaKDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaEborosOldSkalaKDocument : HtmlDocument
    {
        
        public UIVillaEborosOldSkalaKDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/product.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/product.aspx?villaid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDvVillaFaclitiesPane UIDvVillaFaclitiesPane
        {
            get
            {
                if ((this.mUIDvVillaFaclitiesPane == null))
                {
                    this.mUIDvVillaFaclitiesPane = new UIDvVillaFaclitiesPane(this);
                }
                return this.mUIDvVillaFaclitiesPane;
            }
        }
        #endregion
        
        #region Fields
        private UIDvVillaFaclitiesPane mUIDvVillaFaclitiesPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIDvVillaFaclitiesPane : HtmlDiv
    {
        
        public UIDvVillaFaclitiesPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "dvVillaFaclities";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\n\r\nExtra villa facilities\r\n\r\n\r\n\r\nVilla ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = "";
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"dvVillaFaclities\"";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIVillafacilities1doubPane
        {
            get
            {
                if ((this.mUIVillafacilities1doubPane == null))
                {
                    this.mUIVillafacilities1doubPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIVillafacilities1doubPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIVillafacilities1doubPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIVillafacilities1doubPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Villa facilities", PropertyExpressionOperator.Contains));
                    this.mUIVillafacilities1doubPane.FilterProperties[HtmlDiv.PropertyNames.Title] = "";
                    this.mUIVillafacilities1doubPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "overflow-hidden margin-bottom10";
                    this.mUIVillafacilities1doubPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"overflow-hidden margin-bottom10\"";
                    #endregion
                }
                return this.mUIVillafacilities1doubPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIVillafacilities1doubPane;
        #endregion
    }
}
