// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ProductPage.verifyMainPageNoOfCustGivenRating_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyMainPageNoOfCustGivenRating_Map:logWriter
    {
        
        /// <summary>
        /// verifyMainPageNoOfCustGivenRating_Method - Use 'verifyMainPageNoOfCustGivenRating_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyMainPageNoOfCustGivenRating_Method(string noOfCustGivenRating)
        {
            #region Variable Declarations
            HtmlDiv uICustomerratingThereaPane = this.UIVillaPietraGiallaInAWindow.UIVillaPietraGiallaInADocument.UIDvLeftPane.UICustomerratingThereaPane;
            #endregion

            // Verify that the 'InnerText' property of 'Customer rating There are no ratings y' pane equals 'Customer rating
            // There are no ratings yet for this villa. '
            //Assert.AreEqual(this.verifyMainPageNoOfCustGivenRating_MethodExpectedValues.UICustomerratingThereaPaneInnerText, uICustomerratingThereaPane.InnerText);

            if (noOfCustGivenRating.Equals("0"))
            {
                noOfCustGivenRating = "Customer rating There are no ratings yet for this villa.";
            }
            else
            {
                noOfCustGivenRating = "Customer rating (" + noOfCustGivenRating + ")";
            }

            string toCompare = uICustomerratingThereaPane.InnerText;
            toCompare = toCompare.Replace("\r\n", string.Empty);
            toCompare = toCompare.Trim();

            try
            {
                StringAssert.Contains(toCompare, noOfCustGivenRating);
                //Assert.AreEqual(noOfCustGivenRating, toCompare);
                WriteLogs("PASS : No of Customers Given Rating.");
            }
            catch (AssertFailedException ex)
            {
                WriteLogs("FAIL : No of Customers Given Rating.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual verifyMainPageNoOfCustGivenRating_MethodExpectedValues verifyMainPageNoOfCustGivenRating_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyMainPageNoOfCustGivenRating_MethodExpectedValues == null))
                {
                    this.mverifyMainPageNoOfCustGivenRating_MethodExpectedValues = new verifyMainPageNoOfCustGivenRating_MethodExpectedValues();
                }
                return this.mverifyMainPageNoOfCustGivenRating_MethodExpectedValues;
            }
        }
        
        public UIVillaPietraGiallaInAWindow UIVillaPietraGiallaInAWindow
        {
            get
            {
                if ((this.mUIVillaPietraGiallaInAWindow == null))
                {
                    this.mUIVillaPietraGiallaInAWindow = new UIVillaPietraGiallaInAWindow();
                }
                return this.mUIVillaPietraGiallaInAWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyMainPageNoOfCustGivenRating_MethodExpectedValues mverifyMainPageNoOfCustGivenRating_MethodExpectedValues;
        
        private UIVillaPietraGiallaInAWindow mUIVillaPietraGiallaInAWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyMainPageNoOfCustGivenRating_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyMainPageNoOfCustGivenRating_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Customer rating There are no ratings y' pane equals 'Customer rating
        /// There are no ratings yet for this villa. '
        /// </summary>
        public string UICustomerratingThereaPaneInnerText = "Customer rating\r\n There are no ratings yet for this villa. ";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaPietraGiallaInAWindow : BrowserWindow
    {
        
        public UIVillaPietraGiallaInAWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPietraGiallaInADocument UIVillaPietraGiallaInADocument
        {
            get
            {
                if ((this.mUIVillaPietraGiallaInADocument == null))
                {
                    this.mUIVillaPietraGiallaInADocument = new UIVillaPietraGiallaInADocument(this);
                }
                return this.mUIVillaPietraGiallaInADocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPietraGiallaInADocument mUIVillaPietraGiallaInADocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIVillaPietraGiallaInADocument : HtmlDocument
    {
        
        public UIVillaPietraGiallaInADocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "villaplus.com", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDvLeftPane UIDvLeftPane
        {
            get
            {
                if ((this.mUIDvLeftPane == null))
                {
                    this.mUIDvLeftPane = new UIDvLeftPane(this);
                }
                return this.mUIDvLeftPane;
            }
        }
        #endregion
        
        #region Fields
        private UIDvLeftPane mUIDvLeftPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIDvLeftPane : HtmlDiv
    {
        
        public UIDvLeftPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "dvLeft";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = "";
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"dvLeft\"";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICustomerratingThereaPane
        {
            get
            {
                if ((this.mUICustomerratingThereaPane == null))
                {
                    this.mUICustomerratingThereaPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICustomerratingThereaPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICustomerratingThereaPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICustomerratingThereaPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Customer rating\r\n There are no ratings y";
                    this.mUICustomerratingThereaPane.FilterProperties[HtmlDiv.PropertyNames.Title] = "";
                    this.mUICustomerratingThereaPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.Class, "avgCustRatingDec", PropertyExpressionOperator.Contains));
                    this.mUICustomerratingThereaPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "class=\"avgCustRatingDec", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUICustomerratingThereaPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICustomerratingThereaPane;
        #endregion
    }
}
