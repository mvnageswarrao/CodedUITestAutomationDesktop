// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ProductPage.verifyActTabVillaOnlyPrice_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class verifyActTabVillaOnlyPrice_Map:logWriter
    {
        
        /// <summary>
        /// verifyActTabVillaOnlyPrice_Method - Use 'verifyActTabVillaOnlyPrice_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyActTabVillaOnlyPrice_Method(string villaOnlyPrice, string dt)
        {
            #region Variable Declarations
            HtmlSpan uIItem482Pane = this.UIVillaPoppyPolisCypruWindow.UIVillaPoppyPolisCypruDocument.UIItem482Pane;
            #endregion

            // Verify that the 'InnerText' property of '£482' pane contains '£482'
            //StringAssert.Contains(uIItem482Pane.InnerText, this.verifyActTabVillaOnlyPrice_MethodExpectedValues.UIItem482PaneInnerText);
            try
            {
                StringAssert.Contains(uIItem482Pane.InnerText, villaOnlyPrice);
                WriteLogs("PASS : Availability Tab - Villa Only Price - (Departure Date -" + dt + ",Expected - " + villaOnlyPrice + " , Actual - " + uIItem482Pane.InnerText + ")");
            }
            catch(AssertFailedException ex)
            {
                WriteLogs("FAIL : Availability Tab - Villa Only Price (Departure Date -" + dt + ", Expected - " + villaOnlyPrice + " , Actual - " + uIItem482Pane.InnerText + ")");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual verifyActTabVillaOnlyPrice_MethodExpectedValues verifyActTabVillaOnlyPrice_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyActTabVillaOnlyPrice_MethodExpectedValues == null))
                {
                    this.mverifyActTabVillaOnlyPrice_MethodExpectedValues = new verifyActTabVillaOnlyPrice_MethodExpectedValues();
                }
                return this.mverifyActTabVillaOnlyPrice_MethodExpectedValues;
            }
        }
        
        public UIVillaPoppyPolisCypruWindow UIVillaPoppyPolisCypruWindow
        {
            get
            {
                if ((this.mUIVillaPoppyPolisCypruWindow == null))
                {
                    this.mUIVillaPoppyPolisCypruWindow = new UIVillaPoppyPolisCypruWindow();
                }
                return this.mUIVillaPoppyPolisCypruWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyActTabVillaOnlyPrice_MethodExpectedValues mverifyActTabVillaOnlyPrice_MethodExpectedValues;
        
        private UIVillaPoppyPolisCypruWindow mUIVillaPoppyPolisCypruWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyActTabVillaOnlyPrice_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class verifyActTabVillaOnlyPrice_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '£482' pane contains '£482'
        /// </summary>
        public string UIItem482PaneInnerText = "£482";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIVillaPoppyPolisCypruWindow : BrowserWindow
    {
        
        public UIVillaPoppyPolisCypruWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPoppyPolisCypruDocument UIVillaPoppyPolisCypruDocument
        {
            get
            {
                if ((this.mUIVillaPoppyPolisCypruDocument == null))
                {
                    this.mUIVillaPoppyPolisCypruDocument = new UIVillaPoppyPolisCypruDocument(this);
                }
                return this.mUIVillaPoppyPolisCypruDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPoppyPolisCypruDocument mUIVillaPoppyPolisCypruDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIVillaPoppyPolisCypruDocument : HtmlDocument
    {
        
        public UIVillaPoppyPolisCypruDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Villa Poppy, Polis, Cyprus, Villa Plus";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/product.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://nimbus/product.aspx?villaid=914";
            this.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIItem482Pane
        {
            get
            {
                if ((this.mUIItem482Pane == null))
                {
                    this.mUIItem482Pane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItem482Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = "voTotal";
                    this.mUIItem482Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem482Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "£482";
                    this.mUIItem482Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem482Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "bold";
                    this.mUIItem482Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"voTotal\" class=\"bold\"";
                    this.mUIItem482Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "89";
                    this.mUIItem482Pane.WindowTitles.Add("Villa Poppy, Polis, Cyprus, Villa Plus");
                    #endregion
                }
                return this.mUIItem482Pane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIItem482Pane;
        #endregion
    }
}
