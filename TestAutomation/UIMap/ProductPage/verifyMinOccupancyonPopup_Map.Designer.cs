// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ProductPage.verifyMinOccupancyonPopup_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class verifyMinOccupancyonPopup_Map:logWriter
    {
        
        /// <summary>
        /// verifyMinOccupancyonPopup_Method - Use 'verifyMinOccupancyonPopup_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyMinOccupancyonPopup_Method(int minoccupancy)
        {
            #region Variable Declarations
            HtmlDiv uIPleasenotetheminimumPane = this.UIVillaKapilaInProtaraWindow.UIVillaKapilaInProtaraDocument.UIPleasenotetheminimumPane;
            #endregion

            // Verify that the 'InnerText' property of 'Please note the minimum occupancy is 2 a' pane contains 'Please note the minimum occupancy is 2 adults or 1 adult and 1 child.
            //OK '
//            StringAssert.Contains(uIPleasenotetheminimumPane.InnerText, this.verifyMinOccupancyonPopup_MethodExpectedValues.UIPleasenotetheminimumPaneInnerText);
            try
            {
                StringAssert.Contains(uIPleasenotetheminimumPane.InnerText.ToString(), minoccupancy.ToString());
                WriteLogs("PASS : Availability Tab - Min Occupancy.");

            }
            catch (AssertFailedException ex)
            {
                takeImage("verifyMinOccupancyonPopup");
                WriteLogs("FAIL : Availability Tab - Min Occupancy.");
                WriteLogs("---------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual verifyMinOccupancyonPopup_MethodExpectedValues verifyMinOccupancyonPopup_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyMinOccupancyonPopup_MethodExpectedValues == null))
                {
                    this.mverifyMinOccupancyonPopup_MethodExpectedValues = new verifyMinOccupancyonPopup_MethodExpectedValues();
                }
                return this.mverifyMinOccupancyonPopup_MethodExpectedValues;
            }
        }
        
        public UIVillaKapilaInProtaraWindow UIVillaKapilaInProtaraWindow
        {
            get
            {
                if ((this.mUIVillaKapilaInProtaraWindow == null))
                {
                    this.mUIVillaKapilaInProtaraWindow = new UIVillaKapilaInProtaraWindow();
                }
                return this.mUIVillaKapilaInProtaraWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyMinOccupancyonPopup_MethodExpectedValues mverifyMinOccupancyonPopup_MethodExpectedValues;
        
        private UIVillaKapilaInProtaraWindow mUIVillaKapilaInProtaraWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyMinOccupancyonPopup_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class verifyMinOccupancyonPopup_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Please note the minimum occupancy is 2 a' pane contains 'Please note the minimum occupancy is 2 adults or 1 adult and 1 child.
        ///OK '
        /// </summary>
        public string UIPleasenotetheminimumPaneInnerText = "Please note the minimum occupancy is 2 adults or 1 adult and 1 child.\r\nOK ";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaKapilaInProtaraWindow : BrowserWindow
    {
        
        public UIVillaKapilaInProtaraWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaKapilaInProtaraDocument UIVillaKapilaInProtaraDocument
        {
            get
            {
                if ((this.mUIVillaKapilaInProtaraDocument == null))
                {
                    this.mUIVillaKapilaInProtaraDocument = new UIVillaKapilaInProtaraDocument(this);
                }
                return this.mUIVillaKapilaInProtaraDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaKapilaInProtaraDocument mUIVillaKapilaInProtaraDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaKapilaInProtaraDocument : HtmlDocument
    {
        
        public UIVillaKapilaInProtaraDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPleasenotetheminimumPane
        {
            get
            {
                if ((this.mUIPleasenotetheminimumPane == null))
                {
                    this.mUIPleasenotetheminimumPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPleasenotetheminimumPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "AlertInner";
                    this.mUIPleasenotetheminimumPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"AlertInner\"";
                    #endregion
                }
                return this.mUIPleasenotetheminimumPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPleasenotetheminimumPane;
        #endregion
    }
}
