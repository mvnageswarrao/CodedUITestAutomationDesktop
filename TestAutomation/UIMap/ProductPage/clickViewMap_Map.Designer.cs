// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ProductPage.clickViewMap_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class clickViewMap_Map:logWriter
    {
        
        /// <summary>
        /// clickViewMap_Method
        /// </summary>
        public void clickViewMap_Method()
        {
            #region Variable Declarations
            HtmlHyperlink uIViewmapHyperlink = this.UIVillaVolentinaInPuerWindow.UIVillaVolentinaInPuerDocument.UIViewmapHyperlink;
            HtmlDiv uISatellitePane = this.UIVillaVolentinaInPuerWindow.UIVillaVolentinaInPuerDocument.UIFrmLocationMapPopupFrame.UIHttpstaging1villapluDocument.UIGoogleMap_DivPane.UISatellitePane;
            HtmlHyperlink uICloseHyperlink = this.UIVillaVolentinaInPuerWindow.UIVillaVolentinaInPuerDocument.UICloseHyperlink;
            #endregion
            try
            {
                // Click 'View map' link
                Mouse.Click(uIViewmapHyperlink);

                // Click 'Satellite' pane
                Mouse.Click(uISatellitePane);

                // Click 'close' link
                Mouse.Click(uICloseHyperlink);
                WriteLogs("PASS : View Map Popup is Opened");
            }
            catch (AssertFailedException ex)
            {
                WriteLogs("FAIL : View Map Popup is not Opened");
                WriteLogs("-----------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public UIVillaVolentinaInPuerWindow UIVillaVolentinaInPuerWindow
        {
            get
            {
                if ((this.mUIVillaVolentinaInPuerWindow == null))
                {
                    this.mUIVillaVolentinaInPuerWindow = new UIVillaVolentinaInPuerWindow();
                }
                return this.mUIVillaVolentinaInPuerWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaVolentinaInPuerWindow mUIVillaVolentinaInPuerWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaVolentinaInPuerWindow : BrowserWindow
    {
        
        public UIVillaVolentinaInPuerWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaVolentinaInPuerDocument UIVillaVolentinaInPuerDocument
        {
            get
            {
                if ((this.mUIVillaVolentinaInPuerDocument == null))
                {
                    this.mUIVillaVolentinaInPuerDocument = new UIVillaVolentinaInPuerDocument(this);
                }
                return this.mUIVillaVolentinaInPuerDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaVolentinaInPuerDocument mUIVillaVolentinaInPuerDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaVolentinaInPuerDocument : HtmlDocument
    {
        
        public UIVillaVolentinaInPuerDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIViewmapHyperlink
        {
            get
            {
                if ((this.mUIViewmapHyperlink == null))
                {
                    this.mUIViewmapHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIViewmapHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "MainContent_lnkViewOnMap";
                    this.mUIViewmapHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "View map";
                    this.mUIViewmapHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "bold";
                    this.mUIViewmapHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.ControlDefinition, "class=\"bold\" id=\"MainContent_lnkViewOnMa", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIViewmapHyperlink;
            }
        }
        
        public UIFrmLocationMapPopupFrame UIFrmLocationMapPopupFrame
        {
            get
            {
                if ((this.mUIFrmLocationMapPopupFrame == null))
                {
                    this.mUIFrmLocationMapPopupFrame = new UIFrmLocationMapPopupFrame(this);
                }
                return this.mUIFrmLocationMapPopupFrame;
            }
        }
        
        public HtmlHyperlink UICloseHyperlink
        {
            get
            {
                if ((this.mUICloseHyperlink == null))
                {
                    this.mUICloseHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICloseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "close";
                    #endregion
                }
                return this.mUICloseHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIViewmapHyperlink;
        
        private UIFrmLocationMapPopupFrame mUIFrmLocationMapPopupFrame;
        
        private HtmlHyperlink mUICloseHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIFrmLocationMapPopupFrame : HtmlIFrame
    {
        
        public UIFrmLocationMapPopupFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "frmLocationMapPopup";
            this.FilterProperties[HtmlFrame.PropertyNames.AbsolutePath] = "/GoogleMapPage.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.PageUrl, "/GoogleMapPage.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.ControlDefinition, "id=\"frmLocationMapPopup\"", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIHttpstaging1villapluDocument UIHttpstaging1villapluDocument
        {
            get
            {
                if ((this.mUIHttpstaging1villapluDocument == null))
                {
                    this.mUIHttpstaging1villapluDocument = new UIHttpstaging1villapluDocument(this);
                }
                return this.mUIHttpstaging1villapluDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHttpstaging1villapluDocument mUIHttpstaging1villapluDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIHttpstaging1villapluDocument : HtmlDocument
    {
        
        public UIHttpstaging1villapluDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GoogleMapPage.aspx";
            #endregion
        }
        
        #region Properties
        public UIGoogleMap_DivPane UIGoogleMap_DivPane
        {
            get
            {
                if ((this.mUIGoogleMap_DivPane == null))
                {
                    this.mUIGoogleMap_DivPane = new UIGoogleMap_DivPane(this);
                }
                return this.mUIGoogleMap_DivPane;
            }
        }
        #endregion
        
        #region Fields
        private UIGoogleMap_DivPane mUIGoogleMap_DivPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGoogleMap_DivPane : HtmlDiv
    {
        
        public UIGoogleMap_DivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "GoogleMap_Div";
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "id=\"GoogleMap_Div\" ", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UISatellitePane
        {
            get
            {
                if ((this.mUISatellitePane == null))
                {
                    this.mUISatellitePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUISatellitePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Satellite";
                    this.mUISatellitePane.FilterProperties[HtmlDiv.PropertyNames.Title] = "Show satellite imagery";
                    this.mUISatellitePane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "title=\"Show satellite imagery\" ", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUISatellitePane;
            }
        }
        
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUISatellitePane;
        
        private HtmlDiv mUIItemPane;
        #endregion
    }
}
