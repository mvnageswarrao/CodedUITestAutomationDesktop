// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ProductPage.clickCheckAvailabilitybutton_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class clickCheckAvailabilitybutton_Map:logWriter
    {
        
        /// <summary>
        /// clickCheckAvailabilitybutton_Method
        /// </summary>
        public void clickCheckAvailabilitybutton_Method()
        {
            #region Variable Declarations
            HtmlDiv uICheckAvailabilityandPane = this.UIVillaBarbaroInAvlakiWindow.UIVillaBarbaroInAvlakiDocument.UIContentPane.UICheckAvailabilityandPane;
            #endregion

            // Click 'Check Availability and Prices' pane
           //Mouse.Click(uICheckAvailabilityandPane, new Point(83, 28));

            try
            {
                // Click 'Check Availability & Prices' image
                Mouse.Click(uICheckAvailabilityandPane, new Point(83, 28));
                WriteLogs("PASS : Check Availability and Prices button is clicked");
            }
            catch (AssertFailedException ex)
            {
                WriteLogs("PASS : Check Availability and Prices button is not clicked");
                WriteLogs("-----------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public UIVillaPineaInValeVerdWindow UIVillaPineaInValeVerdWindow
        {
            get
            {
                if ((this.mUIVillaPineaInValeVerdWindow == null))
                {
                    this.mUIVillaPineaInValeVerdWindow = new UIVillaPineaInValeVerdWindow();
                }
                return this.mUIVillaPineaInValeVerdWindow;
            }
        }
        
        public UIVillaBarbaroInAvlakiWindow UIVillaBarbaroInAvlakiWindow
        {
            get
            {
                if ((this.mUIVillaBarbaroInAvlakiWindow == null))
                {
                    this.mUIVillaBarbaroInAvlakiWindow = new UIVillaBarbaroInAvlakiWindow();
                }
                return this.mUIVillaBarbaroInAvlakiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPineaInValeVerdWindow mUIVillaPineaInValeVerdWindow;
        
        private UIVillaBarbaroInAvlakiWindow mUIVillaBarbaroInAvlakiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVillaPineaInValeVerdWindow : WinWindow
    {
        
        public UIVillaPineaInValeVerdWindow()
        {
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPineaInValeVerdDocument UIVillaPineaInValeVerdDocument
        {
            get
            {
                if ((this.mUIVillaPineaInValeVerdDocument == null))
                {
                    this.mUIVillaPineaInValeVerdDocument = new UIVillaPineaInValeVerdDocument(this);
                }
                return this.mUIVillaPineaInValeVerdDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPineaInValeVerdDocument mUIVillaPineaInValeVerdDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVillaPineaInValeVerdDocument : HtmlDocument
    {
        
        public UIVillaPineaInValeVerdDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public UIContentPane UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane : HtmlDiv
    {
        
        public UIContentPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.Id, "content", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "id=\"content\"", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.Class, "symbutton-go btngo_pos", PropertyExpressionOperator.Contains));
                    this.mUIItemPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "class=\"symbutton-go btngo_pos\"", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVillaBarbaroInAvlakiWindow : BrowserWindow
    {
        
        public UIVillaBarbaroInAvlakiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaBarbaroInAvlakiDocument UIVillaBarbaroInAvlakiDocument
        {
            get
            {
                if ((this.mUIVillaBarbaroInAvlakiDocument == null))
                {
                    this.mUIVillaBarbaroInAvlakiDocument = new UIVillaBarbaroInAvlakiDocument(this);
                }
                return this.mUIVillaBarbaroInAvlakiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaBarbaroInAvlakiDocument mUIVillaBarbaroInAvlakiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVillaBarbaroInAvlakiDocument : HtmlDocument
    {
        
        public UIVillaBarbaroInAvlakiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public UIContentPane1 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane1(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane1 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane1 : HtmlControl
    {
        
        public UIContentPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.ControlType] = "Pane";
            this.SearchProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.Id, "content", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "id=\"content\"", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICheckAvailabilityandPane
        {
            get
            {
                if ((this.mUICheckAvailabilityandPane == null))
                {
                    this.mUICheckAvailabilityandPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICheckAvailabilityandPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Check Availability \r\n and Prices ", PropertyExpressionOperator.Contains));
                    this.mUICheckAvailabilityandPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.Title, "Check Availability & Prices", PropertyExpressionOperator.Contains));
                    this.mUICheckAvailabilityandPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.Class, "btn orangeGrad margin-bottom20", PropertyExpressionOperator.Contains));
                    this.mUICheckAvailabilityandPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "title=\"Check Availability &amp; Prices\" class=\"btn orangeGrad margin-bottom20\" ", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUICheckAvailabilityandPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICheckAvailabilityandPane;
        #endregion
    }
}
