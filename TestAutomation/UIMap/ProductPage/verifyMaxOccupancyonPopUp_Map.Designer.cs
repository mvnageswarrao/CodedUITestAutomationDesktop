// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ProductPage.verifyMaxOccupancyonPopUp_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyMaxOccupancyonPopUp_Map:logWriter
    {
        
        /// <summary>
        /// verifyMaxOccupancyonPopUp_Method - Use 'verifyMaxOccupancyonPopUp_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyMaxOccupancyonPopUp_Method(int maxoccupancy)
        {
            #region Variable Declarations
            HtmlDiv uIYoucannotselectmoretPane = this.UISaraInCalanPorterMenWindow.UISaraInCalanPorterMenDocument.UIYoucannotselectmoretPane;
            #endregion

            // Verify that the 'InnerText' property of 'You can not select more than 7 members i' pane contains '7'
            //StringAssert.Contains(uIYoucannotselectmoretPane.InnerText, this.verifyMaxOccupancyonPopUp_MethodExpectedValues.UIYoucannotselectmoretPaneInnerText);
            try
            {
                StringAssert.Contains(uIYoucannotselectmoretPane.InnerText, maxoccupancy.ToString());
                WriteLogs("PASS : Availability Tab - Max Occupancy.");
            }
            catch (AssertFailedException ex)
            {
                WriteLogs("FAIL : Availability Tab - Max Occupancy.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual verifyMaxOccupancyonPopUp_MethodExpectedValues verifyMaxOccupancyonPopUp_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyMaxOccupancyonPopUp_MethodExpectedValues == null))
                {
                    this.mverifyMaxOccupancyonPopUp_MethodExpectedValues = new verifyMaxOccupancyonPopUp_MethodExpectedValues();
                }
                return this.mverifyMaxOccupancyonPopUp_MethodExpectedValues;
            }
        }
        
        public UISaraInCalanPorterMenWindow UISaraInCalanPorterMenWindow
        {
            get
            {
                if ((this.mUISaraInCalanPorterMenWindow == null))
                {
                    this.mUISaraInCalanPorterMenWindow = new UISaraInCalanPorterMenWindow();
                }
                return this.mUISaraInCalanPorterMenWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyMaxOccupancyonPopUp_MethodExpectedValues mverifyMaxOccupancyonPopUp_MethodExpectedValues;
        
        private UISaraInCalanPorterMenWindow mUISaraInCalanPorterMenWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyMaxOccupancyonPopUp_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyMaxOccupancyonPopUp_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'You can not select more than 7 members i' pane contains '7'
        /// </summary>
        public string UIYoucannotselectmoretPaneInnerText = "7";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISaraInCalanPorterMenWindow : BrowserWindow
    {
        
        public UISaraInCalanPorterMenWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, " | Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISaraInCalanPorterMenDocument UISaraInCalanPorterMenDocument
        {
            get
            {
                if ((this.mUISaraInCalanPorterMenDocument == null))
                {
                    this.mUISaraInCalanPorterMenDocument = new UISaraInCalanPorterMenDocument(this);
                }
                return this.mUISaraInCalanPorterMenDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISaraInCalanPorterMenDocument mUISaraInCalanPorterMenDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISaraInCalanPorterMenDocument : HtmlDocument
    {
        
        public UISaraInCalanPorterMenDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, " | Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/product.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/product.aspx?villaid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIYoucannotselectmoretPane
        {
            get
            {
                if ((this.mUIYoucannotselectmoretPane == null))
                {
                    this.mUIYoucannotselectmoretPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIYoucannotselectmoretPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIYoucannotselectmoretPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIYoucannotselectmoretPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "You can not select more than 7 members i";
                    this.mUIYoucannotselectmoretPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIYoucannotselectmoretPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "AlertInner";
                    this.mUIYoucannotselectmoretPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"AlertInner\"";
                    this.mUIYoucannotselectmoretPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "325";
                    this.mUIYoucannotselectmoretPane.WindowTitles.Add("Sara In Calan Porter, Menorca | Villa Plus");
                    #endregion
                }
                return this.mUIYoucannotselectmoretPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIYoucannotselectmoretPane;
        #endregion
    }
}
