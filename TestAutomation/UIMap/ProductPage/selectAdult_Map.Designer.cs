// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ProductPage.selectAdult_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using System.Configuration;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class selectAdult_Map:logWriter
    {
        
        /// <summary>
        /// selectAdult_Method - Use 'selectAdult_MethodParams' to pass parameters into this method.
        /// </summary>
        public void selectAdult_Method()
        {
            #region Variable Declarations
            HtmlComboBox uIDdAdultsComboBox = this.UIVillaPoppyPolisCypruWindow.UIVillaPoppyPolisCypruDocument.UIDdAdultsComboBox;
            #endregion

            // Select '2' in 'ddAdults' combo box
            uIDdAdultsComboBox.SelectedItem = this.selectAdult_MethodParams.UIDdAdultsComboBoxSelectedItem;
                        
        }

        public void selectAdultForBookings_Method()
        {
            #region Variable Declarations
            HtmlComboBox uIDdAdultsComboBox = this.UIVillaPoppyPolisCypruWindow.UIVillaPoppyPolisCypruDocument.UIDdAdultsComboBox;
            #endregion

            // Select '2' in 'ddAdults' combo box
            uIDdAdultsComboBox.SelectedItem = ConfigurationManager.AppSettings["NoofAdults"].ToString();

        }

        public void selectAdultbyreducing_Method(int ADultsSELECTION)
        {
            #region Variable Declarations
            HtmlComboBox uIDdAdultsComboBox = this.UIVillaPoppyPolisCypruWindow.UIVillaPoppyPolisCypruDocument.UIDdAdultsComboBox;
            #endregion

            //int AppConfigValue =Convert.ToInt32(ConfigurationSettings.AppSettings["NoofAdults"]);
            //AppConfigValue = AppConfigValue - 1;

            //uIDdAdultsComboBox.SelectedIndex = AppConfigValue;

            uIDdAdultsComboBox.SelectedIndex = ADultsSELECTION;
            WriteLogs("INFO : Num Of Adults is Reduced to " + ADultsSELECTION + " as Your Selection is Crossed Max Occupancy.");
        }

        public HtmlComboBox getselectAdultDropDown_Method()
        {
            #region Variable Declarations
            HtmlComboBox uIDdAdultsComboBox = this.UIVillaPoppyPolisCypruWindow.UIVillaPoppyPolisCypruDocument.UIDdAdultsComboBox;
            #endregion

            return uIDdAdultsComboBox;
        }

        public void verifyAdultCount_Method()
        {
            #region Variable Declarations
            HtmlComboBox uIDdAdultsComboBox = this.UIVillaPoppyPolisCypruWindow.UIVillaPoppyPolisCypruDocument.UIDdAdultsComboBox;
            #endregion

            // Select '2' in 'ddAdults' combo box
            //uIDdAdultsComboBox.SelectedItem = this.selectAdult_MethodParams.UIDdAdultsComboBoxSelectedItem;
            
        }
        
        #region Properties
        public virtual selectAdult_MethodParams selectAdult_MethodParams
        {
            get
            {
                if ((this.mselectAdult_MethodParams == null))
                {
                    this.mselectAdult_MethodParams = new selectAdult_MethodParams();
                }
                return this.mselectAdult_MethodParams;
            }
        }
        
        public UIVillaPoppyPolisCypruWindow UIVillaPoppyPolisCypruWindow
        {
            get
            {
                if ((this.mUIVillaPoppyPolisCypruWindow == null))
                {
                    this.mUIVillaPoppyPolisCypruWindow = new UIVillaPoppyPolisCypruWindow();
                }
                return this.mUIVillaPoppyPolisCypruWindow;
            }
        }
        #endregion
        
        #region Fields
        private selectAdult_MethodParams mselectAdult_MethodParams;
        
        private UIVillaPoppyPolisCypruWindow mUIVillaPoppyPolisCypruWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'selectAdult_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class selectAdult_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select '2' in 'ddAdults' combo box
        /// </summary>
        public string UIDdAdultsComboBoxSelectedItem = "2";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIVillaPoppyPolisCypruWindow : BrowserWindow
    {
        
        public UIVillaPoppyPolisCypruWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPoppyPolisCypruDocument UIVillaPoppyPolisCypruDocument
        {
            get
            {
                if ((this.mUIVillaPoppyPolisCypruDocument == null))
                {
                    this.mUIVillaPoppyPolisCypruDocument = new UIVillaPoppyPolisCypruDocument(this);
                }
                return this.mUIVillaPoppyPolisCypruDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPoppyPolisCypruDocument mUIVillaPoppyPolisCypruDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIVillaPoppyPolisCypruDocument : HtmlDocument
    {
        
        public UIVillaPoppyPolisCypruDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/product.aspx";
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIDdAdultsComboBox
        {
            get
            {
                if ((this.mUIDdAdultsComboBox == null))
                {
                    this.mUIDdAdultsComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDdAdultsComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "MainContent_VillaAvailability_ddAdults";
                    this.mUIDdAdultsComboBox.SearchProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.Name, "$VillaAvailability$ddAdults", PropertyExpressionOperator.Contains));
                    this.mUIDdAdultsComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIDdAdultsComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "";
                    this.mUIDdAdultsComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = "";
                    this.mUIDdAdultsComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "";
                    this.mUIDdAdultsComboBox.FilterProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.ControlDefinition, "id=MainContent_VillaAvailability_ddAdult", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIDdAdultsComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIDdAdultsComboBox;
        #endregion
    }
}
