// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.ProductPage.verifyVeryVillaPlus_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class verifyVeryVillaPlus_Map:logWriter
    {
        
        /// <summary>
        /// verifyVeryVillaPlus_Method - Use 'verifyVeryVillaPlus_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyVeryVillaPlus_Method()
        {
            #region Variable Declarations
            HtmlImage uIVeryVillaPlusImage = this.UIVillaFilipaGuiaAlgarWindow.UIVillaFilipaGuiaAlgarDocument.UIVeryVillaPlusImage;
            #endregion

            // Verify that the 'Title' property of 'Very Villa Plus' image equals 'Very Villa Plus'
            try
            {
                Assert.AreEqual(this.verifyVeryVillaPlus_MethodExpectedValues.UIVeryVillaPlusImageTitle, uIVeryVillaPlusImage.Title);
                WriteLogs("PASS : Very Villa Plus.");
            }
            catch (AssertFailedException ex)
            {
                WriteLogs("FAIL : Very Villa Plus.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
        }

        public Boolean getVeryVillaPlus_Method()
        {
            #region Variable Declarations
            HtmlImage uIVeryVillaPlusImage = this.UIVillaFilipaGuiaAlgarWindow.UIVillaFilipaGuiaAlgarDocument.UIVeryVillaPlusImage;
            #endregion

            Boolean IsVeryVillaPlusVilla = uIVeryVillaPlusImage.Exists;
            return IsVeryVillaPlusVilla;
        }
        #region Properties
        public virtual verifyVeryVillaPlus_MethodExpectedValues verifyVeryVillaPlus_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyVeryVillaPlus_MethodExpectedValues == null))
                {
                    this.mverifyVeryVillaPlus_MethodExpectedValues = new verifyVeryVillaPlus_MethodExpectedValues();
                }
                return this.mverifyVeryVillaPlus_MethodExpectedValues;
            }
        }
        
        public UIVillaFilipaGuiaAlgarWindow UIVillaFilipaGuiaAlgarWindow
        {
            get
            {
                if ((this.mUIVillaFilipaGuiaAlgarWindow == null))
                {
                    this.mUIVillaFilipaGuiaAlgarWindow = new UIVillaFilipaGuiaAlgarWindow();
                }
                return this.mUIVillaFilipaGuiaAlgarWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyVeryVillaPlus_MethodExpectedValues mverifyVeryVillaPlus_MethodExpectedValues;
        
        private UIVillaFilipaGuiaAlgarWindow mUIVillaFilipaGuiaAlgarWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyVeryVillaPlus_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class verifyVeryVillaPlus_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Title' property of 'Very Villa Plus' image equals 'Very Villa Plus'
        /// </summary>
        public string UIVeryVillaPlusImageTitle = "Very Villa Plus";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIVillaFilipaGuiaAlgarWindow : BrowserWindow
    {
        
        public UIVillaFilipaGuiaAlgarWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaFilipaGuiaAlgarDocument UIVillaFilipaGuiaAlgarDocument
        {
            get
            {
                if ((this.mUIVillaFilipaGuiaAlgarDocument == null))
                {
                    this.mUIVillaFilipaGuiaAlgarDocument = new UIVillaFilipaGuiaAlgarDocument(this);
                }
                return this.mUIVillaFilipaGuiaAlgarDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaFilipaGuiaAlgarDocument mUIVillaFilipaGuiaAlgarDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIVillaFilipaGuiaAlgarDocument : HtmlDocument
    {
        
        public UIVillaFilipaGuiaAlgarDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/product.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/product.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlImage UIVeryVillaPlusImage
        {
            get
            {
                if ((this.mUIVeryVillaPlusImage == null))
                {
                    this.mUIVeryVillaPlusImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIVeryVillaPlusImage.SearchProperties[HtmlImage.PropertyNames.Id] = "MainContent_imgVillaType2";
                    this.mUIVeryVillaPlusImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIVeryVillaPlusImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIVeryVillaPlusImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.AbsolutePath, "very-villa-plus-small.png", PropertyExpressionOperator.Contains));
                    this.mUIVeryVillaPlusImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "very-villa-plus-small.png", PropertyExpressionOperator.Contains));
                    this.mUIVeryVillaPlusImage.FilterProperties[HtmlImage.PropertyNames.Class] = "padding-left5";
                    this.mUIVeryVillaPlusImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=MainContent_imgVillaType2 class=paddi";
                    this.mUIVeryVillaPlusImage.WindowTitles.Add("Villa Filipa, Guia, Algarve, Villa Plus");
                    #endregion
                }
                return this.mUIVeryVillaPlusImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIVeryVillaPlusImage;
        #endregion
    }
}
