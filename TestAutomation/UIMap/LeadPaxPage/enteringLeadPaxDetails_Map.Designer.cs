// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation.UIMap.LeadPaxPage.enteringLeadPaxDetails_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation.Utility;
    using System.Configuration;
    //using System.Windows.Forms;

    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class enteringLeadPaxDetails_Map:logWriter
    {
        
        /// <summary>
        /// enteringLeadPaxDetails_Method - Use 'enteringLeadPaxDetails_MethodParams' to pass parameters into this method.
        /// </summary>
        public string enteringLeadPaxDetails_Method(string whichPLATFORM)
        {
            #region Variable Declarations
            HtmlComboBox uIDdlMrComboBox = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UIDdlMrComboBox;
            HtmlEdit uITxtFnameEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtFnameEdit;
            HtmlEdit uITxtLnameEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtLnameEdit;
            HtmlComboBox uIDdlAgeComboBox = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UIDdlAgeComboBox;
            HtmlComboBox uIDdlNationalityComboBox = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UIDdlNationalityComboBox;
            HtmlEdit uITxtEmailEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtEmailEdit;
            HtmlEdit uITxtConfirmEmailEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtConfirmEmailEdit;
            HtmlEdit uITxtHomeEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtHomeEdit;
            HtmlEdit uITxtMobileEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtMobileEdit;
            #endregion

            string EmailID = ConfigurationManager.AppSettings["EmailID"].ToString();
            string ConfEmailID = ConfigurationManager.AppSettings["ConfEmailID"].ToString();
            string LeadFullName = string.Empty;
            whichPLATFORM = whichPLATFORM.ToLower();

            try
            {
                // Select 'Mr' in 'ddlMr' combo box
                uIDdlMrComboBox.SelectedItem = this.enteringLeadPaxDetails_MethodParams.UIDdlMrComboBoxSelectedItem;

                // Type 'Test Automation' in 'txtFname' text box
                
                uITxtFnameEdit.Text = this.enteringLeadPaxDetails_MethodParams.UITxtFnameEditText;

                Playback.PlaybackSettings.ContinueOnError = true;
                if (whichPLATFORM == "desktoptest")
                {
                    uITxtLnameEdit.Text = "Test Automation DT";
                }
                else if (whichPLATFORM == "desktoplive")
                {
                    uITxtLnameEdit.Text = "Test Automation DL";
                }
                else if (whichPLATFORM == "tablettest")
                {
                    uITxtLnameEdit.Text = "Test Automation TT";
                }
                else if (whichPLATFORM == "tabletlive")
                {
                    uITxtLnameEdit.Text = "Test Automation TL";
                }
                else
                {
                    uITxtLnameEdit.Text = "Test Automation";
                }

                // Select '18-25' in 'ddlAge' combo box
                uIDdlAgeComboBox.SelectedItem = this.enteringLeadPaxDetails_MethodParams.UIDdlAgeComboBoxSelectedItem;

                // Select 'United Kingdom' in 'ddlNationality' combo box
                uIDdlNationalityComboBox.SelectedItem = this.enteringLeadPaxDetails_MethodParams.UIDdlNationalityComboBoxSelectedItem;

                // Type 'veera@ash-software.com' in 'txtEmail' text box
                //uITxtEmailEdit.Text = EmailID;
                //uITxtEmailEdit.Text = uITxtEmailEdit.Text.Insert(0, EmailID);
                uITxtEmailEdit.SetFocus();
                uITxtEmailEdit.CopyPastedText = EmailID;

                // Type 'veera@ash-software.com' in 'txtConfirmEmail' text box
                //uITxtConfirmEmailEdit.Text = ConfEmailID;
                uITxtConfirmEmailEdit.SetFocus();
                uITxtConfirmEmailEdit.Text = uITxtConfirmEmailEdit.CopyPastedText.Insert(0, EmailID);
                //uITxtEmailEdit.Text = uITxtEmailEdit.Text.Insert(0, ConfEmailID);


                // Type '111111111111111' in 'txtHome' text box
                //uITxtHomeEdit.Text = this.enteringLeadPaxDetails_MethodParams.UITxtHomeEditText;
                uITxtHomeEdit.SetFocus();
                uITxtHomeEdit.Text= uITxtHomeEdit.CopyPastedText.Insert(0, this.enteringLeadPaxDetails_MethodParams.UITxtHomeEditText);

                // Type '22222222222222' in 'txtMobile' text box
                //uITxtMobileEdit.Text = this.enteringLeadPaxDetails_MethodParams.UITxtMobileEditText;
                uITxtMobileEdit.SetFocus();
                uITxtMobileEdit.Text=uITxtMobileEdit.CopyPastedText.Insert(0, this.enteringLeadPaxDetails_MethodParams.UITxtMobileEditText);

                LeadFullName = uITxtFnameEdit.Text + " " + uITxtLnameEdit.Text;

                WriteLogs("PASS : Entered Lead Pax Details.");
            }

            catch (AssertFailedException ex)
            {
                takeImage("enteringLeadPaxDetails");
                WriteLogs("FAIL : Could Not Enter Lead Pax Details.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }

            return LeadFullName;
        }

        public void ChangingEMAILIDsFrmLeadPax_Method()
        {
            #region Variable Declarations
            HtmlComboBox uIDdlMrComboBox = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UIDdlMrComboBox;
            HtmlEdit uITxtFnameEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtFnameEdit;
            HtmlEdit uITxtLnameEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtLnameEdit;
            HtmlComboBox uIDdlAgeComboBox = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UIDdlAgeComboBox;
            HtmlComboBox uIDdlNationalityComboBox = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UIDdlNationalityComboBox;
            HtmlEdit uITxtEmailEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtEmailEdit;
            HtmlEdit uITxtConfirmEmailEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtConfirmEmailEdit;
            HtmlEdit uITxtHomeEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtHomeEdit;
            HtmlEdit uITxtMobileEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtMobileEdit;
            #endregion
          //  changing email id from lead pax page
            string EmailID = "testAutomation";
            string ConfEmailID = "testAutomation";

            Random rnd = new Random();
            int rndnum = rnd.Next(0, 100000);

            try
            {
                uITxtEmailEdit.Text = EmailID + rndnum + "@ash-software.com";
                uITxtConfirmEmailEdit.Text = ConfEmailID + rndnum + "@ash-software.com";
                WriteLogs("PASS : Modified Email IDs From Lead Pax Page.");
            }

            catch (AssertFailedException ex)
            {
                takeImage("ChangingEMAILIDsFrmLeadPax");
                WriteLogs("FAIL : Could Not Modify Email IDs From Lead Pax Page.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }

            // Changing mobile number and home number from lead pax page.
            try
            {

                uITxtHomeEdit.Text = GenerateNumber();
                uITxtMobileEdit.Text = GenerateNumber();
                WriteLogs("PASS : Modified mobile number From Lead Pax Page.");
            }            
                
            

            catch (AssertFailedException ex)
            {
                takeImage("ChangingEMAILIDsFrmLeadPax");
                WriteLogs("FAIL : Could Not Modify mobile number From Lead Pax Page.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
        
                       
        }

        //public HtmlEdit enteringFnameInLeadPax_Method()
        //{
        //    #region Variable Declarations
        //    HtmlEdit uITxtFnameEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtFnameEdit;
        //    #endregion

        //    return uITxtFnameEdit;
        // }

        //public HtmlEdit enteringLnameInLeadPax_Method()
        //{
        //    #region Variable Declarations
        //    HtmlEdit uITxtLnameEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtLnameEdit;
        //    #endregion

        //    return uITxtLnameEdit;
        //}

        //public HtmlEdit modifyEMAILInLeadPax_Method()
        //{
        //    #region Variable Declarations
        //    HtmlEdit uITxtEmailEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtEmailEdit;
        //    #endregion

        //    char CforFname = 'B';
        //    foreach (HtmlEdit Edit in ChildFname)
        //    {
        //        Edit.Text = "Test FName" + CforFname;
        //        CforFname++;
        //    }

        //    return uITxtEmailEdit;
        //}

        //public HtmlEdit enteringConfirmEMAILInLeadPax_Method()
        //{
        //    #region Variable Declarations
        //    HtmlEdit uITxtConfirmEmailEdit = this.UIAllocateLeadPassengeWindow.UIAllocateLeadPassengeDocument.UITxtConfirmEmailEdit;
        //    #endregion

        //    return uITxtConfirmEmailEdit;
        //}
        
        #region Properties
        public virtual enteringLeadPaxDetails_MethodParams enteringLeadPaxDetails_MethodParams
        {
            get
            {
                if ((this.menteringLeadPaxDetails_MethodParams == null))
                {
                    this.menteringLeadPaxDetails_MethodParams = new enteringLeadPaxDetails_MethodParams();
                }
                return this.menteringLeadPaxDetails_MethodParams;
            }
        }
        
        public UIAllocateLeadPassengeWindow UIAllocateLeadPassengeWindow
        {
            get
            {
                if ((this.mUIAllocateLeadPassengeWindow == null))
                {
                    this.mUIAllocateLeadPassengeWindow = new UIAllocateLeadPassengeWindow();
                }
                return this.mUIAllocateLeadPassengeWindow;
            }
        }
        #endregion
        
        #region Fields
        private enteringLeadPaxDetails_MethodParams menteringLeadPaxDetails_MethodParams;
        
        private UIAllocateLeadPassengeWindow mUIAllocateLeadPassengeWindow;
        #endregion
        public string GenerateNumber()
        {
            Random random = new Random();
            string r = "";
            int i;
            for (i = 1; i < 11; i++)
            {
                r += random.Next(0, 9).ToString();
            }
            return r;
        }

    }
    
    /// <summary>
    /// Parameters to be passed into 'enteringLeadPaxDetails_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class enteringLeadPaxDetails_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Mr' in 'ddlMr' combo box
        /// </summary>
        public string UIDdlMrComboBoxSelectedItem = "Mr";
        
        /// <summary>
        /// Type 'Test Automation' in 'txtFname' text box
        /// </summary>
        public string UITxtFnameEditText = "Test Automation";
        
        /// <summary>
        /// Type 'Test Last Name' in 'txtLname' text box
        /// </summary>
        public string UITxtLnameEditText = "Test Last Name";
        
        /// <summary>
        /// Select '18-25' in 'ddlAge' combo box
        /// </summary>
        public string UIDdlAgeComboBoxSelectedItem = "18-25";
        
        /// <summary>
        /// Select 'United Kingdom' in 'ddlNationality' combo box
        /// </summary>
        public string UIDdlNationalityComboBoxSelectedItem = "United Kingdom";
        
        /// <summary>
        /// Type 'veera@ash-software.com' in 'txtEmail' text box
        /// </summary>
        public string UITxtEmailEditText = "veera@ash-software.com";
        
        /// <summary>
        /// Type 'veera@ash-software.com' in 'txtConfirmEmail' text box
        /// </summary>
        public string UITxtConfirmEmailEditText = "veera@ash-software.com";
        
        /// <summary>
        /// Type '111111111111111' in 'txtHome' text box
        /// </summary>
        public string UITxtHomeEditText = "111111111111111";
        
        /// <summary>
        /// Type '22222222222222' in 'txtMobile' text box
        /// </summary>
        public string UITxtMobileEditText = "22222222222222";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAllocateLeadPassengeWindow : BrowserWindow
    {
        
        public UIAllocateLeadPassengeWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Allocate Lead Passenger", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Allocate Lead Passenger");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAllocateLeadPassengeDocument UIAllocateLeadPassengeDocument
        {
            get
            {
                if ((this.mUIAllocateLeadPassengeDocument == null))
                {
                    this.mUIAllocateLeadPassengeDocument = new UIAllocateLeadPassengeDocument(this);
                }
                return this.mUIAllocateLeadPassengeDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAllocateLeadPassengeDocument mUIAllocateLeadPassengeDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAllocateLeadPassengeDocument : HtmlDocument
    {
        
        public UIAllocateLeadPassengeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Allocate Lead Passenger", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/code_net/booking/allocateLeadPax.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/code_net/booking/allocateLeadPax.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Allocate Lead Passenger");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIDdlMrComboBox
        {
            get
            {
                if ((this.mUIDdlMrComboBox == null))
                {
                    this.mUIDdlMrComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDdlMrComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ddlMr";
                    this.mUIDdlMrComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ddlMr";
                    this.mUIDdlMrComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "greyText";
                    this.mUIDdlMrComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"ddlMr\" class=\"greyText\" id=\"ddlMr\"";
                    this.mUIDdlMrComboBox.WindowTitles.Add("Allocate Lead Passenger");
                    #endregion
                }
                return this.mUIDdlMrComboBox;
            }
        }
        
        public HtmlEdit UITxtFnameEdit
        {
            get
            {
                if ((this.mUITxtFnameEdit == null))
                {
                    this.mUITxtFnameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtFnameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtFname";
                    this.mUITxtFnameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtFname";
                    this.mUITxtFnameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtFnameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "greyText";
                    this.mUITxtFnameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"txtFname\" class=\"greyText\" id=\"txt";
                    this.mUITxtFnameEdit.WindowTitles.Add("Allocate Lead Passenger");
                    #endregion
                }
                return this.mUITxtFnameEdit;
            }
        }
        
        public HtmlEdit UITxtLnameEdit
        {
            get
            {
                if ((this.mUITxtLnameEdit == null))
                {
                    this.mUITxtLnameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtLnameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtLname";
                    this.mUITxtLnameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtLname";
                    this.mUITxtLnameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtLnameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "greyText";
                    this.mUITxtLnameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"txtLname\" class=\"greyText\" id=\"txt";
                    this.mUITxtLnameEdit.WindowTitles.Add("Allocate Lead Passenger");
                    #endregion
                }
                return this.mUITxtLnameEdit;
            }
        }
        
        public HtmlComboBox UIDdlAgeComboBox
        {
            get
            {
                if ((this.mUIDdlAgeComboBox == null))
                {
                    this.mUIDdlAgeComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDdlAgeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ddlAge";
                    this.mUIDdlAgeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ddlAge";
                    this.mUIDdlAgeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "greyText";
                    this.mUIDdlAgeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"ddlAge\" class=\"greyText\" id=\"ddlAg";
                    this.mUIDdlAgeComboBox.WindowTitles.Add("Allocate Lead Passenger");
                    #endregion
                }
                return this.mUIDdlAgeComboBox;
            }
        }
        
        public HtmlComboBox UIDdlNationalityComboBox
        {
            get
            {
                if ((this.mUIDdlNationalityComboBox == null))
                {
                    this.mUIDdlNationalityComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDdlNationalityComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ddlNationality";
                    this.mUIDdlNationalityComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ddlNationality";
                    this.mUIDdlNationalityComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "greyText";
                    this.mUIDdlNationalityComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"ddlNationality\" class=\"greyText\" i";
                    this.mUIDdlNationalityComboBox.WindowTitles.Add("Allocate Lead Passenger");
                    #endregion
                }
                return this.mUIDdlNationalityComboBox;
            }
        }
        
        public HtmlEdit UITxtEmailEdit
        {
            get
            {
                if ((this.mUITxtEmailEdit == null))
                {
                    this.mUITxtEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtEmail";
                    this.mUITxtEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtEmail";
                    this.mUITxtEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "greyText";
                    this.mUITxtEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"txtEmail\" class=\"greyText\" id=\"txt";
                    this.mUITxtEmailEdit.WindowTitles.Add("Allocate Lead Passenger");
                    #endregion
                }
                return this.mUITxtEmailEdit;
            }
        }
        
        public HtmlEdit UITxtConfirmEmailEdit
        {
            get
            {
                if ((this.mUITxtConfirmEmailEdit == null))
                {
                    this.mUITxtConfirmEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtConfirmEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtConfirmEmail";
                    this.mUITxtConfirmEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtConfirmEmail";
                    this.mUITxtConfirmEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtConfirmEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "greyText";
                    this.mUITxtConfirmEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"txtConfirmEmail\" class=\"greyText\" ";
                    this.mUITxtConfirmEmailEdit.WindowTitles.Add("Allocate Lead Passenger");
                    #endregion
                }
                return this.mUITxtConfirmEmailEdit;
            }
        }
        
        public HtmlEdit UITxtHomeEdit
        {
            get
            {
                if ((this.mUITxtHomeEdit == null))
                {
                    this.mUITxtHomeEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtHomeEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtHome";
                    this.mUITxtHomeEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtHome";
                    this.mUITxtHomeEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtHomeEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "greyText";
                    this.mUITxtHomeEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"txtHome\" class=\"greyText\" id=\"txtH";
                    this.mUITxtHomeEdit.WindowTitles.Add("Allocate Lead Passenger");
                    #endregion
                }
                return this.mUITxtHomeEdit;
            }
        }
        
        public HtmlEdit UITxtMobileEdit
        {
            get
            {
                if ((this.mUITxtMobileEdit == null))
                {
                    this.mUITxtMobileEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtMobileEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtMobile";
                    this.mUITxtMobileEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtMobile";
                    this.mUITxtMobileEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtMobileEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "greyText";
                    this.mUITxtMobileEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"txtMobile\" class=\"greyText\" id=\"tx";
                    this.mUITxtMobileEdit.WindowTitles.Add("Allocate Lead Passenger");
                    #endregion
                }
                return this.mUITxtMobileEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIDdlMrComboBox;
        
        private HtmlEdit mUITxtFnameEdit;
        
        private HtmlEdit mUITxtLnameEdit;
        
        private HtmlComboBox mUIDdlAgeComboBox;
        
        private HtmlComboBox mUIDdlNationalityComboBox;
        
        private HtmlEdit mUITxtEmailEdit;
        
        private HtmlEdit mUITxtConfirmEmailEdit;
        
        private HtmlEdit mUITxtHomeEdit;
        
        private HtmlEdit mUITxtMobileEdit;
        #endregion
    }
    
  

}
